{
  "openapi": "3.1.0",
  "info": {
    "title": "Aspen Discovery API",
    "version": "1.0.0",
    "license": {
      "name": "GPL v2",
      "url": "https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt"
    },
    "description": "The API provided by Aspen Discovery for use in other applications, mobile apps, etc."
  },
  "servers": [
    {
      "url": "https://{aspenDomain}/{basePath}",
      "variables": {
        "aspenDomain": {
          "default": "example.aspendiscovery.org",
          "description": "The URL of the Aspen instance"
        },
        "basePath": {
          "default": "API"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "CommunityAPI"
    },
    {
      "name": "EventAPI"
    },
    {
      "name": "FineAPI"
    },
    {
      "name": "GreenhouseAPI"
    },
    {
      "name": "ItemAPI"
    },
    {
      "name": "ListAPI"
    },
    {
      "name": "RegistrationAPI"
    },
    {
      "name": "SearchAPI"
    },
    {
      "name": "SystemAPI"
    },
    {
      "name": "UserAPI"
    },
    {
      "name": "WorkAPI"
    }
  ],
  "paths": {
    "/ListAPI?method=getListTitles": {
      "get": {
        "tags": [
          "ListAPI"
        ],
        "summary": "Get information of a list",
        "description": "Returns list of items and list metadata about a particular list made by a patron or staff.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the list to return information about",
            "example": "42"
          },
          {
            "in": "query",
            "name": "numTitles",
            "schema": {
              "type": "integer",
              "default": "25"
            },
            "description": "The number of work/titles within the list to return",
            "example": "42"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": "1"
            },
            "description": "The page of Results to return (rephrase)",
            "example": "4"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAPIResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/SystemAPI?method=getLocalIllForm": {
      "get": {
        "tags": [
          "SystemAPI"
        ],
        "summary": "Get Local ILL Form",
        "description": "Returns information needed to display a Local ILL Form to the user.",
        "parameters": [
          {
            "in": "query",
            "name": "formId",
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the form to return information about",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalIllFormResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/UserAPI?method=isLoggedIn": {
      "get": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Login status",
        "description": "Determines if a user is logged in based on session information in the active browser. Typically not useful because the calling application will not be using the same browser as the patron.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/UserAPI?method=login": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Login user",
        "description": "Logs in the user, sets a cookie indicating that the user is logged in, and returns the session_id for the new session. In general, this method is only useful when called from Aspen itself or from files that share cookies with the Aspen server.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "The username or barcode for the patron",
            "example": "23025003575917"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "description": "The password or pin for the patron",
            "example": "7604"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/UserAPI?method=submitLocalIllRequest": {
      "post": {
        "tags": [
          "UserAPI"
        ],
        "summary": "Submit Local ILL Request",
        "description": "Submits a Local ILL Request for the user.",
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "The username or barcode for the patron",
            "example": "23025003575917"
          },
          {
            "in": "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "description": "The password or pin for the patron",
            "example": "7604"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "BadRequest": {
        "description": "Bad Request - Invalid method or parameters",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "invalid_method"
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - Request requires authentication",
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "unauthorized_access"
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found.",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "schemas": {
      "BasicResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          }
        }
      },
      "BasicAPIResult": {
        "type": "object",
        "properties": {
          "result": {
            "success": {
              "type": "boolean",
              "description": "Whether the user method was successful or not",
              "example": "true"
            },
            "message": {
              "type": "string",
              "description": "Additional information about why the method failed or information about the success suitable for display to the patron"
            },
            "title": {
              "type": "string",
              "nullable": "true",
              "description": "The title of the message for display to the patron"
            }
          }
        }
      },
      "FormFieldResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of field to display"
              },
              "property": {
                "type": "string",
                "description": "The property the field is representing. Should not be shown to the user"
              },
              "display": {
                "type": "string",
                "description": "Has values of show or hide to determine if the form should be shown to the user"
              },
              "label": {
                "type": "string",
                "description": "The label for the field"
              },
              "description": {
                "type": "string",
                "description": "The description for the field, can be shown as a tooltip or under the field"
              },
              "required": {
                "type": "boolean",
                "description": "Whether the field must be filled out by the patron"
              }
            }
          }
        }
      },
      "ListAPIItemResult": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "description": "Author of the work", 
            "example": "Ellison, Ralph"
          },
          "description": {
            "type": "string",
            "description": "brief synopsis of book"
          },
          "format": {
            "type": "array",
            "description": "mediums (book, e-book, cassette) that the work is available",
            "items": {
              "type": "string"
            }, 
            "example": [
                    "Book",
                    "eAudiobook",
                    "Audiobook CD",
                    "eBook"
                ]
          },
          "id": {
            "type": "string",
            "description": "Unique ID"
          },
          "image": {
            "type": "string",
            "description": "URL partial for an image of 200px height"
          },
          "language": {
            "type": "array",
            "description": "language(s) that the work is recorded in",
            "items": {
              "type": "string"
            }
          },
          "length": {
            "type": "string",
            "description": "unkwown how this is used"
          },
          "publisher": {
            "type": "string",
            "description": "publisher of the work"
          },
          "recordType": {
            "type": "string",
            "description": "TO ADD, typically grouped_work"
          },
          "small_image": {
            "type": "string",
            "description": "URL partial for an image of 100px height"
          },
          "title": {
            "type": "string",
            "description": "Title of the work",
            "example": "Invisible Man"
          },
          "titleURL": {
            "type": "string",
            "description": "Full URL to access the title in the catalog"
          }
        }
      },
      "ListAPIResult": {
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "description": "Whether the user method was successful or not",
                "example": "true"
              },
              "listTitle": {
                "type": "string",
                "description": "Title of the user's list", 
                "example": "Recommended Reads of Summer Classics"
              },
              "listDescription": {
                "type": "string",
                "nullable": "true",
                "description": "List description"
              },
              "defaultSort": {
                "type": "string",
                "description": "Unknown"
              },
              "totalResults": {
                "type": "string",
                "nullable": "true",
                "description": "Number of total items in the list, stored as a string"
              },
              "titles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ListAPIItemResult"
                },
                "nullable": "true",
                "description": "Works/items in the list"
              },
              "page_current": {
                "type": "integer",
                "description": "The current page of the list (rephrase)",
                "default": 1
              },
              "page_total": {
                "type": "integer",
                "description": "Total pages of results for this list; This is also the number of API calls required to obtain all items in the specified list"
              }
            }
          }
        }
      },
      "LocalIllFormResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "description": "Whether the user method was successful or not",
                "example": "true"
              },
              "message": {
                "type": "string",
                "description": "Additional information about why the method failed"
              },
              "title": {
                "type": "string",
                "nullable": "true",
                "description": "The title of the form or error message"
              },
              "buttonLabel": {
                "type": "string",
                "nullable": "true",
                "description": "The label to display for the submit button"
              },
              "buttonLabelProcessing": {
                "type": "string",
                "nullable": "true",
                "description": "The label to display for the submit button while the request is being processed"
              },
              "fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FormFieldResult"
                },
                "nullable": "true",
                "description": "An array of field information to be displayed"
              }
            }
          }
        }
      },
      "LoginResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "description": "Whether the user login was successful or not",
                "example": "true"
              },
              "message": {
                "type": "string",
                "description": "Additional information about why the login passed or failed for display to the end user"
              },
              "name": {
                "type": "string",
                "nullable": "true",
                "description": "The first and last name of the user if login was successful"
              }
            }
          }
        }
      }
    }
  }
}