openapi: 3.0.2
info:
title: SnapPay
description: >-
Digitally transform your payment process with certified ERP integration to
improve working capital and increase efficiencies. SnapPay from Fiserv,
integrates with popular ERP solutions and shopping cart solutions to serve
the holistic B2B payment needs of enterprise-size businesses.

version: 3.0.9
servers:
- url: https://restapi-stage.SnapPayGlobal.com:443/
- url: https://demo1.cditechnology.com/SnapPay/REST/

components:
securitySchemes:
basicAuth:
type: http
scheme: basic
examples:
GetRequestID-O:
value:
accountid: 1000000001
companycode: '00200'
currencycode: USD
customerid: '4242'
userid: first.last@company.com
savepaymentmethod: 'Y'
saveatsupplier: 'Y'
displaypmsavedatsupplier: 'Y'
saveatcustomer: 'Y'
displaycardssavedatcustomer: 'Y'
redirecturl: https://company.com
redirectionurlonerror: '#'
reference: ''
type: C
transactiontype: O
transactionamount: 0.00
paymentmethod: CC
cvvrequired: 'Y'
invoiceid: '4621657657'
orderid: ''
comments: ''
language: en-US
stylecss: ''
ordertype: ''
branchplant: ''
useboltdevice: 'Y'
devicehsn: ''
purchaseorder: '1243'
ecomind: E
cof: C
cofscheduled: 'N'
openiniframe: 'Y'
sendemailreceipts: 'Y'
parenturi: https://company.com
displaycardname: 'Y'
displayaddress: 'Y'
displaytransactionamount: 'Y'
displaycurrencycode: 'Y'
displaycustomer: 'Y'
displaypagetitle: 'Y'
adderpcustomerinsnappay: 'Y'
forceusertoenteraddress: 'Y'
user:
userfirstname: First
userlastname: Last
useremail: first.last@company.com
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'N'
devicegroup: ''
customer:
customername: ABC, Inc.
addressline1: 100 Eve
addressline2: ''
city: Chicago
state: IL
zipcode: '60605'
country: US
phone: ''
email: name@company.com
vatregistrationnumber: ''
level3:
- linenumber: '1.000'
productcode: 'ROS01'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Mixed Bouquet'
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: 'BQT02'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Spring Bouquet'
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
GetRequestID-I:
value:
accountid: 1000000001
companycode: '00200'
currencycode: USD
customerid: '4242'
userid: first.last@company.com
savepaymentmethod: 'Y'
saveatsupplier: 'Y'
displaypmsavedatsupplier: 'Y'
saveatcustomer: 'Y'
displaycardssavedatcustomer: 'Y'
redirecturl: https://company.com
redirectionurlonerror: '#'
reference: ''
type: C
transactiontype: I
transactionamount: 0.00
paymentmethod: CC
cvvrequired: 'Y'
invoiceid: '4621657657'
orderid: ''
comments: ''
language: en-US
stylecss: ''
ordertype: ''
branchplant: ''
useboltdevice: 'Y'
devicehsn: ''
purchaseorder: '1243'
ecomind: E
cof: C
cofscheduled: 'N'
openiniframe: 'Y'
sendemailreceipts: 'Y'
parenturi: https://company.com
displaycardname: 'Y'
displayaddress: 'Y'
displaytransactionamount: 'Y'
displaycurrencycode: 'Y'
displaycustomer: 'Y'
displaypagetitle: 'Y'
adderpcustomerinsnappay: 'Y'
forceusertoenteraddress: 'Y'
user:
userfirstname: First
userlastname: Last
useremail: first.last@company.com
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'N'
devicegroup: ''
customer:
customername: ABC, Inc.
addressline1: 100 Eve
addressline2: ''
city: Chicago
state: IL
zipcode: '60605'
country: US
phone: ''
email: name@company.com
vatregistrationnumber: ''
level3:
- linenumber: '1.000'
productcode: 'ROS01'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Mixed Bouquet'
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: 'BQT02'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Spring Bouquet'
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
GetRequestID-A:
value:
accountid: 1000000001
companycode: '00200'
currencycode: USD
customerid: '4242'
userid: first.last@company.com
savepaymentmethod: 'Y'
saveatsupplier: 'Y'
displaypmsavedatsupplier: 'Y'
saveatcustomer: 'Y'
displaycardssavedatcustomer: 'Y'
redirecturl: https://company.com
redirectionurlonerror: '#'
reference: ''
type: C
transactiontype: A
transactionamount: 51.00
paymentmethod: CC
cvvrequired: 'Y'
invoiceid: '4621657657'
orderid: ''
comments: ''
language: en-US
stylecss: ''
ordertype: ''
branchplant: ''
useboltdevice: 'Y'
devicehsn: ''
purchaseorder: '1243'
ecomind: E
cof: C
cofscheduled: 'N'
openiniframe: 'Y'
sendemailreceipts: 'Y'
parenturi: https://company.com
displaycardname: 'Y'
displayaddress: 'Y'
displaytransactionamount: 'Y'
displaycurrencycode: 'Y'
displaycustomer: 'Y'
displaypagetitle: 'Y'
adderpcustomerinsnappay: 'Y'
forceusertoenteraddress: 'Y'
user:
userfirstname: First
userlastname: Last
useremail: first.last@company.com
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'N'
devicegroup: ''
customer:
customername: ABC, Inc.
addressline1: 100 Eve
addressline2: ''
city: Chicago
state: IL
zipcode: '60605'
country: US
phone: ''
email: name@company.com
vatregistrationnumber: ''
level3:
- linenumber: '1.000'
productcode: 'ROS01'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Mixed Bouquet'
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: 'BQT02'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Spring Bouquet'
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
GetRequestID-S:
value:
accountid: 1000000001
companycode: '00200'
currencycode: USD
customerid: '4242'
userid: first.last@company.com
savepaymentmethod: 'Y'
saveatsupplier: 'Y'
displaypmsavedatsupplier: 'Y'
saveatcustomer: 'Y'
displaycardssavedatcustomer: 'Y'
redirecturl: https://company.com
redirectionurlonerror: '#'
reference: ''
type: C
transactiontype: S
transactionamount: 100.00
paymentmethod: CC
cvvrequired: 'Y'
invoiceid: '4621657657'
orderid: ''
comments: ''
language: en-US
stylecss: ''
ordertype: ''
branchplant: ''
useboltdevice: 'Y'
devicehsn: ''
purchaseorder: '1243'
ecomind: E
cof: C
cofscheduled: 'N'
openiniframe: 'Y'
sendemailreceipts: 'Y'
parenturi: https://company.com
displaycardname: 'Y'
displayaddress: 'Y'
displaytransactionamount: 'Y'
displaycurrencycode: 'Y'
displaycustomer: 'Y'
displaypagetitle: 'Y'
adderpcustomerinsnappay: 'Y'
forceusertoenteraddress: 'Y'
user:
userfirstname: First
userlastname: Last
useremail: first.last@company.com
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'N'
devicegroup: ''
customer:
customername: ABC, Inc.
addressline1: 100 Eve
addressline2: ''
city: Chicago
state: IL
zipcode: '60605'
country: US
phone: ''
email: name@company.com
vatregistrationnumber: ''
level3:
- linenumber: '1.000'
productcode: 'ROS01'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Mixed Bouquet'
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: 'BQT02'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Spring Bouquet'
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
GetRequestID-T:
value:
accountid: 1000000001
companycode: '00200'
currencycode: USD
transactionType: T
paymentmethod: CC
language: en-US
stylecss: 'width: 50.50%;height:50.50%;'
customerid: '100'
userid: user1
savepaymentmethod: 'N'
saveatcustomer: 'N'
displaycardssavedatcustomer: 'N'
redirecturl: https://www.google.com/
transactionamount: 0.00
parenturi: https://company.com
displaycardname: 'Y'
displayaddress: 'N'
GetRequestID-W:
value:
accountid: 1000000001
companycode: '100'
currencycode: USD
customerid: '4242'
userid: user
saveatcustomer: 'Y'
savepaymentmethod: 'N'
displaycardssavedatcustomer: 'Y'
transactiontype: W
paymentmethod: CC
language: en-US
redirecturl: '#'
openiniframe: 'Y'
GetRequestID-Fee:
value:
accountid: 1000000001
companycode: '00200'
currencycode: USD
customerid: '4242'
supplierid: '14343'
userid: first.last@company.com
savepaymentmethod: 'Y'
saveatsupplier: 'Y'
displaypmsavedatsupplier: 'Y'
saveatcustomer: 'Y'
displaycardssavedatcustomer: 'Y'
redirecturl: https://www.xyz.com/receive
type: C
transactiontype: S
transactionamount: 100
paymentmethod: CC
cvvrequired: 'Y'
invoiceid: '4621657657'
orderid: ''
comments: ''
language: en-US
stylecss: ''
ordertype: ''
branchplant: ''
useboltdevice: 'Y'
devicehsn: '122353253252'
purchaseorder: '1243'
ecomind: E
cof: C
cofscheduled: 'N'
openiniframe: 'Y'
feevalue: 10.5
feeformat: Flat
waivefee: 'N'
adderpcustomerinsnappay: 'Y'
forceusertoenteraddress: 'Y'
user:
userfirstname: first
userlastname: last
useremail: first.last@xyz.com
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'N'
devicegroup: ''
customer:
customername: ''
addressline1: ''
addressline2: ''
city: ''
state: ''
zipcode: ''
country: ''
phone: ''
email: ''
vatregistrationnumber: ''
supplier:
suppliername: Battery Builders
addressline1: 31W238 91st St,
addressline2: ''
city: Naperville
state: IL
zipcode: '60564'
country: US
phone: (630) 851-5800
email: t2@company.com
identificationtype: ''
identificationdata: 12/12/1961
companyname: Battery Builders
clientcompanyname: Company
internalmemo: ''
comments: ''
reason: ''
status: ''
level3:
- linenumber: '1.000'
productcode: ROS01
taxrate: '0.073'
quantity: '2'
itemdescriptor: Mixed Bouquet
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: BQT02
taxrate: '0.073'
quantity: '2'
itemdescriptor: Spring Bouquet
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
GetRequestIDResponse:
value:
accountid: 1000000001
token: 0b724a4f-5bbb-e811-b229-000c29cce4c0
status: 'Y'
message: Information stored successfully.
GetPaymentDetailDefault:
value:
accountid: 1000000001
token: 59be95d9-cd6e-ec11-bad0-0022488db98a
TokenizeCCRequest:
value:
accountid: 1000000001
requesttype: C
currency: USD
companycode: '00200'
branchplant: null
ordertype: null
mode: CC
type: VISA
routingnumber: ''
bankname: ''
checktype: null
identificationtype: null
dlstate: null
identificationnumber: null
accountnumber: '4111111111111111'
expirationdate: '122029'
name: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: 123456789
TokenizeCCResponse:
value:
accountid: 1000000001
status: 'Y'
message: Tokenization successful.
currency: USD
companycode: '00200'
branchplant: null
ordertype: null
mode: CC
type: VISA
last4: '1111'
routingnumber: null
bankname: null
checktype: null
identificationtype: null
identificationnumber: null
tokenid: '1234567891231111'
expirationdate: '122029'
name: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: null
TokenizeCCResponseV2:
value:
accountid: 1000000001
status: 'Y'
message: Tokenization successful.
currency: USD
companycode: '00200'
branchplant: null
ordertype: null
mode: CC
type: VISA
last4: '1111'
routingnumber: null
bankname: null
checktype: null
identificationtype: null
identificationnumber: null
tokenid: '1234567891231111'
expirationdate: '122029'
name: First Last
addressline1: 123 Main St
addressline2: ''
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: null
TokenizeACHRequest:
value:
accountid: 1000000001
requesttype: C
currency: USD
companycode: '00200'
branchplant: null
ordertype: null
mode: CC
type: SAVING
routingnumber: '121123248'
bankname: 'bank'
checktype: null
identificationtype: null
dlstate: null
identificationnumber: null
accountnumber: '144155159'
expirationdate: '122029'
name: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: 123456789
TokenizeACHRequestV2:
value:
accountid: 1000000001
currency: USD
companycode: '00200'
requesttype: C
mode: ACH
type: Checking
name: First Last
addressline1: 123 Main St
addressline2: ''
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: ''
tempachtoken: '277818004'
routingnumber: '091000019'
TokenizeRequestV2:
value:
accountid: 1000000001
requesttype: C
currency: USD
companycode: '103'
branchplant: ''
ordertype: ''
mode: CC
type: VISA
routingnumber: ''
bankname: ''
checktype: ''
identificationtype: ''
dlstate: ''
identificationnumber: ''
accountnumber: 'XXXXXXXXXXXXXXX'
devicedata: ''
expirationdate: '112028'
name: First Last
addressline1: 100 Street
addressline2: ''
city: Chicago
state: IL
zip: '60540'
country: US
email: first.last@company.com
phonenumber: ''

TokenizeACHResponse:
value:
accountid: 1000000001
status: 'Y'
message: Tokenization successful.
currency: USD
companycode: '00200'
branchplant: null
ordertype: null
mode: ACH
type: SAVING
last4: '5159'
routingnumber: '121123248'
bankname: 'bank'
checktype: null
identificationtype: null
identificationnumber: null
tokenid: '101260621595'
expirationdate: '122029'
name: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: null
TokenizeWithDeviceDataRequest:
value:
accountid: 1000000001
requesttype: C
currency: USD
companycode: '00200'
branchplant: ''
ordertype: ''
mode: CC
devicedata: "02A600C0170018008292;4387********1053=2804?*274C4F7252CB38CDAEF155D58898E969C574A1D0547A2728000000000000000000000000000000000000000035303454363134353131CDCDCD070120B040011C36AE03"
type: ''
routingnumber: ''
bankname: ''
checktype: ''
identificationtype: ''
identificationnumber: ''
accountnumber: ''
expirationdate: ''
name: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: 123456789
CaptureRequestWithSurcharge:
value:
accountid: 1000000001
customerid: '4242'
currency: USD
companycode: '100'
userid: usercsr
transactionamount: '120'
referencetransactionid: '017260312345'
sendemailreceipts: 'Y'
orderid: ORDERID-01172023-2
invoiceid: INVOICEID-01172023-2
comment: Capture1
level3:
- linenumber: '001'
productcode: BQT01
unitcost: '1.75'
quantity: '3'
itemdescriptor: Bouquet
unitofmeasure: EA
commoditycode: SNAPPAY
taxamount: '0.12'
taxrate: '8'
itemdiscount: '0'
lineitemtotal: '5.37'
- linenumber: '002'
productcode: BQT02
unitcost: '2'
quantity: '3'
itemdescriptor: Bouquet
unitofmeasure: EA
commoditycode: SNAPPAY
taxamount: '0.97'
taxrate: '8'
itemdiscount: '0'
lineitemtotal: '6.97'

CaptureRequestWithServiceFee:
value:
accountid: 1000000001
referencetransactionid: '1234052209561358365'
transactionamount: 74.00
customerid: '4242'
currency: USD
companycode: '100'
userid: user
orderid: P-141153
invoiceid: '1407261399'
ordertype: ''
branchplant: ''
purchaseorder: ''
orderdate: '20230507'
CaptureResponseWithServiceFee:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
paymenttransactionid: '1362'
pgtransactionid: '132912341342'
reference: ''
purchaseorder: ''
transaction:
merchantid: "12452589"
returncode: '000'
returndescription: Transaction successful.
pgtransactionid: '123456342330'
paymenttransactionid: '1394'
authorizationcode: PPS038
transactiondate: 06/06/2019 02:25:33 PM
procrespcode: RPCT
transactionamount: 74.00
currency: USD
procresp: RPCT-000
totaltransactionamount: 76.59
feereturncode: '26'
feereturndescription: Transaction successful.
feeamount: 2.59
feeauthcode: PPS191
feeformat: Percentage
feevalue: 3.5
feestatus: 'Y'
feetransactionid: '01475235228256'
feetype: Service
feeprocresp: PPS-26
CaptureResponseWithSurcharge:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
isalreadycaptured: 'N'
referencetransactionid: '017260312345'
transaction:
merchantid: '123459000999'
returncode: '000'
returndescription: Approval
pgtransactionid: '017298717557'
paymenttransactionid: '1074111451'
authorizationcode: PPS257
transactiondate: 01/17/2023 03:54:00 AM
procrespcode: RPCT
transactionamount: 120
currency: USD
procresp: RPCT-000
totaltransactionamount: 124.2
feeamount: 4.2
feeauthcode: PPS257
feeformat: Percentage
feevalue: 3.5
feestatus: 'Y'
feetransactionid: '017287417557'
feetype: Surcharge
AuthorizeDefaultRequest:
value:
accountid: 1000000001
customerid: '100'
currency: USD
companycode: '00200'
branchplant: null
ordertype: null
orderid: '123456'
invoiceid: '123456'
userid: user1
reference: null
purchaseorder: USD
cards:
- transactionamount: 10
tokenid: 'XXXXXXXXXXXX2344'
type: VISA
last4: '2344'
cvv: '123'
expirationdate: '122029'
customername: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: null
- transactionamount: 25.14
tokenid: 'XXXXXXXXXXXX1111'
type: MC
last4: '1111'
cvv: '123'
expirationdate: '022027'
customername: First Last
addressline1: 123 Main St
city: Lombard
state: IL
zip: '60148'
country: US
email: first.last@company.com
phonenumber: null
AuthorizeRequestWithSurcharge:
value:
accountid: 1000000001
currency: USD
companycode: '100'
customerid: '4242'
userid: usercsr
mode: CC
reference: A-20230117-03
purchaseorder: A-20230117-03
orderid: ORD-20230117-03
invoiceid: INV-20230117-03
cards:
- transactionamount: 120
tokenid: '1234563235811730'
cvv: '123'
expirationdate: '082025'
type: VISA
last4: '1730'
customername: cust name
addressline1: 100 street
city: Aurora
state: IL
zip: '60540'
country: US
email: first.last@company.com
phonenumber: ''

AuthorizeResponseWithSurcharge:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
reference: A-20230117-03
purchaseorder: A-20230117-03
cards:
- merchantid: '123459000999'
paymentgateway: CardConnect
tokenid: '1234563235811730'
returncode: '000'
returndescription: Approval
pgtransactionid: '017260312345'
paymenttransactionid: '178911449'
authorizationcode: PPS257
status: 'Y'
transactiondate: 01/17/2023 03:52:32 AM
procrespcode: RPCT
scverification: M
addressverification: Z
transactionamount: 120
currency: USD
totaltransactionamount: 124.2
feeamount: 4.2
feeauthcode: PPS257
feeformat: Percentage
feevalue: 3.5
feestatus: 'Y'
feetransactionid: '0172147887557'
feetype: Surcharge
procresp: RPCT-000
AuthorizeRequestWithServiceFee:
value:
accountid: 1000000001
customerid: '4242'
currency: USD
companycode: '100'
branchplant: ''
ordertype: ''
orderid: P-141153
invoiceid: I-153
userid: user
reference: P-141153
purchaseorder: ''
ecomind: E
cof: C
cofscheduled: 'N'
iscardpresent: 'N'
iscapture: 'N'
cards:
- transactionamount: 100.24
tokenid: '9417085548851111'
cvv: '124'
expirationdate: '102024'
customername: Cust name
addressline1: 100 Street
city: Chicago
state: IL
zip: '60540'
country: US
email: first.last@company.com
phonenumber: ''
type: VISA
last4: '1111'
secureflag: '05'
securevalue: ''
securedstid: ''
secureexemption: lowvalue
AuthorizeWithTempACHToken:
value:
accountid: 1000000001
currency: USD
companycode: '00200'
customerid: '4242'
userid: 'testuser'
orderid: 'ord123'
invoiceid: 'inv123'
purchaseorder: 'po123'
iscapture: 'N'
iscardpresent: 'N'
cards:
- transactionamount: 45
tokenid: ''
cvv: ''
expirationdate: ''
customername: First Last
addressline1: Test
city: Chicago
state: IL
zip: '60540'
country: US
email: first.last@company.com
phonenumber: ''
type: checking
last4: '6789'
tempachtoken: '277818004'
routingnumber: '091000019'

AuthorizeResponseWithServiceFee:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
reference: P-141153
purchaseorder: ''
cards:
- merchantid: '12452589'
paymentgateway: CardConnect
tokenid: '9417085548851111'
returncode: '000'
returndescription: Approval
pgtransactionid: '123433330031'
paymenttransactionid: '1000011234'
authorizationcode: PPS020
status: 'Y'
transactiondate: 05/22/2023 07:20:23 AM
procrespcode: RPCT
scverification: M
addressverification: Z
transactionamount: 100.24
currency: USD
totaltransactionamount: 110.26
feereturncode: '000'
feereturndescription: Transaction successful.
feeamount: 10.02
feeauthcode: PPS506
feeformat: Percentage
feevalue: 10
feestatus: 'Y'
feetransactionid: '123427230057'
feetype: Service
procresp: RPCT-000
feeprocresp: RPCT-000
AuthorizeResponseWithPGName:
value:
accountid: 1000000001
status: 'Y'
message: Authorization successful.
reference: ''
purchaseorder: ''
cards:
- merchantid: '123456789856'
paymentgateway: CardConnect
tokenid: '5412345678912345'
returncode: '1'
returndescription: Transaction successful.
pgtransactionid: '8745615520596'
paymenttransactionid: '1328'
authorizationcode: ZNZHPJ
status: 'Y'
transactiondate: 01/15/2024 02:21:26 PM
procrespcode: RPCT
scverification: P
addressverification: Z
transactionamount: 75
currency: USD
procresp: RPCT-00
- merchantid: '123456789856'
paymentgateway: CardConnect
tokenid: '5412345678912345'
returncode: '1'
returndescription: Transaction successful.
pgtransactionid: '8745615520596'
paymenttransactionid: '1329'
authorizationcode: PATZZG
status: 'Y'
transactiondate: 01/15/2024 02:21:26 PM
procrespcode: RPCT
scverification: P
addressverification: Z
transactionamount: 75
currency: USD
procresp: RPCT-00
AuthorizeDefaultResponse:
value:
accountid: 1000000001
status: 'Y'
message: Authorization successful.
cards:
- merchantid: "12452589"
paymentgateway: CardConnect
returncode: '0'
returndescription: Transaction successful
procrespcode: RPCT
pgtransactionid: '260711140916'
tokenid: '1234567891232344'
paymenttransactionid: '136243'
authorizationcode: A212345
transactiondate: 02/14/2021 03:00:28 PM
transactionamount: '100'
currency: USD
status: 'Y'
scverification: P
addressverification: Z
ChargeRequestWithSurcharge:
value:
accountid: 1000000001
companycode: '102'
shipfromzip: ''
branchplant: ''
orderid: '123448'
invoiceid: '567848'
orderdate: ''
userid: user
shiptocountry: ''
purchaseorder: '1243'
shiptozip: ''
customerid: '2505'
currency: USD
sendemailreceipts: 'Y'
ecomind: E
cof: C
cofscheduled: 'N'
paymentmethod:
tokenid: 1234D8683B1A23BFF867A4C3F8E05CE0AB2A1049CADF
transactionamount: '100.50'
cvv: '123'
customername: ABC Financial
addressline1: 100 Ave
city: Aurora
state: IL
zip: '60603'
country: US
email: first.last@company.com
phonenumber: ''
type: VISA
last4: '1111'
routingnumber: ''
secureflag: '05'
securevalue: ''
securexid: ''
dstxnid: ''
level3:
- linenumber: '1.000'
productcode: ROS01
taxrate: '0.073'
quantity: '2'
itemdescriptor: Mixed Bouquet
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: 'BQT02'
taxrate: '0.073'
quantity: '2'
itemdescriptor: 'Spring Bouquet'
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
ordertype: SO
userfields:
- udf0: Value 1
- udf1: Value 2
- udf2: Value 3
- udf3: Value 4
- custommerchant: Company
- customphone: 123-456-HELP
ChargeResponseWithSurcharge:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
purchaseorder: '1243'
transaction:
merchantid: "12452589"
returncode: '1'
returndescription: Successful Authorization
pgtransactionid: '1234052210451047452'
paymenttransactionid: '1000011234'
authorizationcode: TSTAUT
transactiondate: 05/22/2023 05:45:03 AM
procrespcode: ''
scverification: 'Y'
addressverification: ''
transactionamount: 100.5
currency: USD
totaltransactionamount: 103.52
feeamount: 3.02
feeauthcode: TSTAUT
feeformat: Percentage
feevalue: 3
feestatus: 'Y'
feetransactionid: '1234052210451047452'
feetype: Surcharge
ChargeRequestWithServiceFee:
value:
accountid: 1000000001
companycode: '100'
shipfromzip: ''
branchplant: ''
orderid: '123448'
invoiceid: '567848'
orderdate: ''
userid: user
shiptocountry: ''
purchaseorder: '1243'
shiptozip: ''
customerid: '4242'
currency: USD
sendemailreceipts: 'Y'
ecomind: E
cof: C
cofscheduled: 'N'
feevalue: 10
feeformat: percentage
waivefee: 'N'
paymentmethod:
tokenid: '9401881398911234'
transactionamount: '110.50'
cvv: '123'
customername: ABC Financial
addressline1: 100 Ave
city: Aurora
state: IL
zip: '60603'
country: US
email: first.last@company.com
phonenumber: ''
type: VISA
last4: '1234'
routingnumber: ''
secureflag: '05'
securevalue: ''
securexid: ''
dstxnid: ''
ChargeResponseWithServiceFee:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
purchaseorder: '1243'
transaction:
merchantid: "12452589"
returncode: '000'
returndescription: Approval
pgtransactionid: '123418229266'
paymenttransactionid: '1000011234'
authorizationcode: PPS446
transactiondate: 05/22/2023 07:07:40 AM
procrespcode: RPCT
scverification: M
addressverification: Z
transactionamount: 110.5
currency: USD
procresp: RPCT-000
totaltransactionamount: 121.55
feereturncode: '000'
feereturndescription: Transaction successful.
feeamount: 11.05
feeauthcode: PPS971
feeformat: Percentage
feevalue: 10
feestatus: 'Y'
feetransactionid: '123423329291'
feetype: Service
minimumfeeused: 'N'
thresholdfeeused: 'N'
feeprocresp: RPCT-000
ChargeWithTempACHToken:
value:
accountid: 1000000001
currency: USD
companycode: '00200'
customerid: '4242'
userid: 'testuser'
orderid: 'ord123'
invoiceid: 'inv123'
ordertype: ''
branchplant: ''
reference: ''
purchaseorder: ''
orderdate: '2024/07/04'
shiptozip: ''
shipfromzip: ''
shiptocountry: ''
paymentmethod:
transactionamount: 35
tokenid: ''
expirationdate: ''
cvv: ''
customername: Test Customer
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60540'
country: US
email: first.last@company.com
phonenumber: ''
type: checking
last4: '6789'
tempachtoken: '277818004'
routingnumber: '091000019'
level3:
- linenumber: '001'
productcode: BQT01
unitcost: '1.75'
quantity: '3'
itemdescriptor: Bouquet
unitofmeasure: EA
commoditycode: CCode
taxamount: '0.12'
taxrate: '8'
itemdiscount: '0'
lineitemtotal: '5.37'
- linenumber: '002'
productcode: BQT02
unitcost: '2'
quantity: '3'
itemdescriptor: Bouquet
unitofmeasure: EA
commoditycode: CCode
taxamount: '0.97'
taxrate: '8'
itemdiscount: '0'
lineitemtotal: '6.97'

CreditWithTempACHToken:
value:
accountid: 1000000001
customerid: '4242'
currency: 'USD'
companycode: '00200'
userid: 'testuser'
transactionamount: '20'
tokenid: ''
paymentmethod:
tokenid: ''
transactionamount: '20'
customername: Test Customer
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60540'
country: US
email: first.last@company.com
phonenumber: ''
type: checking
last4: '6789'
tempachtoken: '277818004'
routingnumber: '091000019'
SnapPayReportingScheduleRequest:
value:
accountid: 1000000001
process: schedule
fromdate: '2022-06-01'
todate: '2022-09-27'
SnapPayReportingUserRequest:
value:
accountid: 1000000001
process: user
fromdate: '2022-06-01'
todate: '2022-09-27'
SnapPayReportingUserCustomerRequest:
value:
accountid: 1000000001
process: usercustomer
fromdate: '2022-06-01'
todate: '2022-09-27'
SnapPayReportingUserLeaseRequest:
value:
accountid: 1000000001
process: userlease
fromdate: '2022-06-01'
todate: '2022-09-27'
SnapPayReportingSalesReportingRequest:
value:
accountid: 1000000001
process: salesreporting
fromdate: '2022-06-01'
todate: '2022-09-27'
SnapPayReportingAutopayRequest:
value:
accountid: 1000000001
process: autopay
fromdate: '2022-01-01'
todate: '2022-01-30'
SnapPayReportingScheduleResponse:
value:
accountid: 1000000001
status: 'Y'
message: Data retrieved successfully.
scheduledata:
- scheduleid: 591
schedulename: 'Schedule Test'
source: I
frequency: F
startdate: 06/23/2022 07:00:00 PM
enddate: 06/23/2022 07:00:00 PM
amount: 20
stopdate: ''
reasoncode: null
leasenumber: '451412'
businessunit: '15010'
unit: '102'
leasedescription: Lease Description 1
businessdescription: Business Description 1
unitdescription: Unit Description 1
createdby: "testcsr"
createdon: "12/16/2022 04:44:55 AM"
updatedby: null
updatedon: ""
paymentmethod:
- paymentmethodid: 32595
type: 'VISA'
mode: 'CC'
last4: '5165'
routingnumber: null
maskedaccountnumber: null
tokenid: 'XXXXXXXXXXXX5165'
merchantid: 'CardConnect'
paymentgateway: 'CardConnect'
firstname: 'First'
lastname: 'Last'
expirationmonth: 6
expirationyear: 2029
addressline1: '22nd Street'
city: 'Chicago'
state: 'IL'
zip: '60605'
country: 'US'
phonenumber: null
email: 'first.lat@cditechnology.com'
invoicedata:
- invoicenumber: '2022622'
customerid: '2505'
invoicetype: RI
companycode: '103'
linenumber: '1'
amount: 10
currency: USD
comments: ''
- invoicenumber: '2022623'
customerid: '2505'
invoicetype: RI
companycode: '103'
linenumber: '1'
amount: 10
currency: USD
comments: ''
- source: U
frequency: M
startdate: 06/27/2022 07:00:00 PM
enddate: 08/30/2022 07:00:00 PM
amount: 10
stopdate: ''
reasoncode: UN
leasenumber: '451412'
businessunit: '15020'
unit: '101'
leasedescription: Lease Description 1
businessdescription: Business Description 1
unitdescription: Unit Description 1
glcode: CAMS
invoicedata: null
SnapPayReportingUserResponse:
value:
accountid: 1000000001
status: 'Y'
message: Data retrieved successfully.
userdata:
- userid: user@company.com
firstname: first
lastname: last
email: first.last@company.com
usertypename: customer
usergroup: Customer
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'Y'
effectivefrom: 06/15/2022 06:43:33 AM
effectiveto: 06/15/2072 06:43:33 AM
phoneno: ''
createdby: null
createdon: "06/03/2022 08:38:11 AM"
updatedby: "testadmin"
updatedon: "12/16/2022 07:31:15 AM"
lockcount: 0
lastpasswordchanged: "12/16/2022 07:31:15 AM"
lastlogin: "12/16/2022 07:36:38 AM"
useridentity: 17555
- userid: useradmin
firstname: first
lastname: last
email: first.last@company.com
usertypename: accountadmin
usergroup: AccountAdmin
isactive: 'Y'
forcepasswordreset: 'N'
forcetermsandconditions: 'N'
effectivefrom: 06/03/2022 08:37:15 AM
effectiveto: 06/03/2072 08:37:15 AM
phoneno: null
createdby: "testadmin"
createdon: "05/25/2021 04:55:22 AM"
updatedby: "testcust"
updatedon: "06/27/2022 04:47:28 AM"
lockcount: 0
lastpasswordchanged: "06/27/2022 04:47:28 AM"
lastlogin: "08/01/2022 05:45:35 AM"
useridentity: 10565
SnapPayReportingUserCustomerResponse:
value:
accountid: 10000000001
status: 'Y'
message: Data retrieved successfully.
usercustomerdata:
- customerid: '17517'
associationtype: soldto
isdefault: 'N'
userid: usercsr
createdby: admin
createdon: 04/11/2022 02:20:51 AM
updatedby: asncsr
updatedon: 07/07/2022 08:55:27 AM
- customerid: '10006180'
associationtype: soldto
isdefault: 'N'
userid: usercsr
createdby: admin
createdon: 04/06/2022 06:41:20 AM
updatedby: null
updatedon: ''
SnapPayReportingUserLeaseResponse:
value:
accountid: 10000000001
status: 'Y'
message: Data retrieved successfully.
userleasedata:
- leasenumber: '491141'
isdefault: 'N'
userid: csr
createdby: admin
createdon: 12/16/2022 07:37:33 AM
updatedby: null
updatedon: ''
leasedescription: ARITZIA
- leasenumber: '44446'
isdefault: 'N'
userid: csr
createdby: admin
createdon: 12/16/2022 07:37:32 AM
updatedby: null
updatedon: ''
leasedescription: Lease Description 451416 1.00
SnapPayReportingSalesReportingResponse:
value:
accountid: 1000000001
status: 'Y'
message: Data retrieved successfully.
salesreportingdata:
- customerid: '2505'
leasenumber: '451414'
businessunit: '15020'
unitnumber: '102'
productcode: OTDR
year: '2022'
month: '06'
salesamount: 1910
companycode: '00200'
currencycode: USD
submittedtoagent: 'Y'
salesinvitedcode: X
- customerid: '2505'
leasenumber: '451413'
businessunit: '15010'
unitnumber: '103'
productcode: OTDR
year: '2022'
month: '06'
salesamount: 2780
companycode: '00200'
currencycode: USD
submittedtoagent: 'N'
salesinvitedcode: X
- customerid: '2505'
leasenumber: '451413'
businessunit: '15010'
unitnumber: '102'
productcode: OTDR
year: '2022'
month: '06'
salesamount: 1500
companycode: '00200'
currencycode: USD
submittedtoagent: 'Y'
salesinvitedcode: X
SnapPayReportingAutopayResponse:
value:
accountid: 1000000001
status: 'Y'
message: Data retrieved successfully.
autopaydata:
- autopayid: 395
customerid: '2505'
maxamount: 0
enrolleddate: 10/13/2022 08:00:03 AM
canceldate: null
createdon: 10/13/2022 08:00:03 AM
updatedon: null
createdby: csr
updatedby: null
workstationip: 127.0.0.1
sourcetype: I
leasenumber: '451412'
companycode: '103'
currencycode: USD
leasedescription: Lease Description 451412 1.00
documenttype: LS
paymentmethod:
paymentmethodid: 32595
type: VISA
mode: CC
last4: '5165'
routingnumber: null
maskedaccountnumber: null
tokenid: '1234508369325165'
merchantid: CardConnect
paymentgateway: CardConnect
firstname: First
lastname: Last
expirationmonth: 6
expirationyear: 2029
addressline1: 22nd Street
city: Chicago
state: IL
zip: '60605'
country: US
phonenumber: null
email: first.last@company.com
leasedetails:
- businessunit: '15010'
businessdescription: Deer Park Town Center
unit: '102'
unitdescription: Space 102
- autopayid: 396
customerid: '2505'
maxamount: 0
enrolleddate: 10/13/2022 08:06:07 AM
canceldate: null
createdon: 10/13/2022 08:06:07 AM
updatedon: null
createdby: csr
updatedby: null
workstationip: 127.0.0.1
sourcetype: I
leasenumber: '451414'
companycode: '103'
currencycode: USD
leasedescription: Lease Description 451414 1.00
documenttype: LS
paymentmethod:
paymentmethodid: 33647
type: MC
mode: CC
last4: '2025'
routingnumber: null
maskedaccountnumber: null
tokenid: '1234938937322025'
merchantid: CardConnect
paymentgateway: CardConnect
firstname: First
lastname: Last
expirationmonth: 6
expirationyear: 2025
addressline1: 22nd Street
city: Chicago
state: IL
zip: '60605'
country: US
phonenumber: null
email: first.last@company.com
leasedetails:
- businessunit: '15010'
businessdescription: Deer Park Town Center
unit: '101'
unitdescription: Space 102
TenantSalesReportingDownloadResponse:
value:
accountid: 1000000001
errormessage: ''
salesreportcustomerdata:
- customerid: '2505'
salesreportleasedata:
- leasenumber: '451413'
salesreportbusinessunitdata:
- businessunit: '15010'
unitnumber: '102'
companycode: '00200'
currencycode: USD
productcode: OTDR
salesreportdata:
- year: 2022
month: 6
salesamount: 1500
salescomment: 'Test'
salesinvitedcode: X
batchnumber: 0
monthdesc: June
createdby: admin
createdon: 06/24/2022 04:21:49 AM
updatedby: RESTAPI
updatedon: 12/22/2022 02:59:53 AM
salesreporthistorydata: null
- businessunit: '15010'
unitnumber: '103'
companycode: '00200'
currencycode: USD
productcode: OTDR
salesreportdata:
- year: 2022
month: 6
salesamount: 2780
salescomment: 'Test'
salesinvitedcode: X
batchnumber: 0
monthdesc: June
createdby: admin
createdon: 06/24/2022 04:23:05 AM
updatedby: RESTAPI
updatedon: 12/22/2022 02:59:54 AM
salesreporthistorydata: null
- leasenumber: '451414'
salesreportbusinessunitdata:
- businessunit: '15020'
unitnumber: '102'
companycode: '00200'
currencycode: USD
productcode: OTDR
salesreportdata:
- year: 2022
month: 6
salesamount: 1910
salescomment: 'Test'
salesinvitedcode: X
batchnumber: 0
monthdesc: June
createdby: admin
createdon: 06/24/2022 04:24:32 AM
updatedby: RESTAPI
updatedon: 12/22/2022 02:59:54 AM
salesreporthistorydata: null
FundingHistoryRepsonseCardX:
value:
accountid: 1000000001
status: 'Y'
message: Deposit information attached.
transactionscount: 2
merchantdata:
- merchantid: merchant
feedepositlist:
- feedepositid: 1234d504-2d1e-4d15-ba3b4-352de49a9b48
feedepositdate: 3/2/2023 12:00:00 AM
paymentgateway: CardX
feedeposittotal: -58.3
depositsourceid: '13457189004821'
depositsource: company
- feedepositid: abcd6cd4-1234-48b9-8737-71b04ca6b2dd
feedepositdate: 2/28/2023 12:00:00 AM
paymentgateway: CardX
feedeposittotal: -20.99
depositsourceid: '12345460745791'
depositsource: company
fundingmasterlist:
- fundingmasterid: a12de471-5070-4c7a-99af-df37bedc8daa
fundingdate: 3/24/2023 12:00:00 AM
paymentgateway: CardX
fundings:
- fundingid: '1234619665380'
netsales: 0
totalfunding: 1393.3
fee: 0
datechanged: ''
ddanumber: ''
thirdparty: 0
dateadded: ''
fundingmasterid: abcde471-5070-4c7a-99af-df37bedc8daa
reversal: 0
interchangefee: 0
adjustment: 0
currency: USD
servicecharge: 0
otheradjustment: 0
abanumber: ''
paymentdata:
transactions:
- snappaytransactionid: '12628'
transactionid: '2313024917330'
fundingtxnid: a12dbdf7-0708-4643-b526-1ce4a4dd7b9d
currencycode: USD
type: sale
merchantid: snaptstao
merchantname: CardXMerchant
transactionamount: 305
fundedamount: 301.7
interchangeunitfee: 0
interchangepercentfee: 0
cardnumber: 453273XXXXXX1234
cardtype: debit
cardbrand: Visa
fundingid: '1234619665380'
authorizationnumber: TSTAUT
transactiondate: 3/23/2023 12:00:00 AM
feetype: null
feeamount: 0
feevalue: 0
feeformat: null
feestatus: null
feeauthcode: null
feetransactionid: '0'
merchantfee: 3.3
settledascardtype: debit
paymentmethod:
type: VISA
last4: '6301'
routingnumber: null
tokenid: '9450039021499916301'
merchantid: merchantid
merchantname: CardXMerchant
paymentgateway: CardX
firstname: First
lastname: W
expirationmonth: 9
expirationyear: 2029
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
phonenumber: ''
email: first.last@company.com
invoices: []
ordernumber: null
invoicenumber: null
reference: ''
- snappaytransactionid: '1000012629'
transactionid: '032313050561428'
fundingtxnid: a12df69fd-b401-443a-b398-26882ff100d1
currencycode: USD
type: sale
merchantid: merchant
merchantname: CardXMerchant
transactionamount: 326.03
fundedamount: 315.01
interchangeunitfee: 0
interchangepercentfee: 0
cardnumber: 448571XXXXXX4567
cardtype: credit
cardbrand: Visa
fundingid: '1234619665380'
authorizationnumber: TSTAUT
transactiondate: 3/23/2023 12:00:00 AM
feetype: Surcharge
feeamount: 11.03
feevalue: 3.5
feeformat: Percentage
feestatus: 'Y'
feeauthcode: TSTAUT
feetransactionid: '1000012629'
merchantfee: 11.02
settledascardtype: credit
paymentmethod:
type: VISA
last4: '7342'
routingnumber: null
tokenid: '9443527225498927342'
merchantid: merchant
merchantname: CardXMerchant
paymentgateway: CardX
firstname: ABC
lastname: Financial
expirationmonth: 8
expirationyear: 2028
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
phonenumber: ''
email: first.last@cditechnology.com
invoices: []
ordernumber: null
invoicenumber: null
reference: ''
FundingHistoryRepsonseCardConnect:
value:
accountid: 1000000001
status: 'Y'
message: Deposit information attached.
transactionscount: 2
merchantdata:
- merchantid: merchant
fundingmasterlist:
- fundingmasterid: a12de471-5070-4c7a-99af-df37bedc8daa
fundingdate: 3/24/2023 12:00:00 AM
paymentgateway: CardConnect
fundings:
- fundingid: '1234619665380'
netsales: 0
totalfunding: 1393.3
fee: 0
datechanged: ''
ddanumber: ''
thirdparty: 0
dateadded: ''
fundingmasterid: abcde471-5070-4c7a-99af-df37bedc8daa
reversal: 0
interchangefee: 0
adjustment: 0
currency: USD
servicecharge: 0
otheradjustment: 0
abanumber: ''
paymentdata:
transactions:
- snappaytransactionid: '12628'
transactionid: '2313024917330'
fundingtxnid: a12dbdf7-0708-4643-b526-1ce4a4dd7b9d
currencycode: USD
type: sale
merchantid: merchant
merchantname: CardConnectMerchant
transactionamount: 305
fundedamount: 301.7
interchangeunitfee: 0
interchangepercentfee: 0
cardnumber: 453273XXXXXX1234
cardtype: debit
cardbrand: Visa
fundingid: '1234619665380'
authorizationnumber: TSTAUT
transactiondate: 3/23/2023 12:00:00 AM
feetype: null
feeamount: 0
feevalue: 0
feeformat: null
feestatus: null
feeauthcode: null
feetransactionid: '0'
merchantfee: 3.3
settledascardtype: ""
paymentmethod:
type: VISA
last4: '6301'
routingnumber: null
tokenid: '1234039021499916301'
merchantid: merchant
merchantname: CardConnectMerchant
paymentgateway: CardConnect
firstname: First
lastname: W
expirationmonth: 9
expirationyear: 2029
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
phonenumber: ''
email: first.last@company.com
invoices: []
ordernumber: null
invoicenumber: null
reference: ''
- snappaytransactionid: '1000012629'
transactionid: '032313050561428'
fundingtxnid: a12df69fd-b401-443a-b398-26882ff100d1
currencycode: USD
type: sale
merchantid: merchant
merchantname: CardConnectMerchant
transactionamount: 326.03
fundedamount: 315.01
interchangeunitfee: 0
interchangepercentfee: 0
cardnumber: 448571XXXXXX4567
cardtype: credit
cardbrand: Visa
fundingid: '1234619665380'
authorizationnumber: TSTAUT
transactiondate: 3/23/2023 12:00:00 AM
feetype: Surcharge
feeamount: 11.03
feevalue: 3.5
feeformat: Percentage
feestatus: 'Y'
feeauthcode: TSTAUT
feetransactionid: '1000012629'
merchantfee: 11.02
settledascardtype: ""
paymentmethod:
type: VISA
last4: '7342'
routingnumber: null
tokenid: '1234527225498927342'
merchantid: merchant
merchantname: CardConnectMerchant
paymentgateway: CardConnect
firstname: ABC
lastname: Financial
expirationmonth: 8
expirationyear: 2028
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
phonenumber: ''
email: first.last@company.com
invoices: []
ordernumber: null
invoicenumber: null
reference: ''
UserDataUploadRequest:
value:
accountid: '1000000001'
users:
- userid: user01
firstname: first
lastname: last
email: first.last@company.com
usertypename: customer
usergroupname: customer
isactive: 'Y'
effectivefrom: '2023-02-23'
effectiveto: '2028-12-31'
phone: 123-456-7890
forcepasswordreset: 'Y'
forcetermsandconditions: 'Y'
devicegroup: ''
deleteuser: 'N'
customers:
- customerid: '10006438'
associationtype: soldto
isdefault: 'Y'
- customerid: '100'
associationtype: soldto
isdefault: 'N'
- userid: user02
firstname: CSR
lastname: USER
email: csr.user@company.com
usertypename: CSR
usergroupname: CSR
isactive: 'Y'
effectivefrom: '2023-02-23'
effectiveto: '2028-12-31'
phone: 123-456-7890
forcepasswordreset: 'Y'
forcetermsandconditions: 'Y'
devicegroup: devicegrp
deleteuser: 'N'
customers:
- customerid: '4242'
associationtype: shipto
isdefault: 'Y'
- customerid: '100'
associationtype: shipto
isdefault: 'N'

CustomerDataUploadRequest:
value:
accountid: 1000000001
email: first.last@company.com
customeraddress:
- customerid: 100
name: custname
displayname: Cust Name
customertype: C
active: 'Y'
addressline1: Street 100
addressline2: ''
city: Chicago
state: IL
zipcode: 60603
country: US
phone: 0
email: first.last@company.com
vatregistrationnumber: 123212
defaultcompanycode: 100
paymentmode: CC,ACH
companylist:
- companycode: 100
- customerid: 4242
name: customer01
displayname: First Last
customertype: C
active: 'Y'
addressline1: Street 142
addressline2: ''
city: Chicago
state: IL
zipcode: 60603
country: US
phone: 0
email: first.last@company.com
vatregistrationnumber: 741258
defaultcompanycode: 100
paymentmode: CC
companylist:
- companycode: 100
InvoiceDataUploadRequest:
value:
accountid: 1000000001
email: fist.last@company.com
invoicedata:
- invoiceheader:
- billingcustomerid: 100
parentcustomerid: 100
shipto: 100
invoicenumber: 10112
invoicetype: 0
companycode: '00200'
currency: 0
fiscalyear: 2022
branchplant: 0
ordertype: SO
email: 0
comments: test comments
suppliername: 0
allowpayment: 'Y'
invoicedetail:
- linenumber: 1
grossamount: 250
openamount: 250
paidamount: 0
taxableamount: 150
nontaxableamount: 50
taxamount: 10
discountamount: 250
discosuntamount2: 250
statementid: 628
invoicepo: PO123
invoicedescription: Description
ordernumber: 1411153
duedate: '2022-06-30'
discountduedate: '2018-06-30'
discountduedate2: '2022-06-30'
invoicedate: '2022-03-30'
statementdate: '2022-03-30'
businessunit: 5100
branch: testbranch
referencedocnumber: Doc001
comments: testcomments
- invoiceheader:
- billingcustomerid: 4242
parentcustomerid: 4242
shipto: 4242
invoicenumber: 10124
invoicetype: 0
companycode: '00200'
currency: 0
fiscalyear: 2023
branchplant: 0
ordertype: SO
email: 0
comments: comments
suppliername: 0
allowpayment: 'Y'
invoicedetail:
- linenumber: 1
grossamount: 500
openamount: 500
paidamount: 0
taxableamount: 150
nontaxableamount: 50
taxamount: 10
discountamount: 50
discosuntamount2: 50
statementid: 628
invoicepo: PO231
invoicedescription: Description
ordernumber: 74125
duedate: '2024-02-30'
discountduedate: '2024-02-30'
discountduedate2: '2024-02-30'
invoicedate: '2024-01-03'
statementdate: '2024-01-03'
businessunit: 5100
branch: branch01
referencedocnumber: 3241
comments: comments
SupplierDataUploadRequest:
value:
accountid: 1000000001
email: first.last@company.com
supplieraddress:
- supplierid: 101
name: supplier01
displayname: ABC Suppliers
parentsupplierid: ''
suppliertype: S
active: 'Y'
addressline1: Street 100
addressline2: ''
city: Chicago
state: IL
zipcode: 60603
country: US
phone: string
email: first.last@company.com
identificationtype: ''
identificationdata: 12/12/2022
companyname: ABC Suppliers
clientcompanyname: Prism LLC
internalmemo: ''
comments: ''
reason: ''
status: ''
- supplierid: 102
name: supplier02
displayname: Matrix Ltd
parentsupplierid: ''
suppliertype: S
active: 'Y'
addressline1: Street 100
addressline2: ''
city: Chicago
state: IL
zipcode: 60603
country: US
phone: string
email: help@company.com
identificationtype: ''
identificationdata: 04/09/2022
companyname: Matrix Ltd
clientcompanyname: Prism LLC
internalmemo: ''
comments: ''
reason: ''
status: ''
GetFeeServiceTypeRequest:
value:
accountid: 1000000001
merchantid: '123495144562'
transactionamount: '100.00'
tokenid: '1234444926857116'
zip: '65214'
feetype: 'Service'
GetFeeSurchargeTypeRequest:
value:
accountid: 1000000001
merchantid: '123495144562'
transactionamount: '100.00'
tokenid: '1234444926857116'
zip: '65214'
feetype: 'Surcharge'
GetFeeServiceTypeResponse:
value:
accountid: 1000000001
feeamount: 2
message: Fee amount retrieved successfully.
status: 'Y'
feetype: Service
feeformat: Flat
feevalue: '2'
GetFeeSurchargeTypeResponse:
value:
accountid: '1000859973'
feeamount: 3
message: Fee amount retrieved successfully.
status: 'Y'
feetype: Surcharge
feeformat: Percentage
feevalue: '3'
cardtype: Credit
surchargeapplicable: 'Y'
TokenizeUsingDualMIDRequest:
value:
accountid: 1000000001
requesttype: C
currency: USD
companycode: '00200'
mode: CC
userid: testcsr
transactiontype: ''
routingnumber: ''
bankname: ''
checktype: ''
identificationtype: ''
identificationnumber: ''
accountnumber: '1234022601910396'
type: MC
expirationdate: '072027'
name: First Last
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '65214'
tempdata: '06013'
country: US
email: first.last@cditechnology.com
phonenumber: ''

TokenizeUsingDualMIDResponse:
value:
accountid: 1000000001
status: 'Y'
message: Transaction successful.
requesttype: C
currency: USD
companycode: '200'
mode: CC
type: MC
last4: '0396'
routingnumber: ''
bankname: ''
checktype: ''
identificationtype: ''
identificationnumber: ''
tokenid: '1234778079420396'
expirationdate: '072027'
name: first last
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '65214'
country: US
email: first.last@comp.com
phonenumber: ''
paymentmethodid: 42807
cardtype: DEBIT
surchargeapplicable: 'N'
GetTransactionDualMIDRequest:
value:
accountid: 1000000001
transactionid: '123423323339'
GetTransactionDualMIDResponse:
value:
accountid: 1000000001
message: Success
status: 'Y'
transactions:
- transaction:
transactionstatus: Success
merchantid: '123499000999'
returncode: '000'
returndescription: Approval
pgtransactionid: '123423323339'
pgtransactiontype: Charge
paymenttransactionid: '100001754'
authorizationcode: PPS955
transactiondate: 03.05.2024 05:28:51 AM
procrespcode: RPCT
transactionamount: 272
currency: USD
totaltransactionamount: 280.16
feeamount: 8.16
feeauthcode: PPS955
feeformat: Percentage
feevalue: 3
feestatus: 'Y'
feetransactionid: '100001775'
feetype: Surcharge
paymentmethod:
paymentmethodid: 42808
type: VISA
last4: '8762'
routingnumber: ''
tokenid: '1239592778048762'
firstname: First
lastname: Last
expirationmonth: '8'
expirationyear: '2038'
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '65214'
country: US
phonenumber: ''
email: first.last@company.com
cardtype: CREDIT
surchargeapplicable: 'Y'
GetTransactionFailedExample:
value:
accountid: 1000000001
message: Error occurred in GetTransaction. Please contact Customer Service.
status: 'N'
GetTransactionV2:
value:
accountid: 1000000001
message: Success
status: 'Y'
transactions:
- transaction:
transactionstatus: Success
returncode: '000'
returndescription: Approval
pgtransactionid: '123454267968'
pgtransactiontype: Capture
paymenttransactionid: '22871'
authorizationcode: PPS688
transactiondate: 12/29/2020 05:53:13 PM
procrespcode: RPCT
transactionamount: 75.25
currency: USD
orderid: ord123
invoiceid: inv123
reference: ecom
totaltransactionamount: 75.25
feeamount: 0
feevalue: 0
paymentmethod:
paymentmethodid: 16825
type: VISA
last4: '4242'
tokenid: '9412345672514242'
firstname: ABC
lastname: Customer
expirationmonth: '4'
expirationyear: '2022'
addressline1: 495 N Commons Dr
addressline2: ''
city: Aurora
state: IL
zip: '60540'
country: US
phonenumber: ''
email: first.last@company.com
achaccounttype: ''
GetTransactionRequestV2:
value:
accountid: 1000000001
transactionid: ''
orderid: ''
invoiceid: 'inv011020251'
reference: ''
purchaseorder: ''


GetPMswithDualMID:
value:
accountid: 1000000001
message: Payment methods found.
status: 'Y'
pagenumber: 1
perpagesize: 500
currentpagesize: 20
totalpages: 1
totalpaymentmethods: 20
paymentmethods:
- customerid: '4242'
type: VISA
last4: '2666'
routingnumber: ''
tokenid: '1234594852876692666'
paymentgateway: CardX
merchantid: CardXSnaptstaoMerchant
mode: CC
firstname: First
lastname: Last
expirationmonth: '6'
expirationyear: '2026'
addressline1: 132 Main St
city: Denver
state: CO
zip: '80246'
country: US
phonenumber: '6301231234'
email: ''
isactive: 'Y'
autopay:
companycode: '360'
currencycode: USD
maxamount: 1009
cardtype: null
surchargeapplicable: 'N'
- customerid: '4242'
type: VISA
last4: '5553'
routingnumber: null
tokenid: '1234582670205553'
paymentgateway: CardConnect
merchantid: DevCardConnect
mode: CC
firstname: First
lastname: Last
expirationmonth: '5'
expirationyear: '2025'
addressline1: '1156 Inverness #123,'
city: Naperville
state: TES
zip: '60504'
country: ZZ
phonenumber: '1231231234'
email: first.last@company.com
isactive: 'Y'
autopay: null
cardtype: CREDIT
surchargeapplicable: 'Y'
- customerid: '4242'
type: MC
last4: '8572'
routingnumber: null
tokenid: '1234509775688572'
paymentgateway: CardConnect
merchantid: DevCardConnect
mode: CC
firstname: First
lastname: Last
expirationmonth: '6'
expirationyear: '2026'
addressline1: '1156 Inverness #123,'
city: Naperville
state: IL
zip: '60504'
country: US
phonenumber: '1231231234'
email: first.last@company.com
isactive: 'Y'
autopay: null
cardtype: UNKNOWN
surchargeapplicable: 'N'
GetPaymentDetailsResponseDualMID:
value:
accountid: 1000000001
message: Payment details retrieved successfully.
status: 'Y'
transaction:
merchantid: '123495144562'
returncode: '000'
returndescription: Approval
transactionstatus: 'Y'
pgtransactionid: '123446317844'
paymenttransactionid: '1023417025'
authorizationcode: PPS118
transactiondate: 03.05.2024 03:57:19 AM
procrespcode: RPCT
scverification: P
addressverification: 'Z '
transactionamount: 0
currency: USD
feeamount: 0
feeauthcode: null
feeformat: null
feestatus: null
feetransactionid: null
feetype: null
feevalue: 0
threedsecure: null
signature: null
paymentmethod:
paymentmethodid: 42805
type: MC
last4: '7116'
routingnumber: null
tokenid: '1234444926857116'
firstname: First
lastname: Last
expirationmonth: '9'
expirationyear: '2029'
addressline1: '1156 Inverness #123,'
city: Naperville
state: IL
zip: '60504'
country: US
phonenumber: '1231231234'
email: first.last@company.com
cardtype: DEBIT
surchargeapplicable: 'N'
GetPaymentDetailsFailedAttempt:
value:
accountid: 1000000001
message: Payment details retrieved successfully.
status: 'Y'
transaction:
merchantid: '123456144562'
returncode: '000'
returndescription: Approval
transactionstatus: 'Y'
pgtransactionid: '1234557539'
paymenttransactionid: '3527'
authorizationcode: PPS010
transactiondate: 02/14/2019 03:00:28 PM
procrespcode: RPCT
transactionamount: 75
currency: USD
feeamount: 0.35
feeauthcode: TSTAUT
feeformat: Percentage
feestatus: 'Y'
feetransactionid: '6141'
feetype: Surcharge
feevalue: 3.5
paymentmethod:
paymentmethodid: 12900
type: MC
last4: '5454'
tokenid: '123456641895454'
firstname: Test
lastname: Auth
expirationmonth: '4'
expirationyear: '2027'
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
failedattempts:
transactions:
- transaction:
merchantid: '123544128'
returncode: '5005'
returndescription: 'DECLINED: The country of the credit card has been blocked.'
pgtransactionid: '12345088624'
paymenttransactionid: '30331'
authorizationcode: ''
transactiondate: 7/16/2023 04:12:55 AM
procrespcode: null
scverification: ''
addressverification: ''
transactionamount: 2
currency: USD
feeamount: 0
feeauthcode: null
feeformat: null
feestatus: null
feetransactionid: null
feetype: null
feevalue: 0
threedsecure: null
paymentmethod:
paymentmethodid: 32631
type: VISA
last4: '0006'
routingnumber: null
tokenid: null
firstname: ABC
lastname: Financial
expirationmonth: '6'
expirationyear: '2030'
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
phonenumber: ''
email: deepak.patil2@cditechnology.com
- transaction:
merchantid: '123544128'
returncode: '5005'
returndescription: 'DECLINED: The country of the credit card has been blocked.'
pgtransactionid: '12345088624'
paymenttransactionid: '30330'
authorizationcode: ''
transactiondate: 7/16/2023 04:11:48 AM
procrespcode: null
scverification: ''
addressverification: ''
transactionamount: 2
currency: USD
feeamount: 0
feeauthcode: null
feeformat: null
feestatus: null
feetransactionid: null
feetype: null
feevalue: 0
threedsecure: null
paymentmethod:
paymentmethodid: 32630
type: VISA
last4: '6599'
routingnumber: null
tokenid: null
firstname: ABC
lastname: Financial
expirationmonth: '8'
expirationyear: '2030'
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60563'
country: US
phonenumber: ''
email: first.last@company.com
GetPaymentDetailsV2:
value:
accountid: 1000000001
message: Payment details retrieved successfully.
status: 'Y'
transaction:
merchantid: '123456144562'
returncode: '000'
returndescription: Approval
transactionstatus: 'Y'
pgtransactionid: '1234557539'
paymenttransactionid: '3527'
authorizationcode: PPS010
transactiondate: 02/14/2019 03:00:28 PM
procrespcode: RPCT
transactionamount: 75
currency: USD
orderid: ord123
invoiceid: inv123
reference: ecom
feeamount: 0.35
feeauthcode: TSTAUT
feeformat: Percentage
feestatus: 'Y'
feetransactionid: '6141'
feetype: Surcharge
feevalue: 3.5
paymentmethod:
paymentmethodid: 12900
type: MC
last4: '5454'
tokenid: '123456641895454'
firstname: Test
lastname: Auth
expirationmonth: '4'
expirationyear: '2027'
addressline1: 495 N Commons Dr
addressline2: ''
city: Aurora
state: IL
zip: '60563'
country: US
achaccounttype: ''
GetPMOnRequestDualMID:
value:
accountid: 1000000001
token: 99cfd601-d6da-ee11-bad5-0022488db98a
message: Payment methods retrieved successfully.
emailtoken: 'N'
emailtokenreceived: 'N'
paymentmethods:
- paymentmethodid: 42804
type: VISA
last4: '1132'
routingnumber: null
tokenid: '1234529466891132'
firstname: First
lastname: Last
expirationmonth: '8'
expirationyear: '2028'
addressline1: '1156 Inverness #123,'
city: Naperville
state: IL
zip: '60504'
country: US
phonenumber: '1231231234'
email: first.last@company.com
cardtype: CREDIT
surchargeapplicable: 'Y'
TransactionHistoryRespDualMID:
value:
accountid: 1000000001
transactionscount: 100
pagenumber: 1
transactionremaining: 'Yes'
paymentdata:
paymentheader:
- paymentheaderid: 51257
sourcetype: O
customerid: '4242'
supplierid: ''
companycode: '00200'
transactionamount: 108.15
comments: ''
reasoncode: ''
leasedetail: null
paymentdetails: []
paymenttransaction:
transactionid: '234150224757'
paymenttransactionid: 1000016476
referencetransactionid: null
currencycode: USD
pgtransactiontype: A
pgmerchantname: '777999000123'
merchantid: '777999000123'
merchantname: CardConnectSurcharge
transactionamount: 108.15
authorizationnumber: PPS576
ordernumber: null
pgreturncode: '000'
pgreturndescription: Transaction successful.
paymentdate: 02.13.2024 05:52:27 AM
feetype: Surcharge
feeamount: 3.15
feevalue: 3
feeformat: Percentage
feestatus: 'Y'
feeauthcode: PPS576
feetransactionid: '1000076'
userfields: null
batchid: ''
submittedby: testcsr
paymentmethod:
type: VISA
last4: '1132'
routingnumber: ''
tokenid: '1234529466891132'
merchantid: '12325144562'
merchantname: DevCardConnect
paymentgateway: CardConnect
firstname: First
lastname: Last
expirationmonth: 9
expirationyear: 2029
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '65214'
country: US
phonenumber: ''
email: first.last@company.com
cardtype: CREDIT
surchargeapplicable: 'Y'
paymenttransactionrecon: null
paymentdate: 02.13.2024 05:52:25 AM
interoprequestnumber: 5fc87ca6-65ca-ee11-bad5-0022488d741a
- paymentheaderid: 51258
sourcetype: O
customerid: '4242'
supplierid: ''
companycode: '00200'
transactionamount: 108.15
comments: ''
reasoncode: ''
leasedetail: null
paymentdetails: []
paymenttransaction:
transactionid: '521479225648'
paymenttransactionid: 1000054677
referencetransactionid: null
currencycode: USD
pgtransactiontype: A
pgmerchantname: '777999000123'
merchantid: '777999000123'
merchantname: CardConnectSurcharge
transactionamount: 108.15
authorizationnumber: PPS786
ordernumber: null
pgreturncode: '000'
pgreturndescription: Transaction successful.
paymentdate: 02.13.2024 06:07:20 AM
feetype: Surcharge
feeamount: 3.15
feevalue: 3
feeformat: Percentage
feestatus: 'Y'
feeauthcode: PPS786
feetransactionid: '1000098777'
userfields: null
batchid: ''
submittedby: testcsr
paymentmethod:
type: VISA
last4: '1132'
routingnumber: ''
tokenid: '1234529466891132'
merchantid: '123295144562'
merchantname: DevCardConnect
paymentgateway: CardConnect
firstname: First
lastname: Last
expirationmonth: 9
expirationyear: 2029
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '65214'
country: US
phonenumber: ''
email: first.last@company.com
cardtype: CREDIT
surchargeapplicable: 'Y'
paymenttransactionrecon: null
paymentdate: 02.13.2024 06:07:18 AM
interoprequestnumber: a53924dd-67ca-ee11-bad5-0022488db98a
- paymentheaderid: 51263
sourcetype: O
customerid: '4242'
supplierid: ''
companycode: '00200'
transactionamount: 108.15
comments: ''
reasoncode: ''
leasedetail: null
paymentdetails: []
paymenttransaction:
transactionid: '045988219460'
paymenttransactionid: 1000016483
referencetransactionid: null
currencycode: USD
pgtransactiontype: A
pgmerchantname: '777999000123'
merchantid: '777999000123'
merchantname: CardConnectSurcharge
transactionamount: 108.15
authorizationnumber: PPS084
ordernumber: null
pgreturncode: '000'
pgreturndescription: Transaction successful.
paymentdate: 02.14.2024 04:24:14 AM
feetype: Surcharge
feeamount: 3.15
feevalue: 3
feeformat: Percentage
feestatus: 'Y'
feeauthcode: PPS084
feetransactionid: '1000085283'
userfields: null
batchid: ''
submittedby: testcsr
paymentmethod:
type: VISA
last4: '1132'
routingnumber: ''
tokenid: '1234529466891132'
merchantid: '123295144562'
merchantname: DevCardConnect
paymentgateway: CardConnect
firstname: First
lastname: Last
expirationmonth: 9
expirationyear: 2029
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '65214'
country: US
phonenumber: ''
email: first.last@company.com
cardtype: CREDIT
surchargeapplicable: 'Y'
paymenttransactionrecon: null
paymentdate: 02.14.2024 04:24:12 AM
interoprequestnumber: 3dc7f313-23cb-ee11-bad5-0022488db98s
CustomerPMUploadMultipleRecords:
value:
accountid: 1000000001
email: first.last@company.com
paymentgateway: CardConnect
customerdetail:
- customerid: '4242'
paymentmethoddata:
- paymentmethod:
tokenid: '1234850494839193'
type: VISA
last4: '9193'
maskedaccountnumber: null
routingnumber: ''
expirationmonth: '01'
expirationyear: '2025'
merchantid: '123495144562'
firstname: First
lastname: Last
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60504'
country: USA
phonenumber: '6304299800'
email: first.last@company.com
enrollautopay: 'Y'
maxamountperinvoice: '1000'
currencycode: USD
companycode: '00200'
branchplant: A10
ordertype: SO
associationtype: soldto
isdefault: 'N'
- paymentmethod:
tokenid: '1234660588517989'
type: MC
last4: '7989'
maskedaccountnumber: null
routingnumber: ''
expirationmonth: '01'
expirationyear: '2028'
merchantid: '123495144562'
firstname: First
lastname: Last
addressline1: 495 N Commons Dr
city: Aurora
state: IL
zip: '60504'
country: USA
phonenumber: '6304299800'
email: first.last@company.com
enrollautopay: 'N'
maxamountperinvoice: '0'
currencycode: USD
companycode: '00200'
branchplant: A10
ordertype: SO
associationtype: soldto
isdefault: 'Y'


Common401Response:
value:
accountid: 1000000001
status: 'N'
message: Authentication failed.
reference: ''
purchaseorder: ''
UserDataUpload401Response:
value:
accountid: 1000000001
requestid: 17326
apiname: UserDataUploadAPI
status: 'N'
message: Authentication failed.
GetRequestID401Response:
value:
accountid: 1000000001
requestid: ''
status: 'N'
message: Authentication failed.
GetPaymentDetail401Response:
value:
accountid: 1000000001
message: Authentication failed.
GetTransaction401Response:
value:
accountid: 1000000001
message: Authentication failed.
status: 'N'
TransactionHistory401Response:
value:
accountid: 1000000001
requestid: 17327
apiname: TransactionHistory
status: 'N'
message: Authentication failed.
FundingHistory401Response:
value:
accountid: 1000000001
requestid: 17328
apiname: FundingHistory
status: 'N'
message: Authentication failed.
GetPaymentMethods401Response:
value:
accountid: 1000000001
requestid: 17330
apiname: GetPaymentMethods
status: 'N'
message: Authentication failed.
SendPaymentLink401Response:
value:
accountid: 1000000001
requestid: ''
status: 'N'
message: Authentication failed.
CancelEmailLink401Response:
value:
accountid: 1000000001
status: 'N'
message: Authentication failed.
SnapPayReporting401Response:
value:
accountid: 1000000001
requestid: 17332
apiname: SnapPayReporting
status: 'N'
message: Authentication failed.
GetSSOToken401Response:
value:
accountid: 1000000001
token: ''
status: 'N'
message: Authentication failed.
InvoiceDataUpload401Response:
value:
accountid: 1000000001
requestid: 17333
apiname: InvoiceDataUpload
status: 'N'
message: Authentication failed.
CustomerPaymentMethod401Response:
value:
accountid: 1000000001
requestid: 17334
apiname: CustomerPaymentMethodUpload
status: 'N'
message: Authentication failed.
TenantSalesHistoryUpload401Response:
value:
accountid: 1000000001
requestid: 17335
apiname: TenantSalesHistoryUpload
status: 'N'
message: Authentication failed.
CustomerDataUpload401Response:
value:
accountid: 1000000001
requestid: 17336
apiname: CustomerDataUpload
status: 'N'
message: Authentication failed.
InvoiceOrderDataUpload401Response:
value:
accountid: 1000000001
requestid: 17337
apiname: InvoiceOrderDataUpload
status: 'N'
message: Authentication failed.
SupplierDataUpload401Response:
value:
accountid: 1000000001
requestid: 17338
apiname: SupplierDataUpload
status: 'N'
message: Authentication failed.
SupplierInvoiceDataUpload401Response:
value:
accountid: 1000000001
requestid: 17339
apiname: SupplierInvoiceDataUpload
status: 'N'
message: Authentication failed.
SupplierPaymentMethodUpload401Response:
value:
accountid: 1000000001
requestid: 17340
apiname: SupplierPaymentMethodUpload
status: 'Y'
message: Request received.
DocumentUpload401Response:
value:
accountid: 1000000001
requestid: 17341
apiname: DocumentUpload
status: 'N'
message: Authentication failed.
GetToken401Response:
value:
accountid: 1000000001
token: ''
status: 'N'
message: Authentication failed.
TenantSalesReportDownload401Response:
value:
accountid: 1000000001
requestid: 17342
apiname: TenantSalesReportDownload
status: 'N'
message: Authentication failed.
GetServiceFeeAmount401Response:
value:
accountid: 1000000001
servicefeeamount: 0
message: Authentication failed.
status: 'N'
TransactionUpdate401Response:
value:
accountid: 1000000001
requestid: 17343
apiname: TransactionUpdate
status: 'N'
message: Authentication failed.
AuthCard401Response:
value:
accountid: 1000000001
requestid: 841
apiname: authCard
status: 'N'
message: Authentication failed.
AuthManual401Response:
value:
accountid: 1000000001
requestid: 844
apiname: authManual
status: 'N'
message: Authentication failed.
Connect401Response:
value:
accountid: 1000000001
requestid: 845
apiname: connect
status: 'N'
message: Authentication failed.
Disconnect401Response:
value:
accountid: 1000000001
requestid: 846
apiname: disconnect
status: 'N'
message: Authentication failed.
ListTerminals401Response:
value:
accountid: 1000000001
requestid: 850
apiname: listTerminals
status: 'N'
message: Authentication failed.
PreConnect401Response:
value:
accountid: 1000000001
requestid: 853
apiname: preconnect
status: 'N'
message: Authentication failed.
ReadCard401Response:
value:
accountid: 1000000001
requestid: 855
apiname: readCard
status: 'N'
message: Authentication failed.
ReadConfirmation401Response:
value:
accountid: 1000000001
requestid: 856
apiname: readConfirmation
status: 'N'
message: Authentication failed.
ReadInput401Response:
value:
accountid: 1000000001
requestid: 857
apiname: readInput
status: 'N'
message: Authentication failed.
ReadManual401Response:
value:
accountid: 1000000001
requestid: 858
apiname: readManual
status: 'N'
message: Authentication failed.
ReadSignature401Response:
value:
accountid: 1000000001
requestid: 859
apiname: readSignature
status: 'N'
message: Authentication failed.
Tip401Response:
value:
accountid: 1000000001
requestid: 860
apiname: tip
status: 'N'
message: Authentication failed.
Cancel401Response:
value:
accountid: 1000000001
requestid: 861
apiname: cancel
status: 'N'
message: Authentication failed.
Display401Response:
value:
accountid: 1000000001
requestid: 862
apiname: display
status: 'N'
message: Authentication failed.
ClearDisplay401Response:
value:
accountid: 1000000001
requestid: 863
apiname: clearDisplay
status: 'N'
message: Authentication failed.
DateTime401Response:
value:
accountid: 1000000001
requestid: 864
apiname: dateTime
status: 'N'
message: Authentication failed.
TransactionUpdateRequest:
value:
accountid: 1000000001
message: Transaction Successful–Payment modified in ERP
paymentdata:
- paymentheaderid: 452023
paymenttransactionid: 1200001295
- paymentheaderid: 452082
paymenttransactionid: 105516222275
TransactionUpdateResponse:
value:
accountid: 1000000001
message: Transaction Updated Succesfully.
status: 'Y'
requestid: 17386
apiname: TransactionUpdate
paymentdata:
- paymentheaderid: 452023
paymenttransactionid: 1200001295
status: 'Y'
- paymentheaderid: 452082
paymenttransactionid: 105516222275
status: 'Y'
ReadCardPINDebit:
value:
merchantId: '123456789'
hsn: '356765658858'
amount: '2'
includeSignature: 'false'
gzipSignature: 'false'
signatureFormat: png
signatureImageType: rgb
signatureDimensions: 320,450
includeAmountDisplay: 'false'
confirmAmount: 'true'
beep: 'false'
aid: debit
includePIN: 'true'
AuthCardPINDebit:
value:
merchantId: '123456789'
hsn: '356765658858'
amount: '2'
includeSignature: 'false'
includeAmountDisplay: 'true'
beep: 'false'
aid: debit
includePIN: 'true'
includeAVS: 'true'
capture: 'true'
orderId: 06252019-02
userFields:
UDF1: udf1
UDF2: udf2
clearDisplayDelay: '500'
GetPMOnRequest401Response:
value:
accountid: 1000000001
token: ''
message: Authentication failed.
GetSavedPM401Response:
value:
accountid: 1000000001
message: Authentication failed.
IVR401Response:
value:
error_code: '101'
error_message: Authentication failed.
IVRAuthRequest:
value:
method: charge
transaction_id: '1234567'
cardnumber: '4024007176123123'
cvv: '123'
expiry_month: '08'
expiry_year: '2023'
description: test
amount: '25.0'
currency_code: USD
postal_code: '94111'
parameters:
snappay_action: authorize
snappay_accountid: '1000000001'
snappay_merchantid: '540991234'
snappay_userid: testuser
snappay_card_type: VISA
snappay_mode: CC
snappay_orderid: ORD-112521-01
snappay_invoiceid: INV-112521-01
snappay_purchaseorder: PO-112521-01
snappay_level3:
- linenumber: '1.000'
productcode: ROS01
taxrate: '0.073'
quantity: '2'
itemdescriptor: Mixed Bouquet
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: BQT02
taxrate: '0.073'
quantity: '2'
itemdescriptor: Spring Bouquet
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
IVRChargeRequest:
value:
method: charge
transaction_id: '1234567'
cardnumber: '4024007176123123'
cvv: '123'
expiry_month: '08'
expiry_year: '2023'
description: test
amount: '25.0'
currency_code: USD
postal_code: '94111'
parameters:
snappay_action: charge
snappay_accountid: '1000000001'
snappay_merchantid: '540991234'
snappay_userid: testuser
snappay_card_type: VISA
snappay_mode: CC
snappay_orderid: ORD-112521-01
snappay_invoiceid: INV-112521-01
snappay_purchaseorder: PO-112521-01
snappay_level3:
- linenumber: '1.000'
productcode: ROS01
taxrate: '0.073'
quantity: '2'
itemdescriptor: Mixed Bouquet
unitcost: '30.7500'
lineitemtotal: '65.96'
taxamount: '4.46'
commoditycode: ''
unitofmeasure: EA
- linenumber: '2.000'
productcode: BQT02
taxrate: '0.073'
quantity: '2'
itemdescriptor: Spring Bouquet
unitcost: '25.6250'
lineitemtotal: '54.97'
taxamount: '3.72'
commoditycode: ''
unitofmeasure: EA
IVRTokenizeRequest:
value:
method: charge
transaction_id: '1234567'
cardnumber: '1234007176123123'
cvv: '123'
expiry_month: '08'
expiry_year: '2023'
description: test
amount: '25.0'
currency_code: USD
postal_code: '94111'
parameters:
snappay_action: tokenize
snappay_accountid: '1000000001'
snappay_merchantid: '540991234'
snappay_userid: testuser
snappay_card_type: VISA
snappay_mode: CC
snappay_orderid: ORD-112521-01
snappay_invoiceid: INV-112521-01
snappay_purchaseorder: PO-112521-01
IVRFailedResponse:
value:
error_code: '5003'
error_message: 'Transaction failed. SGS-005003: The order already exists in the database.'
parameters:
snappay_action: Authorize
snappay_accountid: '1000000001'
snappay_response.status: 'N'
snappay_response.message: Transaction failed.
snappay_response.purchaseorder: PO-AU-24
snappay_response.cards.merchantid: '541617612345'
snappay_response.cards.tokenid: '12345681973568'
snappay_response.cards.returncode: '5003'
snappay_response.cards.returndescription: 'SGS-005003: The order already exists in the database.'
snappay_response.cards.pgtransactionid: '0'
snappay_response.cards.paymenttransactionid: '100001215'
snappay_response.cards.authorizationcode: ''
snappay_response.cards.status: 'N'
snappay_response.cards.transactiondate: 02/01/2022 07:15:40 AM
snappay_response.cards.procrespcode: ''
snappay_response.cards.scverification: ''
snappay_response.cards.addressverification: ''
snappay_response.cards.transactionamount: '25'
snappay_response.cards.currency: USD
snappay_response.cards.totaltransactionamount: '25'
snappay_response.cards.feeamount: '0'
snappay_response.cards.feevalue: '0'
AddIVRPMRequest401Response:
value:
accountid: 1000000001
token: ''
message: Authentication failed.
status: 'N'
IVRAuthRequestWithSurcharge:
value:
method: authorize
transaction_id: 4ceb5c4f-336f-4e96-bc3d-4bfbde6b435b
cardnumber: '1234502808876517'
cvv: '123'
expiry_month: '08'
expiry_year: '25'
description: 'test'
amount: '25.0'
currency_code: USD
postal_code: '60540'
parameters:
snappay_action: authorize
snappay_accountid: '1000000001'
snappay_merchantid: '123459000999'
snappay_customerid: '1212'
snappay_userid: testuser
snappay_card_type: ''
snappay_mode: CC
snappay_orderid: ORD-23-5
snappay_invoiceid: INV-23-5
snappay_purchaseorder: PO-23-5
IVRAuthResponseWithSurcharge:
value:
charge_id: '017833237581'
parameters:
snappay_action: Authorize
snappay_accountid: '1000000001'
snappay_response.status: 'Y'
snappay_response.message: Transaction successful.
snappay_response.purchaseorder: PO-23-5
snappay_response.cards.merchantid: '123459000999'
snappay_response.cards.tokenid: '1234563235811730'
snappay_response.cards.returncode: '000'
snappay_response.cards.returndescription: Approval
snappay_response.cards.pgtransactionid: '017812337581'
snappay_response.cards.paymenttransactionid: '1230011481'
snappay_response.cards.authorizationcode: PPS006
snappay_response.cards.status: 'Y'
snappay_response.cards.transactiondate: 01/17/2023 09:26:15 AM
snappay_response.cards.procrespcode: RPCT
snappay_response.cards.scverification: P
snappay_response.cards.addressverification: Z
snappay_response.cards.transactionamount: '25'
snappay_response.cards.currency: USD
snappay_response.cards.totaltransactionamount: '25.88'
snappay_response.cards.feeamount: '0.88'
snappay_response.cards.feeauthcode: PPS006
snappay_response.cards.feeformat: Percentage
snappay_response.cards.feevalue: '3.5'
snappay_response.cards.feestatus: 'Y'
snappay_response.cards.feetransactionid: '017128237581'
snappay_response.cards.feetype: Surcharge
snappay_response.cards.procresp: RPCT-000
IVRChargeRequestWithSurcharge:
value:
method: charge
transaction_id: 4ceb5c4f-336f-4e96-bc3d-4bfbde6b435b
cardnumber: '1234482199413568'
cvv: '123'
expiry_month: '08'
expiry_year: '25'
description: test
amount: '50.0'
currency_code: USD
postal_code: '94111'
parameters:
snappay_action: charge
snappay_accountid: '1000000001'
snappay_merchantid: '123459000999'
snappay_userid: testuser
snappay_card_type: ''
snappay_mode: CC
snappay_orderid: ORD-CH2301-5
IVRChargeResponseWithSurcharge:
value:
charge_id: '017746337810'
parameters:
snappay_action: Charge
snappay_accountid: '1000000001'
snappay_response.status: 'Y'
snappay_response.message: Transaction successful.
snappay_response.transaction.merchantid: '123459000999'
snappay_response.transaction.returncode: '000'
snappay_response.transaction.returndescription: Approval
snappay_response.transaction.pgtransactionid: '019746337810'
snappay_response.transaction.paymenttransactionid: '1360011483'
snappay_response.transaction.authorizationcode: PPS760
snappay_response.transaction.transactiondate: 01/17/2023 09:30:04 AM
snappay_response.transaction.procrespcode: RPCT
snappay_response.transaction.scverification: P
snappay_response.transaction.addressverification: A
snappay_response.transaction.transactionamount: '50'
snappay_response.transaction.currency: USD
snappay_response.transaction.procresp: RPCT-000
snappay_response.transaction.totaltransactionamount: '51.75'
snappay_response.transaction.feeamount: '1.75'
snappay_response.transaction.feeauthcode: PPS760
snappay_response.transaction.feeformat: Percentage
snappay_response.transaction.feevalue: '3.5'
snappay_response.transaction.feestatus: 'Y'
snappay_response.transaction.feetransactionid: '037746337810'
snappay_response.transaction.feetype: Surcharge
UploadStatus401Response:
value:
accountid: 1000000001
requestid: 0
apiname: ''
email: ''
status: 'N'
message: Authentication failed.
datareceived: 0
datainserted: 0
dataupdated: 0
datafailed: 0
datasent: 0
failurerecords: null
StatementUploadWithContent:
value:
accountid: 1000000001
email: first.last@company.com
statementdata:
statementheader:
- customerid: '4242'
statementid: '101125'
statementtype: ST
companycode: '00200'
currency: USD
statementmonth: '02'
statementamount: 10
fiscalyear: '2024'
statementdate: '2024-02-15'
allowpayment: 'N'
statementcontent: JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFIvTGFuZyhlbi1VUykgL1N0cnVjdFRyZWVSb290IDE2IDAgUi9NYXJrSW5mbzw8L01hcmtlZCB0cnVlPj4+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PC9UeXBlL1BhZ2VzL0NvdW50IDEvS2lkc1sgNCAwIFJdID4
invoicedetail:
- invoicenumber: 'IN1234'
DocumentUploadForStatement:
value:
accountid: 1000000001
documentid: ''
customerid: '4242'
documenttype: ST
companycode: '00200'
documentname: abc.pdf
invoiceorstatement: S
fiscalyear: '2024'
size: null
url: ''
filename: ''
content: JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFIvTGFuZyhlbi1VUykgL1N0cnVjdFRyZWVSb290IDE2IDAgUi9NYXJrSW5mbzw8L01hcmtlZCB0cnVlPj4+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PC9UeXBlL1BhZ2VzL0NvdW50IDEvS2lkc1sgNCAwIFJdID4
PaymentDataUpload401Response:
value:
accountid: 1000000001
requestid: 18701
apiname: PaymentDataUpload
status: 'N'
message: Authentication failed.
UserDataUploadUsingCompanyCurreny:
value:
accountid: '1000000001'
users:
- userid: user01
firstname: CSR
lastname: USER
email: csr.user@company.com
usertypename: CSR
usergroupname: CSR
isactive: 'Y'
effectivefrom: '2025-01-23'
effectiveto: '2028-12-31'
phone: 123-456-7890
forcepasswordreset: 'Y'
forcetermsandconditions: 'Y'
devicegroup: devicegrp
deleteuser: 'N'
companycurrency:
- company: '00502'
currency: USD
- company: '202020'
currency: USD


parameters:
AccountIDParam:
name: accountid
schema: {
type: number,
default: 1000000001
}
in: header
required: true
description: >-
Provide the SnapPay account ID as supplied by SnapPay.
MerchantIDParam:
name: merchantid
schema: {
type: string,
default: ''
}
in: header
required: true
description: >-
The Merchant ID. If you provide this parameter, SnapPay will bypass the logic of identifying the merchant ID for the transaction. For transactions of type 'T', always include the Merchant ID.
HMACParam:
name: signature
schema: {
type: string,
default: Hmac
MTAwMDQ2Mjk0MjpFK0dRUHZTS2NDaUsweHhZRm8rcFg3SEZJUmYS0wOTkxLTQ0ZDgtYTgzMy03YTdmNDY4OGEzZTc6Y0NDM1NDA0MA==
}
in: header
required: false
description: >-
HMAC Signature required for authentication. Refer to the "What's Needed" section under Documentation for more details.
StartDateParam:
name: startdate
schema: {
type: string,
default: 04/01/2023
}
in: query
required: false
description: >-
The beginning of the date range for fetching records/transactions
EndDateParam:
name: enddate
schema: {
type: string,
default: 05/01/2023
}
in: query
required: false
description: >-
The end of the date range for fetching records/transactions
TypeParam:
name: type
schema: {
type: string,
default: C
}
in: query
required: false
description: >-
Type
PageNumberParam:
name: pagenumber
schema: {
type: number,
default: 1
}
in: query
required: false
description: >-
Page Number
SessionKeyParam:
name: X-CardConnect-SessionKey
schema: {
type: string,
default: 72eb45c4e6034aa1b5c5ba0532209a87
}
in: header
required: true
description: >-
72eb45c4e6034aa1b5c5ba0532209a87
PaymentModeParam:
name: paymentmode
schema: {
type: string,
default: ""
}
in: query
required: false
description: >-
CC or ACH or All or empty
RequestTypeParam:
name: requesttype
schema: {
type: string,
default: ""
}
in: query
required: false
description: >-
SendLink or Order or Invoice or empty
TransactionTypeParam:
name: transactiontype
schema: {
type: string,
default: ""
}
in: query
required: false
description: >-
A or S or D or V or empty
schemas:
GetRequestIDRequest:
type: object
required: [accountid, companycode, currencycode
,customerid, userid, transactiontype, paymentmethod, redirecturl,transactionamount, stylecss]
properties:
accountid:
description: Account ID
type: number
example:  1000000001
companycode:
description: Company Code
type: string
example: '00200'
currencycode:
description: Currency Code
type: string
example: USD
customerid:
description: Customer ID
type: string
example: 100
userid:
description: External Application User ID
type: string
example: first.last@company.com
savepaymentmethod:
description: Save payment method for future use
type: string
example: 'Y'
transactiontype:
description: S - for Sale
type: string
example: S
paymentmethod:
description: CC - for credit card
type: string
example: CC
displaycardssavedatcustomer:
description: Display card saved at customer level
type: string
example: "Y"
language:
description: en-US for English language
type: string
example: en-US
redirecturl:
description: en-US for English language
type: string
example: https://xyz.com/orderconfirmation
redirectionurlonerror:
type: string
description: Redirection URL when error occured
example: "#"
reference:
type: string
description: Reference
example: null
type:
type: string
description: Customer type
example: "C"
transactionamount:
description: Transaction Amount
type: integer
example: 100.25
cvvrequired:
description: Credit Card Security Code
type: string
example: 'Y'
invoiceid:
description: Invoice ID
type: string
example: '4621657657'
orderid:
description: Order ID
type: string
example: ''
comments:
description: Comments
type: string
example: 'test comments'
stylecss:
description: Style CSS
type: string
example: ''
ordertype:
description: Order Type
type: string
example: ''
branchplant:
description: Branch plant
type: string
example: ''
useboltdevice:
description: Terminal device flag
type: string
example: 'N'
devicehsn:
description: Device HSN number
type: string
example: ''
purchaseorder:
description: Purchase order number
type: string
example: '1243'
ecomind:
description: Ecommerce indicator
type: string
example: 'E'
cof:
description: COF
type: string
example: 'C'
cofscheduled:
description: COF Scheduled
type: string
example: 'N'
openiniframe:
description: Open in iframe flag
type: string
example: 'Y'
sendemailreceipts:
description: Send email flag
type: string
example: 'Y'
parenturi:
description: Parent uri
type: string
example: 'https://abc.com'
displaycardname:
description: Display card name flag
type: string
example: 'Y'
displayaddress:
description: Display address flag
type: string
example: 'Y'
displaytransactionamount:
description: Display transaction amount flag
type: string
example: 'Y'
displaycurrencycode:
description: Display currency code flag
type: string
example: 'Y'
displaycustomer:
description: Display customer flag
type: string
example: 'Y'
displaypagetitle:
description: Display page title flag
type: string
example: 'Y'
adderpcustomerinsnappay:
description: To override account parameter value AddERPCustomerInSnapPay. Y or N
type: string
example: 'Y'
forceusertoenteraddress:
description: To override account parameter value ForceUserToEnterAddress. Y or N
type: string
example: 'Y'
user:
type: object
properties:
userfirstname:
type: string
description: User first name
example: Fistname
userlastname:
type: string
description: User last name
example: Lastname
useremail:
type: string
description: User email
example: firstname.lastname@company.com
forcepasswordreset:
type: string
description: Force password flag
example: N
forcetermsandconditions:
type: string
description: Force terms and conditions flag
example: N
devicegroup:
type: string
description: Device group
example: Device1
customer:
type: object
properties:
customername:
type: string
description: Customer name
example: "custname"
addressline1:
type: string
description: Address Line1
example: "Street 100"
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: "Chicago"
state:
type: string
description: State
example: "IL"
zipcode:
type: string
description: Zipcode
example: "60603"
country:
type: string
description: Country
example: "US"
phone:
type: string
description: Phone number
example: ""
email:
type: string
description: Email
example: first.last@company.com
vatregistrationnumber:
type: string
description: VAT registration number
example: ''
supplier:
type: object
properties:
suppliername:
type: string
description: Customer name
example: suppname
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zipcode:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phone:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
identificationtype:
type: string
description: >-
Allowed values are "DATE_OF_BIRTH" Or "MEMBER_ID" OR "SPECIAL_CODE" used for payee creation in money network.
example: 'MEMBER_ID'
identificationdata:
type: string
description: Identification data
example: '123456'
companyname:
description: Company name
type: string
example: 'ABC Builders'
clientcompanyname:
type: string
description: Client company name
example: 'XYZ'
internalmemo:
type: string
description: Internal memo
example: ''
comments:
type: string
description: Comments
example: 'test comments'
reason:
type: string
description: Reason
example: ''
status:
type: string
description: Status
example: ''
level3:
type: array
items:
type: object
properties:
linenumber:
type: string
description: Line number
example: '1'
productcode:
type: string
description: Product code
example: ROS01
taxrate:
type: number
description: Tax rate
example: 0.073
quantity:
type: number
description: Quantity
example: 2
itemdescription:
type: string
description: Item description
example: 'Mixed bouquet'
unitcost:
type: number
description: Unit cost
example: 30.75
lineitemtotal:
type: number
description: Line item total
example: 65.96
taxamount:
type: number
description: Tax amount
example: 4.46
commoditycode:
type: string
description: Commodity code
example: ''
unitofmeasure:
type: string
description: Unit of measure
example: 'EA'
GetRequestIDResponse:
type: object
properties:
accountid:
type: number
description: Account ID
example:  1000000001
requestid:
type: string
description: Request ID that will be used to open SnapPay iFrame
example: 0b724a4f-5bbb-e811-b229-000c29cce4c0
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: e.g. Information stored successfully
example: Information stored successfully.
GetPaymentDetailsRequest:
type: object
properties:
accountid:
description: Account ID
type: string
example:  >-
1000000001
token:
description: Request Token ID
type: string
example: 073c8be3-b0db-e811-a954-000d3a92a01e
GetPaymentDetailsResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: e.g. Payment details retrieved successfully
example: Payment details retrieved successfully
paymentmethod:
type: object
properties:
paymentmethodid:
type: integer
description: SnapPay Payment Method ID for Credit Card or ACH
example: 123456
tokenid:
type: string
description: Payment Gateway Token ID for Credit Card or ACH
example: 9412345678912344
last4:
type: string
description: Last 4 digits of credit card or bank account number
example: 2345
type:
type: string
description: Visa / MC / Discover / AMEX / Checking / Saving
example: VISA
routingnumber:
type: string
description: Bank Routing Number
example: 71904779
firstname:
type: string
description: First Name
example: First
lastname:
type: string
description: Last Name
example: Last
expirationmonth:
type: string
description: Expiration Month
example: 12
expirationyear:
type: string
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: first.last@company.com
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
totaltransactionamount:
type: string
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 100
feereturncode:
type: string
description: >-
Return code for fee transaction. It will same as
returncode if the feetype is convenience or surcharge
and different if the fee type is service (MSF)
example: null
feereturndescription:
type: string
description: Return description for fee transaction
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID â€“ same as transactionid for
surcharge and convenience fee
example: null
feeauthcode:
type: string
description: >-
Fee Transaction Authorization Code â€“ same as
authorizationcode for surcharge fee and convenience
fee
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feetype:
type: string
description: Fee Type (Surcharge, Service or Convenience)
example: null
feeformat:
type: string
description: >-
Fee Format (Percentage for Surcharge and dollar amount
for convenience fee)
example: null
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
TokenizeRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requesttype:
type: string
description: >-
Request Type C for customer and S for supplier. Default
value is C if this parameter is not sent
example: C
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Sales Order Type
example: null
mode:
type: string
description: CC for credit card and ACH for back details
example: CC
type:
type: string
description: >-
Type of Credit Card or Bank Account - VISA / MC / DISCOVER /
AMEX / CHECKING / SAVING
example: VISA
routingnumber:
type: string
description: Bank Routing Number
example: 71904779
bankname:
type: string
description: Bank name
example: ABC Bank
checktype:
type: string
description: Check Type â€“ C for corporate and P for personal
example: null
identificationtype:
type: string
description: >-
Identification Type - T for Tax ID, S for SSN & D for Driver
License
example: null
dlstate:
type: string
description: Driver License State
example: null
identificationnumber:
type: string
description: Identification Number
example: null
accountnumber:
type: string
description: Credit Card Number of Bank Account Number
example: XXXXXXXXXXXX1111
expirationdate:
type: string
description: Expiration Date (mmYYYY)
example: 122029
name:
type: string
description: Name on credit card or bank account
example: First Last
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: first.last@company.com
phonenumber:
type: string
description: Phone Number
example: 630-123-1233
TokenizeResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Tokenization successful.
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Sales Order Type
example: null
mode:
type: string
description: CC for credit card and ACH for back details
example: Tokenization successful.
type:
type: string
description: >-
Type of Credit Card or Bank Account - VISA / MC / DISCOVER
/ AMEX / CHECKING / SAVING
example: VISA
last4:
type: string
description: Last 4 of credit card or bank account number
example: 1111
routingnumber:
type: string
description: Bank Routing Number
example: null
bankname:
type: string
description: Bank Name
example: null
checktype:
type: string
description: Check Type â€“ C for corporate and P for personal
example: null
identificationtype:
type: string
description: >-
Identification Type T for Tax ID, S for SSN and D for
Driver License
example: null
identificationnumber:
type: string
description: Identification Number
example: null
tokenid:
type: string
description: Credit Card or Bank Account Token
example: 9447829389471112
expirationdate:
type: string
description: Credit Card Expiration Date
example: 122029
name:
type: string
description: Name on Credit Card or Bank Account
example: John Smith
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: Stage
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: john.smith@company.com
phonenumber:
type: string
description: Phone Number
example: null
AuthorizeRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Order Type
example: null
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
cards:
type: array
items:
type: object
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 9412345678912344
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
cvv:
type: string
description: CVV
example: 123
expirationdate:
type: string
description: Expiration Date mmYYYY
example: 122029
customername:
type: string
description: Name on credit card
example: John Smith
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: john.smith@company.com
phonenumber:
type: string
description: Phone Number
example: null
AuthorizeResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Authorization successful.
cards:
type: array
items:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
tokenid:
type: string
description: Credit Card Token ID
example: 9412345678912344
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
format: date-time
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
status:
type: string
description: status - Y/N
example: 'Y'
scverification:
type: string
description: Security/CVV Code Verification
example: P
addressverification:
type: string
description: Address Verification
example: Z
ChargeRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Order Type
example: null
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
paymentmethod:
type: object
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 9412345678912344
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
cvv:
type: string
description: CVV
example: 123
expirationdate:
type: string
description: Expiration Date mmYYYY
example: 122029
customername:
type: string
description: Name on credit card
example: John Smith
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: john.smith@company.com
phonenumber:
type: string
description: Phone Number
example: null
level3:
type: array
items:
type: object
properties:
linenumber:
type: string
description: Line Number
example: 1
productcode:
type: string
description: Product Code or Item Number
example: BQT01
unitcost:
type: integer
description: Unit Cost
example: 1.75
quantity:
type: integer
description: Quantity
example: 3
itemdescriptor:
type: string
description: Item/Product Description
example: Bouquet
unitofmeasure:
type: string
description: Unit of Measure
example: EA
commoditycode:
type: string
description: Commodity Code
example: Commodity Code1
taxamount:
type: integer
description: Tax Amount
example: 0.12
taxrate:
type: integer
description: Tax Rate in %
example: 8
itemdiscount:
type: integer
description: Item Discount
example: null
lineitemtotal:
type: integer
description: Line Item Total
example: 5.37
ChargeResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
scverification:
type: string
description: Security/CVV Code Verification
example: P
addressverification:
type: string
description: Address Verification
example: Z
totaltransactionamount:
type: string
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 100
feereturncode:
type: string
description: >-
Return code for fee transaction. It will same as
returncode if the feetype is convenience or surcharge
and different if the fee type is service (MSF)
example: null
feereturndescription:
type: string
description: Return description for fee transaction
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID â€“ same as transactionid for
surcharge and convenience fee
example: null
feeauthcode:
type: string
description: >-
Fee Transaction Authorization Code â€“ same as
authorizationcode for surcharge fee and convenience
fee
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feetype:
type: string
description: Fee Type (Surcharge, Service or Convenience)
example: null
feeformat:
type: string
description: >-
Fee Format (Percentage for Surcharge and dollar amount
for convenience fee)
example: null
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
CaptureRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
referencetransactionid:
type: string
description: >-
Reference Transaction ID. Either pgtransactionid or
paymenttransactionid based on SnapPay account configuration
example: 1394
transactionamount:
type: integer
description: Amount to be captured/settled
example: 500
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
level3:
type: array
items:
type: object
properties:
linenumber:
type: string
description: Line Number
example: 1
productcode:
type: string
description: Product Code or Item Number
example: BQT01
unitcost:
type: integer
description: Unit Cost
example: 1.75
quantity:
type: integer
description: Quantity
example: 3
itemdescriptor:
type: string
description: Item/Product Description
example: Bouquet
unitofmeasure:
type: string
description: Unit of Measure
example: EA
commoditycode:
type: string
description: Commodity Code
example: Commodity Code1
taxamount:
type: integer
description: Tax Amount
example: 0.12
taxrate:
type: integer
description: Tax Rate in %
example: 8
itemdiscount:
type: integer
description: Item Discount
example: null
lineitemtotal:
type: integer
description: Line Item Total
example: 5.37
CaptureResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1362
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 132912341342
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
format: date-time
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
CreditRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Order Type
example: null
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
paymentmethod:
type: object
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 9412345678912344
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
cvv:
type: string
description: CVV
example: 123
expirationdate:
type: string
description: Expiration Date mmYYYY
example: 122029
customername:
type: string
description: Name on credit card
example: John Smith
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: john.smith@company.com
phonenumber:
type: string
description: Phone Number
example: null
CreditResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
format: date-time
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
RefundRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
referencetransactionid:
type: string
description: >-
Reference Transaction ID. Either pgtransactionid or
paymenttransactionid based on SnapPay account configuration
example: 1394
transactionamount:
type: integer
description: Amount to be captured/settled
example: 500
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
RefundResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1362
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 132912341342
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
totaltransactionamount:
type: string
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 100
feereturncode:
type: string
description: >-
Return code for fee transaction. It will same as
returncode if the feetype is convenience or surcharge
and different if the fee type is service (MSF)
example: null
feereturndescription:
type: string
description: Return description for fee transaction
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID â€“ same as transactionid for
surcharge and convenience fee
example: null
feeauthcode:
type: string
description: >-
Fee Transaction Authorization Code â€“ same as
authorizationcode for surcharge fee and convenience
fee
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feetype:
type: string
description: Fee Type (Surcharge, Service or Convenience)
example: null
feeformat:
type: string
description: >-
Fee Format (Percentage for Surcharge and dollar amount
for convenience fee)
example: null
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
VoidRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
referencetransactionid:
type: string
description: >-
Reference Transaction ID. Either pgtransactionid or
paymenttransactionid based on SnapPay account configuration
example: 1394
transactionamount:
type: integer
description: Amount to be captured/settled
example: 500
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
VoidResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1362
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 132912341342
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
GetTransactionRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
orderid:
type: string
description: Account
example: 123456
transactionid:
type: string
description: Account
example: null
reference:
type: string
description: Accoun
example: null
purchaseorder:
type: string
description: Account
example: null
GetTransactionResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
message:
type: string
description: Message
example: Success
transactions:
type: array
items:
type: object
properties:
transactionstatus:
type: string
description: >-
Transaction Status - Open, Captured or Failed for
authorization transaction. Failed or Success for
other transactions.
example: Captured
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
pgtransactiontype:
type: string
description: >-
Payment Gateway Transaction Type - A for Authorize,
etc.
example: A
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 030028 PM
transactionamount:
type: integer
description: Transaction Amount
example: 75.25
currency:
type: string
description: Currency Code
example: USD
totaltransactionamount:
type: integer
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 75.25
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
dctransaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 496695144562
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Return Description
example: Approval
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 360354240638
paymenttransactionid:
type: integer
description: SnapPay Transaction ID
example: 43237
authorizationcode:
type: string
description: Authorization Code
example: PPS351
transactiondate:
type: string
description: Transaction Date
example: 07/31/2021 10:19:37 AM
procrespcode:
type: string
description: Processor Response Code
example: RPCT
transactionamount:
type: integer
description: Transaction Amount
example: 75.25
currency:
type: string
description: Currency Code
example: USD
totaltransactionamount:
type: integer
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 75.25
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
paymentmethod:
type: object
properties:
paymentmethodid:
type: integer
description: SnapPay Payment Method ID
example: 18304
tokenid:
type: string
description: Token ID
example: 9412345678912344
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
firstname:
type: string
description: First Name
example: John
lastrname:
type: string
description: Last Name
example: Smith
expirationmonth:
type: integer
description: Expiration Month
example: 12
expirationyear:
type: integer
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: john.smith@company.com
TransactionHistoryResponse:
type: object
properties:
accountid:
type: integer
description: SnapPay Account ID
example: 1000000001
transactionscount:
type: integer
description: >-
Transaction Count – This parameter will give the number of
payment transactions sent.
example: 100
transactionremaining:
type: string
description: >-
Transaction Remaining – This parameter will be set to
“Yes” if there are more transactions available to be
downloaded.
example: 'Yes'
paymentdata:
type: array
items:
type: object
properties:
paymentheaderid:
type: integer
description: SnapPay Payment Header ID
example: 12432
sourcetype:
type: string
description: >-
Source Type – I for Invoice and U for unapplied cash
payment (pre-payment)
example: I
customerid:
type: string
description: Customer ID
example: 5987
companycode:
type: string
description: Company Code
example: '00200'
transactionamount:
type: integer
description: Transaction Amount
example: 100.1
comments:
type: string
description: Header Comments
example: Comments about the payment
reasoncode:
type: string
description: Reason code selected while payment transaction
example: null
paymentdate:
type: string
description: SnapPay
example: 2018-07-16 8:05 PM
paymentdetails:
type: array
items:
type: object
properties:
invoicenumber:
type: string
description: Invoice Number
example: 13069
invoicetype:
type: string
description: Invoice Type
example: RI
linenumber:
type: string
description: Line Number (Pay Item)
example: 1
openamount:
type: integer
description: Open Amount
example: 300
taxableamount:
type: integer
description: Taxable Amount
example: 20
taxamount:
type: integer
description: Tax Amount
example: 10
paidamount:
type: integer
description: Paid Amount
example: 25
paidtax:
type: integer
description: Paid Tax
example: 0.5
discountavailable:
type: integer
description: Discount Available
example: 0
discounttaken:
type: integer
description: Discount Taken
example: 0
discountapplied:
type: integer
description: Discount Applied
example: 0
comments:
type: string
description: Line Comments
example: null
reasoncode:
type: string
description: Reason Code
example: null
paymentdate:
type: string
description: Transaction Date
example: 2018-07-16 8:05 PM
paymenttransaction:
type: object
properties:
transactionid:
type: string
description: Transaction ID
example: 100214822343
currencycode:
type: string
description: Currency Code
example: USD
pgtransactiontype:
type: string
description: Payment Gateway Transaction Type
example: S
pgmerchantname:
type: string
description: Payment Gateway Merchant Name
example: BluePay
transactionamount:
type: integer
description: Transaction Amount
example: 120.1
authorizationnumber:
type: string
description: Authorization Number
example: SDRDXX
pgreturncode:
type: string
description: Payment Gateway Return Code
example: 0
pgreturndescription:
type: string
description: Payment Gateway Return Description
example: Transaction Successful
paymentdate:
type: string
description: Transaction Date
example: 2018-07-16 8:05 PM
feetype:
type: string
description: Fee Type (Convenience / Surcharge / Service)
example: Convenience
feeamount:
type: integer
description: Fee Amount
example: 20
feevalue:
type: integer
description: >-
Fee Value – same as amount for convenience fee
and % for surcharge
example: 20
feeformat:
type: string
description: >-
Fee Format (Dollar/Percentage) – Dollar is
supported for convenience fee and % for
surcharge fee
example: Dollar
feestatus:
type: string
description: Fee Status (Y/N)
example: 'Y'
feeauthcode:
type: string
description: >-
Fee Authorization Code – same as
authorizationnumber for convenience fee and
surcharge fee
example: SDRDXX
feetransactionid:
type: string
description: >-
Fee Transaction ID – same as transactionid for
convenience fee and surcharge fee
example: 100214822343
paymentmethod:
type: object
properties:
type:
type: string
description: Type of payment method – Visa, Mastercard, etc.
example: MC
last4:
type: string
description: Last 4 digits of payment method
example: 5454
routingnumber:
type: string
description: Routing Number
example: null
tokenid:
type: string
description: Token ID
example: 1234567891
merchantid:
type: string
description: Merchant ID
example: 100121793761
paymentgateway:
type: string
description: Payment Gateway
example: BluePay
firstname:
type: string
description: First Name
example: John
lastname:
type: string
description: Last Name
example: Smith
expirationmonth:
type: string
description: Expiration Month
example: 12
expirationyear:
type: string
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
phonenumber:
type: string
description: Phone Number
example: null
email:
type: string
description: Email
example: john.smith@company.com
paymenttransactionrecon:
type: object
properties:
fundingmasterid:
type: string
description: Funding Master ID
example: 12345678
fundingid:
type: string
description: Funding ID
example: 456123788
fundingdate:
type: string
description: Funding Date
example: 12/20/2018

InvoiceDataUploadRequest:
type: object
properties:
accountid:
description: Account ID
type: string
example: >-
1000000001
email:
type: string
description: Email to send status of upload
example: fist.last@company.com
invoicedata:
type: array
items:
type: object
properties:
invoiceheader:
type: array
items:
type: object
properties:
billingcustomerid:
type: integer
description: Sold to
example: 4242
parentcustomerid:
type: string
description: Parent Customer ID
example: 4242
shipto:
type: integer
description: Ship to
example: 4242
invoicenumber:
type: string
description: Invoice Number
example: 10112
invoicetype:
type: integer
description: Invoice Type
example: RI
companycode:
type: string
description: Company Code
example: '00200'
currency:
type: integer
description: Currency
example: USD
fiscalyear:
type: string
description: Fiscal Year
example: 2022
branchplant:
type: integer
description: Branch Plant
example: A10
ordertype:
type: string
description: Order Type
example: SO
email:
type: integer
description: Email
example: first.last@company.com
comments:
type: string
description: Comments
example: test comments
suppliername:
type: integer
description: Supplier Name
example: CDI
invoicedetail:
type: array
items:
type: object
properties:
linenumber:
type: integer
description: Invoice line number
example: 1
grossamount:
type: integer
description: Gross Amount
example: 250
openamount:
type: integer
description: Open Amount
example: 250
paidamount:
type: integer
description: Paid Amount
example: 0
taxableamount:
type: integer
description: Taxable Amount
example: 150
nontaxableamount:
type: integer
description: Non Taxable Amount
example: 50
taxamount:
type: integer
description: Tax Amount
example: 10
discountamount:
type: integer
description: Discount Amount
example: 250
discosuntamount2:
type: integer
description: Discount Amount2
example: 250
statementid:
type: string
description: Statement ID
example: 628
invoicepo:
type: string
description: Invoice PO
example: PO123
invoicedescription:
type: string
description: Invoice Description
example: Description
ordernumber:
type: string
description: Order Number
example: 1411153
duedate:
type: string
description: Invoice Due Date
example: '2018-06-30'
discountduedate:
type: string
description: Discount Due Date
example: '2018-06-30'
discountduedate2:
type: string
description: Discount Due Date2
example: '2018-06-30'
invoicedate:
type: string
description: Invoice Date
example: '2018-03-30'
statementdate:
type: string
description: Statment Date
example: '2018-03-30'
businessunit:
type: string
description: Business Unit
example: 5100
branch:
type: string
description: Branch
example: testbranch
referencedocnumber:
type: string
description: Reference document number
example: Doc001
comments:
type: string
description: Comments
example: testcomments
InvoiceDataUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: InvoiceDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
CustomerPaymentMethodUploadRequest:
type: object
properties:
accountid:
description: Account ID
type: string
example: >-
1000000001
email:
type: string
description: Email to send status of upload
example: fist.last@company.com
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
customerdetail:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 4242
paymentmethoddata:
type: array
items:
type: object
properties:
paymentmethod:
type: array
items:
type: object
properties:
tokenid:
type: string
description: Token against card or account number
example: 2022150174527123
type:
type: string
description: Credit card or account type
example: VISA
last4:
type: string
description: Last 4 digit of number
example: 7123
maskedaccountnumber:
type: string
description: Masked account number
example: VISAXXXXXXXXX7123
routingnumber:
type: string
description: Routing Number
example: ''
expirationmonth:
type: string
description: Expiration Month
example: '05'
expirationyear:
type: string
description: Expiration Year
example: '2029'
merchantid:
type: string
description: Merchant ID
example: 496695144562
firstname:
type: string
description: First Name
example: John
lastname:
type: string
description: Last Name
example: Smith
addressline1:
type: string
description: Address Line1
example: 495 N Commons Dr
city:
type: string
description: City
example: Aurora
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60504
country:
type: string
description: Country
example: USA
enrollautopay:
type: string
description: Enrolled for autopay
example: 'Y'
maxamountperinvoice:
type: integer
description: Max amount per invoice
example: 1000
currencycode:
type: string
description: Currency code
example: USD
companycode:
type: string
description: Company code
example: '00200'
branchplant:
type: string
description: Branchplant
example: A10
ordertype:
type: string
description: Order Type
example: SO
associationtype:
type: string
description: Association type
example: shipto
isdefault:
type: string
description: Default
example: 'Y'
CustomerPaymentMethodUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: CustomerPaymentMethodUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
TenantSalesHistoryUploadRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
email:
type: string
description: Email
example: first.last@company.com
salesreportcustomerdata:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 4242
salesreportleasedata:
type: array
items:
type: object
properties:
leasenumber:
type: string
description: Lease number
example: 289
salesreportbusinessunitdata:
type: array
items:
type: object
properties:
businessunit:
type: string
description: Business unit
example: M30
unitnumber:
type: string
description: Unit number
example: A10
companycode:
type: string
description: Company code
example: 101
currencycode:
type: string
description: Currency code
example: USD
productcode:
type: string
description: Product code
example: PDC
salesreporthistorydata:
type: array
items:
type: object
properties:
year:
type: integer
description: Year
example: 2022
salesamount01:
type: integer
description: Sales Amount 01
example: 2145.21
salesamount02:
type: integer
description: Sales Amount 02
example: 2145.21
salesamount03:
type: integer
description: Sales Amount 03
example: 2145.21
salesamount04:
type: integer
description: Sales Amount 04
example: 2145.21
salesamount05:
type: integer
description: Sales Amount 05
example: 2145.21
salesamount06:
type: integer
description: Sales Amount 06
example: 2145.21
salesamount07:
type: integer
description: Sales Amount 07
example: 2145.21
salesamount08:
type: integer
description: Sales Amount 08
example: 2145.21
salesamount09:
type: integer
description: Sales Amount 09
example: 2145.21
salesamount10:
type: integer
description: Sales Amount 10
example: 2145.21
salesamount11:
type: integer
description: Sales Amount 11
example: 2145.21
salesamount12:
type: integer
description: Sales Amount 12
example: 2145.21
TenantSalesHistoryUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: TenantSalesReportUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
CustomerDataUploadRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
email:
type: string
description: Email
example: first.last@company.com
customeraddress:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 4242
customername:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
companylist:
type: array
items:
type: object
properties:
companycode:
type: string
description: Company code
example: 101
CustomerDataUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: CustomerDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
InvoiceOrderInquiryRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
apiname:
type: string
description: API Name
example: InvoiceData
email:
type: string
description: Email
example: first.last@company.com
invoicedata:
type: object
properties:
invoiceheader:
type: array
items:
type: object
properties:
billingcustomerid:
type: string
description: Billing Customer ID
example: 4242
parentcustomerid:
type: string
description: Parent Customer ID
example: 4242
shipto:
type: string
description: Ship to
example: 4242
invoicenumber:
type: string
description: Invoice number
example: Inv-12452
invoicetype:
type: string
description: Invoice type
example: RI
companycode:
type: string
description: Company code
example: '00200'
currency:
type: string
description: Currency
example: USD
fiscalyear:
type: string
description: Fiscal year
example: 2022
email:
type: string
description: Email
example: first.last@company.com
comments:
type: string
description: Comments
example: test comments
orderdetail:
type: array
items:
type: object
properties:
ordernumber:
type: string
description: Order number
example: Ord-001
ordertype:
type: string
description: Order type
example: SO
linenumber:
type: integer
description: Line number
example: 1
itemname:
type: string
description: Item name
example: Item1
itemdescription:
type: string
description: Item description
example: Item1 description
quantity:
type: integer
description: Quantity
example: 1
uom:
type: string
description: UOM
example: EA
unitprice:
type: integer
description: Unit price
example: 20
extendedprice:
type: integer
description: Extended price
example: 20
discountamount:
type: integer
description: Discount amount
example: 0
commoditycode:
type: string
description: Commodity code
example: 121
taxamount:
type: integer
description: Tax amount
example: 10
taxid:
type: string
description: Tax ID
example: IL
taxrate:
type: integer
description: Tax rate
example: 10
taxtype:
type: string
description: Tax type
example: ''
nationaltax:
type: string
description: national tax
example: ''
upc:
type: string
description: UPC
example: 1223
invoiceaddress:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 4242
name:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
parentcustomerid:
type: string
description: Parent Customer ID
example: 4242
billingorshopping:
type: string
description: Billing or shopping
example: B
customertype:
type: string
description: Customer type
example: ''
active:
type: string
description: Active flag
example: 'Y'
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
InvoiceOrderInquiryResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: InvoiceOrderDetail
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
SupplierDataUploadRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
email:
type: string
description: Email
example: first.last@company.com
supplieraddress:
type: array
items:
type: object
properties:
supplierid:
type: string
description: Supplier ID
example: 4242
name:
type: string
description: Supplier name
example: suppname
displayname:
type: string
description: Display name
example: Supp Name
parentsupplierid:
type: string
description: Parent supplier ID
example: ''
suppliertype:
type: string
description: Supplier type
example: S
active:
type: string
description: Active flag
example: 'Y'
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
companylist:
type: array
items:
type: object
properties:
companycode:
type: string
description: Company code
example: 101
SupplierDataUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: SupplierDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
SupplierInvoiceDataUploadRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
email:
type: string
description: Email
example: first.last@company.com
supplierinvoicedata:
type: object
properties:
supplierinvoiceheader:
type: array
items:
type: object
properties:
supplierid:
type: string
description: Supplier ID
example: 4343
parentsupplierid:
type: string
description: Parent supplier ID
example: ''
businessunit:
type: string
description: Business Unit
example: 5100
invoicenumber:
type: string
description: Invoice number
example: 1245
invoicetype:
type: string
description: Invoice Type
example: RI
companycode:
type: string
description: Company code
example: '00200'
currency:
type: string
description: Currency
example: USD
fiscalyear:
type: string
description: Fiscal year
example: 2022
email:
type: string
description: Email
example: first.last@company.com
comments:
type: string
description: Comments
example: test comments
allowpayment:
type: string
description: Allow payment flag
example: 'Y'
supplierinvoicenumber:
type: string
description: Supplier invoice number
example: 12541
supplierinvoicedetail:
type: array
items:
type: object
properties:
linenumber:
type: integer
description: Line number
example: 1
grossamount:
type: integer
description: Gross amount
example: 200
openamount:
type: integer
description: Open amount
example: 200
discountamount:
type: integer
description: Discount amount
example: 0
discountamount2:
type: integer
description: Discount amount2
example: 0
taxableamount:
type: integer
description: Taxable amount
example: 200
nontaxableamount:
type: integer
description: Non taxable amount
example: ''
taxamount:
type: integer
description: Tax amount
example: 10
paidamount:
type: integer
description: Paid amount
example: 0
invoicepo:
type: string
description: Invoice PO
example: PO123
invoicedescription:
type: string
description: Invoice description
example: ''
duedate:
type: string
description: Due date
example: '2022-07-13'
discountduedate:
type: string
description: Discount Due date
example: '2022-07-13'
discountduedate2:
type: string
description: Discount Due date2
example: '2022-07-13'
invoicedate:
type: string
description: Invoice date
example: '2022-06-15'
branch:
type: string
description: Branch
example: ''
referencedocnumber:
type: string
description: Reference doc number
example: ''
comments:
type: string
description: Comments
example: test comments
SupplierInvoiceDataUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: SupplierInvoiceDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
SupplierPaymentMethodUploadRequest:
type: object
properties:
accountid:
description: Account ID
type: string
example:  >-
1000000001
email:
type: string
description: Email to send status of upload
example: fist.last@company.com
paymentgateway:
type: string
description: Payment Gateway
example: BluePay
supplierdetail:
type: array
items:
type: object
properties:
supplierid:
type: string
description: Supplier ID
example: 4242
paymentmethoddata:
type: array
items:
type: object
properties:
paymentmethod:
type: array
items:
type: object
properties:
tokenid:
type: string
description: Token against card or account number
example: 2022150174527123
type:
type: string
description: Credit card or account type
example: VISA
last4:
type: string
description: Last 4 digit of number
example: 6789
routingnumber:
type: string
description: Routing Number
example: '123456789'
expirationmonth:
type: string
description: Expiration Month
example: ''
expirationyear:
type: string
description: Expiration Year
example: ''
merchantid:
type: string
description: Merchant ID
example: 496695144562
firstname:
type: string
description: First Name
example: Firstname
lastname:
type: string
description: Last Name
example: Lastname
addressline1:
type: string
description: Address Line1
example: Street 100
city:
type: string
description: City
example: Aurora
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60504
country:
type: string
description: Country
example: USA
email:
type: string
description: Email
example: first.last@company.com
phonenumber:
type: string
description: Phone number
example: 123456789
enrollautopay:
type: string
description: Enrolled for autopay
example: 'Y'
maxamountperinvoice:
type: integer
description: Max amount per invoice
example: 1000
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
SupplierPaymentMethodUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000000
requestid:
type: integer
description: Request ID generated for
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: SupplierPaymentMethodUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Request received.
DocumentUploadRequest:
type: object
properties:
accountid:
description: Account ID
type: string
example: 1000000001
documentid:
description: Document ID
type: string
example: ''
documenttype:
description: Document type
type: string
example: RI
companycode:
description: Company code
type: string
example: 101
documentname:
description: Document name
type: string
example: abc.pdf
invoiceorstatement:
description: Invioce or statement
type: string
example: I
content:
description: Content
type: string
example: >-
JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFIvTGFuZyhlbi1VUykgL1N0cnVjdFRyZWVSb290IDE2IDAgUi9NYXJrSW5mbzw8L01hcmtlZCB0cnVlPj4+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PC9UeXBlL1BhZ2VzL0NvdW50IDEvS2lkc1sgNCAwIFJdID4
DocumentUploadResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000000
requestid:
type: integer
description: Request ID generated for
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: DocumentUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Request received.
GetPaymentMethodsRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
customerid:
type: string
description: Customer ID
example: 100
type:
type: string
description: Payment mode
example: CC
enrolledforautopay:
type: string
description: Flag for enrolled for autopay
example: 'Y'
isactive:
type: string
description: Flag for active status
example: 'Y'
pagenumber:
type: integer
description: Page Number
example: 1
GetPaymentMethodsResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
message:
type: string
description: Message
example: Payment methods found.
status:
type: string
description: Status
example: 'Y'
pagenumber:
type: integer
description: Pagenumber
example: 1
perpagesize:
type: integer
description: Per page size
example: 500
currentpagesize:
type: integer
description: Current page size
example: 2
totalpages:
type: integer
description: Total pages
example: 1
totalpaymentmethods:
type: integer
description: Total payment methods
example: 2
paymentmethods:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 4242
type:
type: string
description: Type
example: VISA
last4:
type: string
description: Last4
example: 1111
routingnumber:
type: integer
description: Rounting number
example: null
tokenid:
type: integer
description: Token ID
example: 9499375544005220
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
merchantid:
type: string
description: Merchant ID
example: 4152452145
mode:
type: string
description: Mode
example: CC
firstname:
type: string
description: First name
example: Firstname
lastname:
type: string
description: Last name
example: Lastname
expirationmonth:
type: string
description: Expiration month
example: 9
expirationyear:
type: string
description: Expiration year
example: 2029
addressline1:
type: string
description: Address Line1
example: 100 Ave
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
isactive:
type: string
description: Isactive flag
example: 'Y'
autopay:
type: array
items:
type: object
properties:
companycode:
type: string
description: Company code
example: 101
currencycode:
type: string
description: Currency code
example: USD
maxamount:
type: integer
description: Max amount
example: 300
GetUpdaterResponse:
type: object
properties:
pageNumber:
type: integer
description: The number of the current page of results
example: 1
perPageSize:
type: integer
description: The number of results per page
example: 2000
currentPageSize:
type: integer
description: The number of results contained in the current page
example: 2000
totalPages:
type: integer
description: The total number of pages
example: 1
totalUpdates:
type: integer
description: The total number of updates for the period
example: 3
updatesStartDate:
type: integer
description: The start date of the time period used to retrieve updates
example: 20210406
updatesEndDate:
type: integer
description: The current date
example: 20210506
updates:
type: array
items:
type: object
properties:
dateupdated:
type: string
description: >-
The date when the account was last updated, in
YYYYMMDD format
example: 20210415
newtoken:
type: string
description: >-
The new token, if the previous PAN was replaced with
a new PAN. Only returned when "status" is "UPDATE"
example: 9401881398913854
oldtoken:
type: string
description: >-
The existing token associated with the stored
profile or account
example: 9402175938272890
newexpiry:
type: string
description: >-
The updated expiration date for the card associated
with the account, in YYYYMMDD format
example: 20451228
status:
type: string
description: >-
The change in status since the last update. Status
can be one of the following values UPDATE - The
account details have been updated CLOSED - The
account has been closed EXPIRY - The account has a
new expiration date NOGOOD - The account has been
reported as invalid by the card brand
example: UPDATE
binInfo:
type: object
properties:
country:
type: string
description: Issuer country of origin
example: USA
product:
type: string
description: >-
Card type, one of the following -A = Amex -D =
Discover -M = Mastercard -N = Non-co-branded
debit card -V = Visa
example: D
bin:
type: integer
description: >-
The bank identification number (BIN) of the card
used
example: 601101
cardusestring:
type: string
description: >-
General usage type, one of the following -Credit
Hybrid (PIN and Signature) -PIN Only Debit with
Electronic Benefit Transfer -Debit Hybrid (PIN
and Signature) -USA Commercial Debit, Signature
Only, No PIN Access -USA Commercial Debit, PIN
Capable -Non USA Consumer Debit, No PIN Access
-Non USA Commercial Debit, No PIN Access -Non
USA Consumer Debit, PIN Capable -Non USA
Commercial Debit, PIN Capable -PIN Only Debit
without Electronic Benefit Transfer -Private
Label Credit (MasterCard) -Signature only Debit,
No PIN Access -True credit, No PIN/Signature
capability
example: True credit, No PIN/Signature capability
gsa:
type: string
description: True or False
example: false
corporate:
type: string
description: True or False
example: false
fsa:
type: string
description: True or False
example: false
subtype:
type: string
description: >-
Detailed subtype of card, blank if not
available.
example: Consumer Credit - Rewards
purchase:
type: string
description: True or False
example: false
prepaid:
type: string
description: True or False
example: false
binlo:
type: string
description: >-
The low end of the BIN range that includes the
cardâ€™s BIN value. Masked after the first six
(6) digits.
example: 601100XXX
issuer:
type: string
description: Card issuing bank/institution
example: null
binhi:
type: string
description: >-
The high end of the BIN range that includes the
cardâ€™s BIN value. Masked after the first six
(6) digits.
example: 601102XXX
PutUpdaterRequest:
type: object
properties:
merchid:
type: string
description: Merchant ID
example: 236695144562
accounts:
type: array
description: List of Credit Card Tokens that need to be deleted
items:
type: string
example:
- '9417085548851112'
- '9550096877584444'
PutUpdaterResponse:
type: object
properties:
merchid:
type: string
description: Merchant ID
example: 236695144562
total:
type: integer
description: Total tokens received
example: 2
successes:
type: integer
description: Number of tokens enrolled successfully
example: 1
failures:
type: integer
description: Number of failures
example: 1
errors:
type: array
items:
type: object
properties:
field:
type: string
description: >-
The token that caused the error or the field name
that caused the error
example: 9434567891111112
message:
type: string
description: Error messages - invalid token, can not tokenize
example: invalid token
DeleteUpdaterRequest:
type: object
properties:
merchid:
type: string
description: Merchant ID
example: 236695144562
accounts:
type: array
description: List of Credit Card Tokens that need to be deleted
items:
type: string
example:
- 'XXXXXXXXXXXX1112'
- 'XXXXXXXXXXXX4444'
DeleteUpdaterResponse:
type: object
properties:
merchid:
type: integer
description: Merchant ID
example: 496695144562
total:
type: integer
description: Total tokens received
example: 2
deleted:
type: integer
description: Number of tokens that were deleted successfully
example: 1
notdeleted:
type: array
items:
type: object
properties:
account:
type: string
description: The token that caused the error
example: 9550096877584444
message:
type: string
description: Error message
example: account/token does not exist in CAU database
SendPaymentLinkRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
customerid:
type: string
description: Customer ID
example: 4242
userid:
type: string
description: User ID
example: csruser
branchplant:
type: string
description: Branch plant
example: ''
transactiontype:
type: string
description: Transaction type
example: A
transactionamount:
type: integer
description: Transaction amount
example: 10
mode:
type: string
description: Mode
example: CC
orderid:
type: string
description: Order ID
example: Ord-001
ordertype:
type: string
description: Order type
example: SO
orderdate:
type: string
description: Order date
example: '2022-07-18'
requesteddate:
type: string
description: Requested date
example: '2022-07-18'
purchaseorder:
type: string
description: Purchase order
example: PO-220418-08
invoiceid:
type: string
description: Invoice ID
example: Inv-001
cvvrequired:
type: string
description: CVV required flag
example: 'Y'
sendemailreceipts:
type: string
description: Email receipts flag
example: 'Y'
enableprintreceipt:
type: string
description: Print receipt flag
example: 'Y'
saveatcustomer:
type: string
description: Save at customer level flag
example: 'Y'
language:
type: string
description: Language
example: en-US
email:
type: string
description: Email
example: first.last@company.com
redirecturl:
type: string
description: URL to navigate after payment
example: www.abc.com
userfields:
type: array
items:
type: object
properties:
udf0:
type: string
description: Custom 0
example: udf0
udf1:
type: string
description: Custom 1
example: udf1
udf2:
type: string
description: Custom 2
example: udf2
udf3:
type: string
description: Custom 3
example: udf3
udf4:
type: string
description: Custom 4
example: udf4
udf5:
type: string
description: Custom 5
example: udf5
udf6:
type: string
description: Custom 6
example: udf6
udf7:
type: string
description: Custom 7
example: udf7
udf8:
type: string
description: Custom 8
example: udf8
udf9:
type: string
description: Custom 9
example: udf9
SendPaymentLinkResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
requestid:
type: string
description: Request ID
example: ad084ce2-23bf-ec11-bad0-0022488db98a
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Email sent successfully.
CancelEmailLinkRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
requestid:
type: string
description: Request ID
example: 073c8be3-b0db-e811-a954-000d3a92a01e
CancelEmailLinkResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Request expired.
SnapPayReportingRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
process:
type: string
description: >-
Process name e.g. schedule or user or usercustomer or
userlease or salesreporting
example: schedule
fromdate:
type: string
description: Report from date
example: '2022-06-01'
todate:
type: string
description: Report to date
example: '2022-06-30'
SnapPayReportingScheduleResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Data retrieved successfully.
scheduledata:
type: array
items:
type: object
properties:
source:
type: string
description: Source
example: I
frequency:
type: string
description: Frequency
example: F
startdate:
type: string
description: Schedule start date
example: 06/23/2022 07:00:00 PM
enddate:
type: string
description: Schedule end date
example: 08/23/2022 07:00:00 PM
amount:
type: integer
description: Schedueled Amount
example: 20
stopdate:
type: string
description: Schedule stop date
example: ''
reasoncode:
type: string
description: Reason code
example: null
leasenumber:
type: string
description: Lease number
example: 451412
businessunit:
type: string
description: Buinsess Unit
example: 15010
unit:
type: string
description: Unit
example: 102
leasedescription:
type: string
description: Lease description
example: Lease Description 451412 1.00
businessdescription:
type: string
description: Business unit description
example: The Maxwell
unitdescription:
type: string
description: Unit description
example: Silk n things of Naperville
glcode:
type: string
description: GLcode
example: MISC
invoicedata:
type: array
items:
type: object
properties:
invoicenumber:
type: string
description: Invoice number
example: 2022
customerid:
type: string
description: Customer ID
example: 4242
invoicetype:
type: string
description: Invoice type
example: RI
companycode:
type: string
description: Company code
example: 101
linenumber:
type: integer
description: Invoice line number
amount:
type: integer
description: Amount
example: 10
currency:
type: string
description: Currency
example: USD
comments:
type: string
description: Comments
example: Test comments
SnapPayReportingUserResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Data retrieved successfully.
userdata:
type: array
items:
$ref: '#/components/schemas/UserData'
SnapPayReportingUserCustomerResponse:
type: object
properties:
accountid:
example: 1000000001
status:
example: 'Y'
message:
example: Data retrieved successfully.
usercustomerdata:
type: array
items:
type: object
properties:
customerid:
example: '12346'
associationtype:
example: soldto
isdefault:
example: 'N'
userid:
example: csruser
SnapPayReportingUserLeaseResponse:
type: object
properties:
accountid:
example: 1000000001
status:
example: 'Y'
message:
example: Data retrieved successfully.
userleasedata:
type: array
items:
type: object
properties:
leasenumber:
type: string
description: Lease number
example: '451414'
isdefault:
description: Is default flag
type: string
example: 'Y'
userid:
type: string
description: User ID
example: csruser
SnapPaySalesReportingResponse:
type: object
properties:
accountid:
example: 1000000001
status:
example: 'Y'
message:
example: Data retrieved successfully.
salesreportingdata:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: '100'
leasenumber:
type: string
description: Lease number
example: '451414'
businessunit:
type: string
description: Business unit
example: '15020'
unitnumber:
type: string
description: Unit number
example: '102'
productcode:
type: string
description: Product code
example: OTDR
year:
type: string
description: Year
example: '2022'
month:
type: string
description: Month
example: '06'
salesamount:
type: integer
description: Sales amount
example: 1910
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
submittedtoagent:
description: Submitted to agent flag
type: string
example: 'Y'
salesinvitedcode:
type: string
description: Sales invited code
example: X
SettlementStatusResponse:
type: object
properties:
respproc:
type: string
description: Response code
example: RPCT
hostbatch:
type: string
description: Host Batch
example: 115
refundtotal:
type: integer
description: Refund Total
example: 600
batchid:
type: integer
description: Batch ID
example: 918
chargetotal:
type: integer
description: Charge Total
example: 1792.19
hoststat:
type: string
description: Host stat
example: GB
merchid:
type: string
description: Merchant ID
example: 123456789
txns:
type: array
items:
type: object
properties:
setlamount:
type: integer
description: Settle amount
example: 100
setlstat:
type: string
description: Settlement status
example: 'Y'
salesdoc:
type: string
description: Sales doc
example: ''
retref:
type: string
description: Return reference
example: 1587455632
GetSSOTokenRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
userid:
type: string
description: User ID
example: ERPUser
user:
properties:
userfirstname:
type: string
description: User first name
example: firstname
userlastname:
type: string
description: User last name
example: lastname
useremail:
type: string
description: User Email
example: first.last@company.com
phoneno:
type: integer
description: Phone number
example: ''
usergroup:
type: string
description: User group
example: ''
usertype:
type: string
description: User type
example: ''
customer:
properties:
customerid:
type: string
description: Customer ID
example: 100
customername:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
defaultcurrencycode:
type: string
description: Default currency code
example: USD
defaultcompanycode:
type: string
description: Default company code
example: 200
vatregistrationnumber:
type: string
description: VAT registration number
example: ''
supplier:
properties:
supplierid:
type: string
description: Supplier ID
example: 4343
suppliername:
type: string
description: Supplier name
example: suppname
displayname:
type: string
description: Display name
example: Supplier Name
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
defaultcurrencycode:
type: string
description: Default currency code
example: USD
vatregistrationnumber:
type: string
description: VAT registration number
example: ''
GetSSOTokenResponse:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
token:
type: string
description: Request ID that will be used signing in to SnapPay portal
example: 0b724a4f-5bbb-e811-b229-000c29cce4c0
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: e.g. Information stored successfully
example: Information stored successfully.
User:
type: object
properties:
userfirstname:
type: string
description: User first name
example: Fistname
userlastname:
type: string
description: User last name
example: Lastname
useremail:
type: string
description: User email
example: firstname.lastname@company.com
forcepasswordreset:
type: string
description: Force password flag
example: N
forcetermsandconditions:
type: string
description: Force terms and conditions flag
example: N
devicegroup:
type: string
description: Device group
example: Device1
UserData:
type: object
properties:
userid:
type: string
description: User ID
example: user@company.com
firstname:
type: string
description: First name
example: first
lastname:
type: string
description: Last name
example: last
email:
type: string
description: Email
example: first.last@company.com
usertypename:
type: string
description: User type name
example: customer
usergroup:
type: string
description: User group
example: Customer
isactive:
type: string
description: Isactive flag
example: 'Y'
forcepasswordreset:
type: string
description: Force password reset flag
example: 'N'
forcetermsandconditions:
type: string
description: Force terms and conditions flag
example: 'Y'
effectivefrom:
type: string
description: Effective from
example: 06/15/2022 06:43:33 AM
effectiveto:
type: string
description: Effective to
example: 06/15/2072 06:43:33 AM
phoneno:
type: integer
description: phone number
example: 123456789
FundingHistoryResponse:
type: object
properties:
accountid:
type: integer
description: SnapPay Account ID
example: 1000000001
status:
type: string
description: Status Y/N
example: 'Y'
message:
type: string
description: Message
example: Deposit information attached.
transactionscount:
type: integer
description: Transaction Count
example: 53
merchantdata:
type: array
items:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 496695144562
feedepositlist:
type: array
items:
type: object
properties:
feedepositid:
type: string
description: Fee Deposit ID
example: "8455d504-2d1e-4d15-b8b4-35ada249a9b48"
feedepositdate:
type: string
description: Fee Deposit date
example: "3/2/2023 12:00:00 AM"
paymentgateway:
type: string
description: Payment Gateway
example: "CardX"
feedeposittotal:
type: number
description: Fee Deposit Detail
example: -58.3
depositsourceid:
type: string
description: Deposit Source ID
example: "16777189004821"
depositsource:
type: string
description: Deposit Source
example: "fiserv"
fundingmasterlist:
type: array
items:
type: object
properties:
fundingmasterid:
type: string
description: Funding Master ID
example: 213173470121646
fundingdate:
type: string
description: Funding Date
example: 08/1/2022 12:00:00 AM
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
fundings:
type: array
items:
type: object
properties:
fundingid:
type: string
description: Funding ID
example: 213173494121647
netsales:
type: string
description: Net Sales
example: 148
totalfunding:
type: integer
description: Total Funding
example: 102.77
fee:
type: integer
description: Fee
example: o
datechanged:
type: string
description: Date Changed
example: 07/31/2018
ddanumber:
type: string
description: DDA Number
example: 3300770540
thirdparty:
type: string
description: Third Party Charges
example: -39.2
dateadded:
type: string
description: Date Added
example: 07/31/2018
fundingmasterid:
type: string
description: Funding Master ID
example: 213173470121646
reversal:
type: string
description: Reversal
example: -6.03
interchangefee:
type: string
description: Interchange Fee
example: 0
adjustment:
type: string
description: Adjustment
example: 0
currency:
type: string
description: Currency Code
example: USD
servicecharge:
type: string
description: Service Charge
example: 0
otheradjustment:
type: string
description: Other Adjustment
example: 0
abanumber:
type: string
description: ABA Number
example: 121140399
paymentdata:
type: object
properties:
transactions:
type: array
items:
type: object
properties:
snappaytransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1141
transactionid:
type: string
description: Payment Gateway Transaction ID
example: 212884163608
fundingtxnid:
type: string
description: Funding Transaction ID
example: 213173470121646
currencycode:
type: string
description: Currency Code
example: USD
type:
type: string
description: Type of transactions - SALE
example: SALE
merchantid:
type: string
description: Merchant ID
example: 236695144562
merchantname:
type: string
description: Merchant name
example: "creditcardmerchant"
transactionamount:
type: integer
description: Transaction Amount
example: 1
fundedamount:
type: string
description: Funded Amount
example: 1
interchangeunitfee:
type: string
description: Interchange Unit Fee
example: 0
interchangepercentfee:
type: string
description: Interchange Percent Fee
example: 0
cardnumber:
type: string
description: Masked Credit Card Number
example: 54XXXXXXXXXX5454
cardtype:
type: string
description: Card Type – Credit / Debit
example: Credit
cardbrand:
type: string
description: Card Brand – VISA / MC / DISCOV
example: MC
fundingid:
type: string
description: Funding ID
example: 213173685121651
authorizationnumber:
type: string
description: Authorization Number
example: PPS010
transactiondate:
type: string
description: Transaction Date
example: 07/30/2022
feetype:
type: string
description: >-
Fee Type (Convenience / Surcharge /
Service)
example: null
feeamount:
type: integer
description: Fee Amount
example: 0
feevalue:
type: integer
description: >-
Fee Value – same as amount for
convenience fee and % for surcharge
example: 0
feeformat:
type: string
description: >-
Fee Format (Dollar/Percentage) – Dollar
is supported for convenience fee and %
for surcharge
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feeauthcode:
type: string
description: >-
Fee Authorization Code – same as
authorizationnumber for convenience and
surcharge fee
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID – same as
transactionid for convenience and
surcharge fee
example: null
merchantfee:
type: number
description: Merchant Fee
example: 3.3
settledascardtype:
type: string
description: Settled with Card type
example: "debit"
paymentmethod:
type: object
properties:
type:
type: string
description: >-
Type of payment method – Visa,
Mastercard, etc.
example: MC
last4:
type: string
description: Last 4 digits of payment method
example: 5454
routingnumber:
type: string
description: Routing Number
example: null
tokenid:
type: string
description: Token ID
example: 9548009641895454
merchantid:
type: string
description: Merchant ID Name
example: MID1-USD
merchantname:
type: string
description: Mechant name
example: "creditcardmerchant"
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
firstname:
type: string
description: First Name
example: John
lastname:
type: string
description: Last Name
example: Smith
expirationmonth:
type: integer
description: Expiration Month
example: 12
expirationyear:
type: integer
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
phonenumber:
type: string
description: Phone Number
example: null
email:
type: string
description: Email
example: john.smith@company.com
invoices:
type: object
properties:
invoicenumber:
type: string
description: Invoice number
example: 322839
invoicetype:
type: string
description: Invoice document type
example: RI
company:
type: string
description: Company code on invoice
example: 200
currency:
type: string
description: Currency code on invoice
example: USD
linenumber:
type: string
description: Invoice line number (Pay item)
example: 1
paidamount:
type: string
description: Invoice Paid Amount
example: -1
UserDataUploadRequest:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
users:
type: array
items:
properties:
userid:
type: string
description: User ID
example: "user01"
firstname:
type: string
description: First Name
example:  First
lastname:
type: string
description: Last name
example: Last
email:
type: string
description: Email ID
example: first.last@company.com
usertypename:
type: string
description: User type name
example: CSR
usergroupname:
type: string
description: User group name
example: CSR
isactive:
type: string
description: Active flag
example: "Y"
effectivefrom:
type: string
description: Effective from date
example: "2028-12-31"
effectivetodate:
type: string
description: Effectove to date
example: "2028-12-31"
phone:
type: string
description: Phone number
example: "123-456-7890"
forcepasswordreset:
type: string
description: Force password reset flag
example: "Y"
forcetermsandconditions:
type: string
description: Force terms and conditions flag
example: "N"
devicegroup:
type: string
description: Device group name
example: "Device group"
deleteuser:
type: string
description: Delete user flag
example: "N"
customers:
type: array
items:
properties:
customerid:
type: string
description: CustomerID
example: "100"
associationtype:
type: string
description: Address type (shipto or soldto)
example: "Shipto"
isdefault:
type: string
description: Default flag for customer-user association
example: "Y"
GetRequestIDForOTP:
type: object
required: [accountid,company,currency,customerid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
company:
type: string
description: Company code
example: "00200"
currency:
type: string
description: Currency code
example: USD
customerid:
type: string
description: Customer ID
example: "4242"
userid:
type: string
description: User ID
example: guestuser
language:
type: string
description: Language
example: en-US
invoicelist:
type: array
items:
required: [invoicenumber,invoicetype,fiscalyear]
properties:
invoicenumber:
type: string
description: Invoice Number
example: INV001
invoicetype:
type: string
description: Invoice Type
example: RI
fiscalyear:
type: string
description: Fiscal year
example: "2023"
linenumber:
type: string
description: Line number
example: "1"
responses:
TooManyRequest:
description: Too many requests.
InvalidRequest:
description: Invalid Request.
Unauthorized:
description: Unauthorized Access.
ServerError:
description: Internal Server Error.
security:
- basicAuth: []
tags:
- name: APIs with User Interaction
- name: APIs without User Interaction
- name: Card Account Updater
- name: ERP Agents
- name: Pass through API
- name: Terminal Pass through API
- name: Real Estate

paths:
/api/GetACHRejects:
get:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get ACH Rejects
summary: Get ACH Rejects
description: >-
To retrieve information about ACH (Automated Clearing House) rejects.
operationId: getACHRejects
parameters:
- {$ref: '#/components/parameters/StartDateParam'}
- {$ref: '#/components/parameters/EndDateParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
message:
type: string
description: Response message
example: "ACH Rejects found."
status:
type: string
description: Y or N
example: 'Y'
transactioncount:
type: number
description: Transaction count in response.
example: 2
transactions:
type: array
items:
properties:
transaction:
type: object
properties:
transactionstatus:
type: string
description: Final status of the transaction.
example: "Failed"
paymenttransactionid:
type: number
description: Final status of the transaction.
example: 12716
pgtransactionid:
type: string
description: >-
Payment gateway transaction ID generated by SnapPay upon successful completion.
example: "10523264"
currencycode:
type: string
description: >-
Currency code for the transaction.
example: "USD"
pgtransactiontype:
type: string
description: >-
The type of transaction conducted through the payment gateway. Examples: S for Sale A for Authorization R for Refund
example: "S"
merchantid:
type: string
description: >-
Payment Gateway Merchant ID associated with the transaction.
example: "4032039484234"
transactionamount:
type: number
description: >-
Transaction amount populated by SnapPay upon successful completion.
example: 75.25
authorizationnumber:
type: string
description: >-
Authorization code from original authorization request
example: "234AS5"
pgreturncode:
type: string
description: >-
The payment gateway return code for the transaction.
example: "000"
procrespcode:
type: string
description: >-
An abbreviation that represents the platform and the processor used for the transaction.
example: "RPCT"
pgreturndescription:
type: string
description: >-
The payment gateway return description for the transaction.
example: "Transaction successful"
paymentdate:
type: string
description: >-
Transaction date populated by SnapPay upon successful completion.
example: "07/31/2024 10:19:37 AM"
feetype:
type: string
description: >-
FeeType is a categorization or classification of the type of fee associated with a service or transaction.
example: null
feeamount:
type: number
description: >-
The amount of the fee associated with the transaction.
example: 7.52
feevalue:
type: number
description: >-
The value which is used to calculate the fee amount based on feeformat.
example: 10
feeformat:
type: string
description: >-
The format in which the fee is expressed. (feeformat can be - flat or percentage).
example: "percentage"
feestatus:
type: string
description: >-
The status of the fee transaction.
example:
feeauthcode:
type: string
description: >-
A code indicating the authorization for the fee.
example: null
feetransactionid:
type: number
description: >-
Unique identifier for the fee transaction.
example: 1024721
paymentmethod:
type: object
properties:
tokenid:
type: string
description: >-
The Payment Gateway Token ID used for the transaction.
example: XXXXXXXXXXXX1234
paymentgateway:
type: string
description: >-
The payment gateway through which the payment was processed.
example: "Bluepay"
last4:
type: string
description: >-
Last four digits of the credit card (for credit card payments) or      bank account number (for ACH payments), populated upon successful      completion.
example: 2345
type:
type: string
description: >-
Type of credit card or bank account. Visa/MC/Discover/AMEX/Checking     /Saving
example: VISA
routingnumber:
type: string
description: >-
The bank's routing number.
example: 123123123
firstname:
type: string
description: >-
The first name of the cardholder or account holder.
example: First
lastname:
type: string
description: >-
The last name of the cardholder or account holder.
example: Last
phonenumber:
type: string
description: >-
The phone number associated with the payment method
example: ""
addressline1:
type: string
description: >-
Billing Address Line 1 from the card/bank account holder.
example: 123 Main St
city:
type: string
description: >-
Billing city from the card/bank account holder.
example: Lombard
state:
type: string
description: >-
Billing state from the card/bank account holder.
example: IL
zip:
type: string
description: >-
Billing ZIP code from the card/bank account holder.
example: 60148
country:
type: string
description: >-
Billing country from the card/bank account holder.
example: US
email:
type: string
description: >-
Billing email address from the card/bank account holder.
example: first.last@company.com
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/StatementDataUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Statement Data Upload
summary: Statement Data Upload
description: >-
Statement data upload API will be used to upload the bulk statement data with invoice details.
<br/><br/>
1. EnableStatementModule - Determines whether to enable Statement upload API.</br>
2. EnableCustomerIdForStatementUniqueness - Determines if customer id should also be checked along with type, company,document id and fiscal year in a Statement uniqueness logic. </br>
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
operationId: statementdataupload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid, customerid, statementid, statementtype, companycode, currency,fiscalyear]
properties:
accountid:
type: number
description: Enter the user's account ID, sourced from the SnapPay portal
example: 1000000001
email:
type: string
description: Email address to send the status of a recent upload to the user.
example: "first.last@company.com"
statementdata:
type: object
properties:
statementheader:
type: array
items:
type: object
required: [customerid, statementid, statementtype, companycode, currency,fiscalyear]
properties:
customerid:
type: string
description: Customer ID from the ERP system or eCommerce application.
example: "4242"
statementid:
type: string
description: The unique identifier for the statement
example: "101125"
statementtype:
type: string
description: The type of statement. (in this case, ST indicates a standard statement).
example: "ST"
companycode:
type: string
description: Pass the SnapPay company code, sourced from the SnapPay portal or the ERP system.
example: "00200"
currency:
type: string
description: Currency code for the transaction.
example: "USD"
statementmonth:
type: string
description: The month of the statement.
example: "02"
statementamount:
type: number
description: The total amount shown on the statement.
example: 10
fiscalyear:
type: string
description: The fiscal year associated with the statement.
example: "2024"
statementdate:
type: string
description: The date when the statement was issued (in this case, February 15, 2023).
example: "2024-02-15"
allowpayment:
type: string
description: Indicates whether or not payment is allowed for the statement (in this case, "N" indicates that payment is not allowed).
example: "N"
statementcontent:
type: string
description: Additional information or content included in the statement (binary format).
example: ""
invoicedetail:
type: array
items:
type: object
properties:
invoicenumber:
type: string
description: refers to a unique identifier assigned to each individual invoice associated with the statement
example: "IN1234"
examples:
With Statement Content:
summary: With Statement Content
$ref: '#/components/examples/StatementUploadWithContent'
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: number
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: "StatementDataUpload"
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: "Request received."
'400': {$ref: '#/components/responses/InvalidRequest'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetRequestID:
post:
tags:
- APIs with User Interaction

x-group-name: APIs with User Interaction
x-proxy-name: Get Request ID
summary: Get Request ID
description: >-
The GetRequestID API prepares SnapPay with the information required to
properly display SnapPay from within an iFrame or as a full page for
user interaction to Authorize, Charge or Tokenize a credit card or ACH
account.
operationId: getRequestIDEcom
requestBody:
content:
application/json:
schema:
$ref: '#/components/schemas/GetRequestIDRequest'
examples:
With Fee Parameters:
summary: With Fee Parameters
$ref: '#/components/examples/GetRequestID-Fee'
Transaction Type A:
summary: Transaction Type A
$ref: '#/components/examples/GetRequestID-A'
Transaction Type S:
summary: Transaction Type S
$ref: '#/components/examples/GetRequestID-S'
Transaction Type O:
summary: Transaction Type O
$ref: '#/components/examples/GetRequestID-O'
Transaction Type I:
summary: Transaction Type I
$ref: '#/components/examples/GetRequestID-I'
Transaction Type T:
summary: Transaction Type T
$ref: '#/components/examples/GetRequestID-T'
Transaction Type W:
summary: Transaction Type W
$ref: '#/components/examples/GetRequestID-W'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: string
description: Request ID that will be used to open SnapPay iFrame
example: 0b724a4f-5bbb-e811-b229-000c29cce4c0
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Response message
example: Information stored successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetRequestID401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetRequestIDForOTP:
post:
tags:
- APIs with User Interaction

x-group-name: APIs with User Interaction
x-proxy-name: Get Request ID For OTP
summary: Get Request ID For OTP
description: >-
GetRequestIDForOTP
operationId: getRequestIDforOTP
requestBody:
content:
application/json:
schema:
$ref: '#/components/schemas/GetRequestIDForOTP'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
invoicesguid:
type: string
description: Invoices Guid
example: a4d98699924a42fdb53453f2e189d48a
userguid:
type: string
description: User Guid
example: 9593c39b-83ef-408e-ad46-c87f6bbec1e5
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Response Message
example: Success.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/Interop/GetPaymentDetails:
post:
tags:
- APIs with User Interaction
x-group-name: APIs with User Interaction
x-proxy-name: Get Payment Details
summary: Get Payment Details
description: >-
The GetPaymentDetails API provides the results of the GetRequestID and iFrame interactions, enabling further business processes such as completing the order creation on an eCommerce site after successful card authorization. Additionally, this API returns a list of all failed transactions.
operationId: getPaymentDetails
requestBody:
content:
application/json:
schema:
type: object
required: [accountid, token]
properties:
accountid:
description: >-
Enter the user's account ID, sourced from the SnapPay portal.
type: number
example: 1000000001
token:
description: >-
Enter the token value, which is a unique identifier obtained from the Get RequestID API response.
type: string
example: 1870de80-072a-ed11-bd6e-0050f2c73a18
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: >-
The SnapPay account ID associated with the transaction.
example: 1000000001
status:
type: string
description: >-
Indicates the overall status of the transaction. This field determines whether the transaction was successful, or is failed
example: 'Y'
message:
type: string
description: >-
Provides a detailed status message for the transaction, offering additional context or information about the transaction outcome.
example: Payment details retrieved successfully
paymentmethod:
type: object
properties:
paymentmethodid:
type: integer
description: >-
The SnapPay payment method ID used in the transaction. This ID uniquely identifies the specific payment method.
example: 123456
tokenid:
type: string
description: >-
The Payment Gateway Token ID used for the transaction.
example: XXXXXXXXXXXX1234
last4:
type: string
description: >-
Last four digits of the credit card (for credit card payments) or bank account number (for ACH payments), populated upon successful completion.
example: 2345
type:
type: string
description: >-
Type of credit card or bank account. Visa/MC/Discover/AMEX/Checking/Saving
example: VISA
routingnumber:
type: string
description: >-
The bank's routing number.
example: 123123123
firstname:
type: string
description: >-
The first name of the cardholder or account holder.
example: First
lastname:
type: string
description: >-
The last name of the cardholder or account holder.
example: Last
expirationmonth:
type: string
description: >-
Expiration month for credit card transactions.
example: 12
expirationyear:
type: string
description: >-
Expiration year for credit card transactions.
example: 2029
addressline1:
type: string
description: >-
Billing Address Line 1 from the card/bank account holder.
example: 123 Main St

city:
type: string
description: >-
Billing city from the card/bank account holder.
example: Lombard
state:
type: string
description: >-
Billing state from the card/bank account holder.
example: IL
zip:
type: string
description: >-
Billing ZIP code from the card/bank account holder.
example: 60148
country:
type: string
description: >-
Billing country from the card/bank account holder.
example: US
email:
type: string
description: >-
Billing email address from the card/bank account holder.
example: first.last@company.com
transaction:
type: object
properties:
merchantid:
type: string
description: >-
The Payment Gateway Merchant ID associated with the transaction.
example: 34032039484234
returncode:
type: string
description: >-
The payment gateway return code for the transaction.
example: 0
returndescription:
type: string
description: >-
The payment gateway return description for the transaction.
example: Transaction successful
procrespcode:
type: string
description: >-
An abbreviation that represents the platform and the processor used for the transaction.
example: RPCT
pgtransactionid:
type: string
description: >-
Payment gateway transaction ID generated by SnapPay upon successful completion.
example: 260711140916
paymenttransactionid:
type: string
description: >-
The unique SnapPay transaction ID assigned to the payment transaction.
example: 136243
authorizationcode:
type: string
description: >-
Authorization code from the original authorization request
example: 234AS5
transactiondate:
type: string
description: >-
Transaction date populated by SnapPay upon successful completion.
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: >-
Transaction amount populated by SnapPay upon successful completion.
example: 100
currency:
type: string
description: >-
Currency code for the transaction.
example: USD

feereturncode:
type: string
description: >-
The payment gateway return code for the fee transaction.
example: null
feereturndescription:
type: string
description: >-
The payment gateway return description for the fee transaction.
example: null
feetransactionid:
type: string
description: >-
The unique ID for the fee transaction.
example: null
feeauthcode:
type: string
description: >-
Authorization code for the fee transaction.
example: null
feestatus:
type: string
description: >-
The status of the fee transaction.
example: null
feetype:
type: string
description: >-
The type of fee applied to the transaction, such as service fee or processing fee.
example: null
feeformat:
type: string
description: >-
The format in which the fee is charged, either as a percentage or a flat amount.
example: null
feeamount:
type: integer
description: >-
Fee amount for the fee transaction.
example: 0
feevalue:
type: integer
description: >-
Specify the fee value, either as a percentage or a flat amount (e.g., 3 or 0).
example: 0
examples:
Using Dual MID:
summary: Using Dual MID
$ref: '#/components/examples/GetPaymentDetailsResponseDualMID'
Including Failed Attempts:
summary: Including Failed Attempts
$ref: '#/components/examples/GetPaymentDetailsFailedAttempt'
Get Payment Detail (V2):
summary: Get Payment Detail (V2)
$ref: '#/components/examples/GetPaymentDetailsV2'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetPaymentDetail401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/tokenize:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Tokenize
summary: Tokenize
description: >-
The Tokenize API provides a token back when credit card is sent in clear
text. This API also tokenizes ACH (bank account) details. The token ID
is returned on success and can be used in subsequent calls like
Authorize, Charge, etc.
operationId: tokenize
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,currency,companycode,mode,type,accountnumber,expirationdate]
properties:
accountid:
type: number
description: >-
Enter the SnapPay account ID assigned by SnapPay.
example: 1000000001
requesttype:
type: string
description: >-
Specify the request type: Enter "C" for Customer and Enter "S" for Supplier
example: C
currency:
type: string
description: >-
Indicate the currency code used for tokenization.
example: USD
companycode:
type: string
description: >-
Provide the company code from the SnapPay portal or ERP system.
example: '00200'
branchplant:
type: string
description: >-
Specify the branch plant information from the SnapPay portal or ERP system.
example: null
ordertype:
type: string
description: >-
Provide the order type from the SnapPay portal or ERP system.
example: null
mode:
type: string
description: >-
Specify the payment method. Allowed values: "CC" for credit card or “ACH” for bank account
example: CC
type:
type: string
description: >-
Type of Credit Card or Bank Account - VISA / MC / DISCOVER /
AMEX / CHECKING / SAVING
example: VISA
routingnumber:
type: string
description: >-
Provide the bank routing number, applicable for bank account tokenization.
example: 71904779
bankname:
type: string
description: >-
Provide the bank name, applicable based on the use case.
example: "Bank"
checktype:
type: string
description: >-
Provide the check type, if applicable.
example: null
identificationtype:
type: string
description: >-
Specify the identification type for identity verification, used for the Telecheck gateway.
example: null
dlstate:
type: string
description: >-
Provide the driver's license state, if applicable.
example: null
identificationnumber:
type: string
description: >-
Provide the identification number based on the identification type, used for the Telecheck gateway.
example: null
accountnumber:
type: string
description: >-
For credit card transactions, provide the credit card number. For ACH transactions, provide the account ID.
example: 411111111111111
expirationdate:
type: string
description: >-
Provide the credit card expiration date in MM/YYYY format.
example: 122029
name:
type: string
description: >-
Enter the name of the credit card or bank account holder.
example: John Smith
addressline1:
type: string
description: >-
Provide the first line of the credit card or bank account holder's billing address.
example: 123 Main St
city:
type: string
description: >-
Provide the city of the credit card or bank account holder.
example: Lombard
state:
type: string
description: >-
Provide the state of the credit card or bank account holder.
example: IL
zip:
type: string
description: >-
Provide the ZIP code of the credit card or bank account holder.
example: 60148
country:
type: string
description: >-
Provide the country of the credit card or bank account holder.
example: US
email:
type: string
description: >-
Enter the email address of the credit card or bank account holder.
example: abc@company.com
phonenumber:
type: string
description: >-
Enter the phone number of the credit card or bank account holder.
example: 630-123-1233
examples:
Credit Card:
summary: Credit Card
$ref: '#/components/examples/TokenizeCCRequest'
ACH:
summary: ACH
$ref: '#/components/examples/TokenizeACHRequest'
Tokenize Device Data:
summary: Tokenize Device Data
$ref: '#/components/examples/TokenizeWithDeviceDataRequest'
Tokenize Using Dual MID:
summary: Tokenize Using Dual MID
$ref: '#/components/examples/TokenizeUsingDualMIDRequest'
Tokenize V2:
summary: Tokenize V2
$ref: '#/components/examples/TokenizeRequestV2'
Tokenize V2 ACH:
summary: Tokenize V2 ACH
$ref: '#/components/examples/TokenizeACHRequestV2'

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: >-
The SnapPay account ID associated with the transaction.
example: 1000000001
status:
type: string
description: >-
Indicates the overall status of the transaction. This field determines whether the transaction was successful, or is failed
example: 'Y'
message:
type: string
description: >-
Provides a detailed status message for the transaction, offering additional context or information about the transaction outcome.
example: Tokenization successful.
currency:
type: string
description: >-
Indicate the currency code used for tokenization.
example: USD
companycode:
type: string
description: >-
Company code from the SnapPay portal or ERP system
example: '00200'
branchplant:
type: string
description: >-
Branch plant information from the SnapPay portal or ERP system.
example: null
ordertype:
type: string
description: >-
Order type from the SnapPay portal or ERP system.
example: null
mode:
type: string
description: >-
Transaction payment mode. "CC" for credit card or "ACH" for bank account
example: Tokenization successful.
type:
type: string
description: >-
Type of Credit Card or Bank Account - VISA / MC / DISCOVER
/ AMEX / CHECKING / SAVING
example: VISA
last4:
type: string
description: >-
Last 4 digits of the credit card or bank account transactions.
example: 1111
routingnumber:
type: string
description: >-
Bank routing number, applicable for bank account tokenization.
example: null
bankname:
type: string
description: >-
Bank name applicable based on the use case.
example: null
checktype:
type: string
description: >-
Check Type C for corporate and P for personal
example: null
identificationtype:
type: string
description: >-
Identification type for identity verification, used for the Telecheck gateway.
example: null
identificationnumber:
type: string
description: >-
The identification number based on the identification type, used for the Telecheck gateway.
example: null
tokenid:
type: string
description: >-
The Payment Gateway Token ID used for the transaction.
example: 9XXXXXXXXXXX1112
expirationdate:
type: string
description: >-
Expiration date for credit card transactions.
example: 122029
name:
type: string
description: >-
The name of the credit card or bank account holder.
example: John Smith
addressline1:
type: string
description: >-
Billing Address Line 1 from the card/bank account holder.
example: 123 Main St
city:
type: string
description: >-
Billing city from the card/bank account holder.
example: Lombard
state:
type: string
description: >-
Billing state from the card/bank account holder.
example: IL
zip:
type: string
description: >-
Billing ZIP code from the card/bank account holder.
example: 60148
country:
type: string
description: >-
Billing country from the card/bank account holder.
example: US
email:
type: string
description: >-
Billing email address from the card/bank account holder.
example: john.smith@company.com
phonenumber:
type: string
description: >-
The phone number of the cardholder or account holder.
example: null
examples:
Credit Card:
summary: Credit Card
$ref: '#/components/examples/TokenizeCCResponse'
ACH:
summary: ACH
$ref: '#/components/examples/TokenizeACHResponse'
Tokenize Using Dual MID:
summary: Tokenize Using Dual MID
$ref: '#/components/examples/TokenizeUsingDualMIDResponse'
Tokenize V2:
summary: Tokenize V2
$ref: '#/components/examples/TokenizeCCResponseV2'


'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/authorize:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Authorize
summary: Authorize
description: >-
The Authorize API performs a credit card authorization request using a
credit card token to insure the credit card is valid and has the
requested credit limit available.  The authorization code is returned on
success and error information if not successful.  The Capture API will
then need to be called to actually request the funds transfer.
operationId: authorize
requestBody:
content:
application/json:
schema:
type: object
required: [accountid, customerid,currency,companycode,userid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: ''
ordertype:
type: string
description: Order Type
example: ''
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: ''
purchaseorder:
type: string
description: Purchase Order
example: USD
ecomind:
type: string
description: Ecommerce indicator
example: "E"
cof:
type: string
description: COF
example: "C"
cofscheduled:
type: string
description: COF Scheduled
example: "N"
iscapture:
type: string
description: Is Capture flag (Y or N)
example: "Y"
card:
type: array
items:
type: object
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 'XXXXXXXXXXXX2344'
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
cvv:
type: string
description: CVV
example: 123
expirationdate:
type: string
description: Expiration Date mmYYYY
example: 122029
customername:
type: string
description: Name on credit card
example: First Last
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: first.last@company.com
phonenumber:
type: string
description: Phone Number
example: ''
secureflag:
type: string
description: Secure flag
example: "05"
securevalue:
type: string
description: Secure value
example: ""
securedstid:
type: string
description: Secure DST ID
example: ""
secureexemption:
type: string
description: Secure exemption
example: "lowvalue"
cards:
type: array
items:
type: object
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 'XXXXXXXXXXXX2344'
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
cvv:
type: string
description: CVV
example: 123
expirationdate:
type: string
description: Expiration Date mmYYYY
example: 122029
customername:
type: string
description: Name on credit card
example: First Last
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: first.last@company.com
phonenumber:
type: string
description: Phone Number
example: ''
secureflag:
type: string
description: Secure flag
example: "05"
securevalue:
type: string
description: Secure value
example: ""
securedstid:
type: string
description: Secure DST ID
example: ""
secureexemption:
type: string
description: Secure exemption
example: "lowvalue"
userfields:
type: array
items:
type: object
properties:
udf0:
type: string
description: User defined field 0
example: "Value 1"
udf1:
type: string
description: User defined field 1
example: "Value 2"
udf2:
type: string
description: User defined field 2
example: "Value 3"
udf3:
type: string
description: User defined field 3
example: "Value 4"
custommerchant:
type: string
description: Custom Merchant
example: "Company"
customphone:
type: string
description: Custom Phone
example: "123-456-HELP"
examples:
Authorize with Surcharge:
summary: Authorize with Surcharge
$ref: '#/components/examples/AuthorizeRequestWithSurcharge'
Authorize with Service Fee:
summary: Authorize with Service Fee
$ref: '#/components/examples/AuthorizeRequestWithServiceFee'
Authorize ACH V2:
summary: Authorize ACH V2
$ref: '#/components/examples/AuthorizeWithTempACHToken'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Authorization successful.
cards:
type: array
items:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 12452589
paymentgateway:
type: string
description: Payment Gateway
example: "CardConnect"
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
tokenid:
type: string
description: Credit Card Token ID
example: 9412345678912344
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
status:
type: string
description: status - Y/N
example: 'Y'
scverification:
type: string
description: Security/CVV Code Verification
example: P
addressverification:
type: string
description: Address Verification
example: Z
examples:
Default:
summary: Default
$ref: '#/components/examples/AuthorizeDefaultResponse'
Authorize with Surcharge:
summary: Authorize with Surcharge
$ref: '#/components/examples/AuthorizeResponseWithSurcharge'
Authorize with Service Fee:
summary: Authorize with Service Fee
$ref: '#/components/examples/AuthorizeResponseWithServiceFee'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/charge:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Charge
summary: Charge
description: >-
The Charge API performs a credit card charge or payment using a credit
card token to insure the credit card is valid, has the requested credit
limit available and to initiate the transfer of funds.  This performs
the functions of the Authorize API and Capture API in a single call.
operationId: charge
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,companycode,userid,customerid,currency]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Order Type
example: null
orderid:
type: string
description: Order ID
example: 123456
orderdate:
type: string
description: Order Date
example: ""
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
shipfromzip:
type: string
description: Ship from location
example: 60605
shiptozip:
type: string
description: Ship to location
example: 60603
shiptocountry:
type: string
description: Ship to country
example: USA
ecomind:
type: string
description: Ecommerce indicator
example: "E"
cof:
type: string
description: COF
example: "C"
cofscheduled:
type: string
description: COF schedule flag
example: "N"
paymentmethod:
type: object
required: [tokenid, expirationdate]
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 9412345678912344
type:
type: string
description: Type of credit card
example: VISA
last4:
type: string
description: Last 4 digits of credit card
example: 2345
cvv:
type: string
description: CVV
example: 123
expirationdate:
type: string
description: Expiration Date mmYYYY
example: 122029
customername:
type: string
description: Name on credit card
example: John Smith
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
email:
type: string
description: Email Address
example: john.smith@company.com
phonenumber:
type: string
description: Phone Number
example: null
level3:
type: array
items:
type: object
properties:
linenumber:
type: string
description: Line Number
example: 1
productcode:
type: string
description: Product Code or Item Number
example: BQT01
unitcost:
type: integer
description: Unit Cost
example: 1.75
quantity:
type: integer
description: Quantity
example: 3
itemdescriptor:
type: string
description: Item/Product Description
example: Bouquet
unitofmeasure:
type: string
description: Unit of Measure
example: EA
commoditycode:
type: string
description: Commodity Code
example: Commodity Code1
taxamount:
type: integer
description: Tax Amount
example: 0.12
taxrate:
type: integer
description: Tax Rate in %
example: 8
itemdiscount:
type: integer
description: Item Discount
example: null
lineitemtotal:
type: integer
description: Line Item Total
example: 5.37
userfields:
type: array
items:
type: object
properties:
udf0:
type: string
description: User defined field 0
example: "Value 1"
udf1:
type: string
description: User defined field 1
example: "Value 2"
udf2:
type: string
description: User defined field 2
example: "Value 3"
udf3:
type: string
description: User defined field 3
example: "Value 4"
custommerchant:
type: string
description: Custom Merchant
example: "Company"
customphone:
type: string
description: Custom Phone
example: "123-456-HELP"
examples:
Charge with Surcharge:
summary: Charge with Surcharge
$ref: '#/components/examples/ChargeRequestWithSurcharge'
Charge with Service Fee:
summary: Charge with Service Fee
$ref: '#/components/examples/ChargeRequestWithServiceFee'
Charge ACH V2 :
summary: Charge ACH V2
$ref: '#/components/examples/ChargeWithTempACHToken'


parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 12452589
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
scverification:
type: string
description: Security/CVV Code Verification
example: P
addressverification:
type: string
description: Address Verification
example: Z
totaltransactionamount:
type: string
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 100
feereturncode:
type: string
description: >-
Return code for fee transaction. It will same as
returncode if the feetype is convenience or surcharge
and different if the fee type is service (MSF)
example: null
feereturndescription:
type: string
description: Return description for fee transaction
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID â€“ same as transactionid for
surcharge and convenience fee
example: null
feeauthcode:
type: string
description: >-
Fee Transaction Authorization Code â€“ same as
authorizationcode for surcharge fee and convenience
fee
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feetype:
type: string
description: Fee Type (Surcharge, Service or Convenience)
example: null
feeformat:
type: string
description: >-
Fee Format (Percentage for Surcharge and dollar amount
for convenience fee)
example: null
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
examples:
Charge with Surcharge:
summary: Charge with Surcharge
$ref: '#/components/examples/ChargeResponseWithSurcharge'
Charge with Service Fee:
summary: Charge with Service Fee
$ref: '#/components/examples/ChargeResponseWithServiceFee'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/Interop/Capture:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Capture
summary: Capture
description: >-
The Capture API performs the capture of a prior authorization returned
by the Authorize API using a credit card token to initiate the transfer
of funds.
operationId: capture
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,referencetransactionid,customerid,currency,companycode,userid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
referencetransactionid:
type: string
description: >-
Reference Transaction ID. Either pgtransactionid or
paymenttransactionid based on SnapPay account configuration
example: 1394
transactionamount:
type: integer
description: Amount to be captured/settled
example: 100.00
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
customid:
type: string
description: Custom ID
example: ""
comment:
type: string
description: Comments
example: "Capture"
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
level3:
type: array
items:
type: object
properties:
linenumber:
type: string
description: Line Number
example: 1
productcode:
type: string
description: Product Code or Item Number
example: BQT01
unitcost:
type: integer
description: Unit Cost
example: 1.75
quantity:
type: integer
description: Quantity
example: 3
itemdescriptor:
type: string
description: Item/Product Description
example: Bouquet
unitofmeasure:
type: string
description: Unit of Measure
example: EA
commoditycode:
type: string
description: Commodity Code
example: Commodity Code1
taxamount:
type: integer
description: Tax Amount
example: 0.12
taxrate:
type: integer
description: Tax Rate in %
example: 8
itemdiscount:
type: integer
description: Item Discount
example: null
lineitemtotal:
type: integer
description: Line Item Total
example: 5.37
userfields:
type: array
items:
type: object
properties:
udf0:
type: string
description: User field 0
example: "Value 1"
udf1:
type: string
description: User field 1
example: "Value 2"
udf2:
type: string
description: User field 2
example: "Value 3"
udf3:
type: string
description: User field 3
example: "Value 4"
udf4:
type: string
description: User field 4
example: "Value 5"
udf5:
type: string
description: User field 5
example: "Value 6"
udf6:
type: string
description: User field 6
example: "Value 7"
udf7:
type: string
description: User field 7
example: "Value 8"
udf8:
type: string
description: User field 8
example: "Value 9"
udf9:
type: string
description: User field 9
example: "Value 10"
examples:
Capture with Surcharge:
summary: Capture with Surcharge
$ref: '#/components/examples/CaptureRequestWithSurcharge'
Capture with Service fee:
summary: Capture with Service fee
$ref: '#/components/examples/CaptureRequestWithServiceFee'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1362
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 132912341342
reference:
type: string
description: Reference
example: ""
purchaseorder:
type: string
description: Purchase Order
example: ""
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 12452589
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
examples:
Capture with Surcharge:
summary: Capture with Surcharge
$ref: '#/components/examples/CaptureResponseWithSurcharge'
Capture with Service fee:
summary: Capture with Service fee
$ref: '#/components/examples/CaptureResponseWithServiceFee'

'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/Interop/Credit:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Credit
summary: Credit
description: The Credit API places a credit on the credit card or ACH account
operationId: credit
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,customerid,userid]
properties:
accountid:
type: string
description: Account ID
example: 1000000001
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
branchplant:
type: string
description: Branch Plant
example: null
ordertype:
type: string
description: Order Type
example: null
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
ecomind:
type: string
description: Ecommerce indicator
example: "E"
cof:
type: string
description: COF
example: "C"
cofscheduled:
type: string
description: COF scheduled
example: "N"
paymentmethod:
type: object
required: [tokenid]
properties:
transactionamount:
type: integer
description: Transaction Amount
example: 10
tokenid:
type: string
description: Token ID
example: 9412345678912344
secureflag:
type: string
description: Secure flag
example: "05"
securevalue:
type: string
description: Secure value
example: ""
securedstid:
type: string
description: Secure DST ID
example: ""
secureexemption:
type: string
description: Secure Exemption
example: "lowvalue"
userfields:
type: array
items:
type: object
properties:
udf0:
type: string
description: User defined field 0
example: "Value 1"
udf1:
type: string
description: User defined field 1
example: "Value 2"
udf2:
type: string
description: User defined field 2
example: "Value 3"
udf3:
type: string
description: User defined field 3
example: "Value 4"
custommerchant:
type: string
description: Custom Merchant
example: "Company"
customphone:
type: string
description: Custom Phone
example: "123-456-HELP"
examples:
Credit ACH V2 :
summary: Credit ACH V2
$ref: '#/components/examples/CreditWithTempACHToken'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/Interop/Refund:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Refund
summary: Refund
description: >-
The Refund API places a refund of a prior Capture or Charge on the
credit card or ACH account used in the original transaction.  The
original transaction is set in parameter referencetransactionid and some
explanatory text can be set in the reference parameter.
operationId: refund
requestBody:
content:
application/json:
schema:
type: object
required: [accountid, referencetransactionid,customerid,currency,companycode,userid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
referencetransactionid:
type: string
description: >-
Reference Transaction ID. Either pgtransactionid or
paymenttransactionid based on SnapPay account configuration
example: 1394
transactionamount:
type: integer
description: Amount to be captured/settled
example: 500
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
orderid:
type: string
description: Order ID
example: 123456
invoiceid:
type: string
description: Invoice ID
example: 123456
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
sendemailreceipts:
type: string
description: Send Email Receipt
example: 'Y'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1362
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 132912341342
reference:
type: string
description: Reference
example: ""
purchaseorder:
type: string
description: Purchase order
example: ""
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
totaltransactionamount:
type: string
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 100
feereturncode:
type: string
description: >-
Return code for fee transaction. It will same as
returncode if the feetype is convenience or surcharge
and different if the fee type is service (MSF)
example: null
feereturndescription:
type: string
description: Return description for fee transaction
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID â€“ same as transactionid for
surcharge and convenience fee
example: null
feeauthcode:
type: string
description: >-
Fee Transaction Authorization Code â€“ same as
authorizationcode for surcharge fee and convenience
fee
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feetype:
type: string
description: Fee Type (Surcharge, Service or Convenience)
example: null
feeformat:
type: string
description: >-
Fee Format (Percentage for Surcharge and dollar amount
for convenience fee)
example: null
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/Interop/Void:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Void
summary: Void
description: >-
The Void API attempts to void or cancel a prior authorization
transaction. The original authorization transaction is set in parameter
referencetransactionid and some explanatory text can be set in the
reference parameter. For voding charge and capture transaction, use
refund API.
operationId: void
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,referencetransactionid,customerid,currency,companycode,userid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
referencetransactionid:
type: string
description: >-
Reference Transaction ID. Either pgtransactionid or
paymenttransactionid based on SnapPay account configuration
example: 1394
transactionamount:
type: integer
description: Amount to be captured/settled
example: 500
customerid:
type: string
description: Customer ID
example: 100
currency:
type: string
description: Currency Code
example: USD
companycode:
type: string
description: Company Code
example: '00200'
userid:
type: string
description: User ID
example: user1
reference:
type: string
description: Reference Text
example: null
purchaseorder:
type: string
description: Purchase Order
example: USD
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Message
example: Transaction successful.
paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1362
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 132912341342
reference:
type: string
description: Reference
example: ""
purchaseorder":
type: string
description: Purchase order
example: ""
transaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 34032039484234
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Payment Gateway Return Description
example: Transaction successful
procrespcode:
type: string
description: Processor Response Code
example: RPCT
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 260711140916
paymenttransactionid:
type: string
description: SnapPay Transaction ID
example: 136243
authorizationcode:
type: string
description: Authorization Code
example: 234AS5
transactiondate:
type: string
description: Transaction Date
example: 02/14/2021 03:00:28 PM
transactionamount:
type: string
description: Transaction Amount
example: 100
currency:
type: string
description: Currency Code
example: USD
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetTransaction:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Transaction
summary: GetTransaction
description: >-
The GetTransaction API allows you to inquire about a previous transaction using various identifiers, such as transaction ID, order ID, reference, or purchase order. The response will return a list of transactions, as multiple transactions can share the same order ID, reference, or purchase order.
</br></br>

1. EnableInquiryForADay - This flag needs to be turned on to allow inquiries for transactions from the last 24 hours only.
</br>

requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: >-
Enter the user's account ID, sourced from the SnapPay portal.
example: 1000000001
orderid:
type: string
description: >-
Provide the order ID, sourced from the ERP system.
example: "Ord123"
transactionid:
type: string
description: >-
Enter the Payment Gateway transaction ID or the SnapPay payment transaction ID. The choice can be based on account parameters or ERP reference ID.
example: null
reference:
type: string
description: >-
Enter the reference from the ERP system, used during the transaction.
example: null
purchaseorder:
type: string
description: >-
Provide the purchase order details, sourced from the ERP system.
example: null
examples:
Transaction using Dual MID:
summary: Transaction using Dual MID
$ref: '#/components/examples/GetTransactionDualMIDRequest'
Get Transaction V2:
summary: Get Transaction V2
$ref: '#/components/examples/GetTransactionRequestV2'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: >-
The SnapPay account ID associated with the transaction.
example: 1000000001
message:
type: string
description: >-
Provides a detailed status message for the transaction, offering additional context or information about the transaction outcome.
example: Success
status:
type: string
description: >-
Indicates the overall status of the transaction. This field determines whether the transaction was successful, or is failed
example: "Y"
transactions:
type: array
items:
type: object
properties:
transaction:
type: object
properties:
transactionstatus:
type: string
description: >-
Final status of the transaction.
example: Captured
merchantid:
type: string
description: >-
Payment Gateway Merchant ID associated with the transaction.
example: 34032039484234
returncode:
type: string
description: >-
The payment gateway return code for the transaction.
example: 0
returndescription:
type: string
description: >-
The payment gateway return description for the transaction.
example: Transaction successful
procrespcode:
type: string
description: >-
An abbreviation that represents the platform and the processor used for the transaction.
example: RPCT
pgtransactionid:
type: string
description: >-
Payment gateway transaction ID generated by SnapPay upon successful completion.
example: 260711140916
pgtransactiontype:
type: string
description: >-
The type of transaction conducted through the payment gateway.
Examples:
S for Sale
A for Authorization
R for Refund
example: A
paymenttransactionid:
type: string
description: >-
The unique SnapPay transaction ID assigned to the payment transaction.
example: 136243
authorizationcode:
type: string
description: >-
Authorization code from original authorization request
example: 234AS5
transactiondate:
type: string
description: >-
Transaction date populated by SnapPay upon successful completion.
example: 02/14/2021 030028 PM
dctransaction:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 496695144562
returncode:
type: string
description: Payment Gateway Return Code
example: 0
returndescription:
type: string
description: Return Description
example: Approval
pgtransactionid:
type: string
description: Payment Gateway Transaction ID
example: 360354240638
paymenttransactionid:
type: integer
description: SnapPay Transaction ID
example: 43237
authorizationcode:
type: string
description: Authorization Code
example: PPS351
transactiondate:
type: string
description: Transaction Date
example: 07/31/2021 10:19:37 AM
procrespcode:
type: string
description: Processor Response Code
example: RPCT
transactionamount:
type: integer
description: Transaction Amount
example: 75.25
currency:
type: string
description: Currency Code
example: USD
totaltransactionamount:
type: integer
description: >-
Total transaction amount (transactionamount +
feeamount)
example: 75.25
feeamount:
type: integer
description: Fee Amount (amount in currency)
example: 0
feevalue:
type: integer
description: Fee Value (value in % for Surcharge fee)
example: 0
transactionamount:
type: integer
description: >-
Transaction amount populated by SnapPay upon successful completion.
example: 75.25
currency:
type: string
description: >-
Currency code for the transaction.
example: USD
totaltransactionamount:
type: integer
description: >-
The combined amount of the transaction, including both the primary transaction amount and any applicable fees.
example: 75.25
feeamount:
type: integer
description: >-
The fee amount for the fee transaction.
example: 0
feevalue:
type: integer
description: >-
Specify the fee value, either as a percentage or a flat amount (e.g., 3 or 0).
example: 0

paymentmethod:
type: object
properties:
paymentmethodid:
type: integer
description: >-
The SnapPay payment method ID used in the transaction.
example: 18304
tokenid:
type: string
description: >-
The Payment Gateway Token ID used for the transaction.
example: 9XXXXXXXXXXX2344
type:
type: string
description: >-
Type of credit card or bank account
example: VISA
last4:
type: string
description: >-
Last four digits of the credit card (for credit card payments) or bank account number (for ACH payments), populated upon successful completion.
example: 2345
firstname:
type: string
description: >-
The first name of the cardholder or account holder.
example: John
lastrname:
type: string
description: >-
The last name of the cardholder or account holder.
example: Smith
expirationmonth:
type: integer
description: >-
Expiration month for credit card transactions.
example: 12
expirationyear:
type: integer
description: >-
Expiration year for credit card transactions.
example: 2029
addressline1:
type: string
description: >-
Billing Address Line 1 from the card/bank account holder.
example: 123 Main St
addressline2:
type: string
description: >-
Billing Address Line 2 from the card/bank account holder.
example: ''
city:
type: string
description: >-
Billing city from the card/bank account holder.
example: Lombard
state:
type: string
description: >-
Billing state from the card/bank account holder.
example: IL
zip:
type: string
description: >-
Billing ZIP code from the card/bank account holder.
example: 60148
country:
type: string
description: >-
Billing country from the card/bank account holder.
example: US
email:
type: string
description: >-
Billing email address from the card/bank account holder.
example: john.smith@company.com
examples:
Transaction using Dual MID:
summary: Transaction using Dual MID
$ref: '#/components/examples/GetTransactionDualMIDResponse'
Get Transaction (V2):
summary: Get Transaction (V2)
$ref: '#/components/examples/GetTransactionV2'
Failure scenario:
summary: Failure scenario
$ref: '#/components/examples/GetTransactionFailedExample'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetTransaction401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/TransactionHistory:
get:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Transaction History
summary: Transaction History
description: >-
The TransactionHistory download API can report all payment transactions
that have occurred on the SnapPay portal.  Based on account
configuration, this can include payments on the EIPP portal, as well as
through the interoperability API’s.  Payment information includes
invoice details for a complete picture of the intended accounting of the
payment. New payments since the last time the API was called are
returned by default.  This allows calling the API multiple times during
the day and being assured that only transactions you have not already
received will be returned.  If a date range is provided, all
transactions within that range will be reported each time the API is
called.
operationId: retrieveTransactionHistory
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
- {$ref: '#/components/parameters/StartDateParam'}
- {$ref: '#/components/parameters/EndDateParam'}
- {$ref: '#/components/parameters/TypeParam'}
- {$ref: '#/components/parameters/PageNumberParam'}
- {$ref: '#/components/parameters/PaymentModeParam'}
- {$ref: '#/components/parameters/RequestTypeParam'}
- {$ref: '#/components/parameters/TransactionTypeParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: SnapPay Account ID
example: 1000000001
transactionscount:
type: integer
description: >-
Transaction Count – This parameter will give the number of
payment transactions sent.
example: 100
pagenumber:
type: integer
description: >-
Current page number for the transactions in response
example: 8
transactionremaining:
type: string
description: >-
Transaction Remaining – This parameter will be set to
“Yes” if there are more transactions available to be
downloaded.
example: 'Yes'
paymentdata:
type: object
properties:
paymentheader:
type: array
items:
properties:
paymentheaderid:
type: integer
description: SnapPay Payment Header ID
example: 12432
sourcetype:
type: string
description: "Source Type – I for Invoice and U for unapplied cash
payment (pre-payment)"
example: I
customerid:
type: string
description: Customer ID
example: "100"
supplierid:
type: string
description: Supplier ID
example: ""
companycode:
type: string
description: Company Code
example: '00200'
transactionamount:
type: integer
description: Transaction Amount
example: 100.1
comments:
type: string
description: Header Comments
example: Comments about the payment
reasoncode:
type: string
description: Reason code selected while payment transaction
example: null
leasedetail:
type: string
description : Lease details
example: ""
paymentdetails:
type: array
items:
type: object
properties:
invoicenumber:
type: string
description: Invoice Number
example: 13069
invoicetype:
type: string
description: Invoice Type
example: RI
linenumber:
type: string
description: Line Number (Pay Item)
example: 1
fiscalyear:
type: string
description: Fiscal year
example: "2023"
openamount:
type: integer
description: Open Amount
example: 300
taxableamount:
type: integer
description: Taxable Amount
example: 20
taxamount:
type: integer
description: Tax Amount
example: 10
paidamount:
type: integer
description: Paid Amount
example: 25
paidtax:
type: integer
description: Paid Tax
example: 0.5
discountavailable:
type: integer
description: Discount Available
example: 0
discounttaken:
type: integer
description: Discount Taken
example: 0
discountapplied:
type: integer
description: Discount Applied
example: 0
comments:
type: string
description: Line Comments
example: null
reasoncode:
type: string
description: Reason Code
example: null
paymentdate:
type: string
description: Transaction Date
example: 2018-07-16 8:05 PM
supplierinvoicenumber:
type: string
description: Supplier Invoice number
example: null
statementid:
type: string
description: Statement ID
example: "227"
statementdate:
type: string
description: Statement date
example: "4/27/2021"
paymenttransaction:
type: object
properties:
transactionid:
type: string
description: Transaction ID
example: "100214822343"
paymenttransactionid:
type: number
description: Payment transaction ID
example: 37930
referencetransactionid:
type: number
description: Reference transaction id
example: null
currencycode:
type: string
description: Currency Code
example: USD
pgtransactiontype:
type: string
description: Payment Gateway Transaction Type
example: S
merchantid:
type: string
description: Merchant ID
example: "440121793761"
merchantname:
type: string
description: Merchant Name in SnapPay
example: "CardConnectMerchant"
transactionamount:
type: integer
description: Transaction Amount
example: 120.1
authorizationnumber:
type: string
description: Authorization Number
example: SDRDXX
pgreturncode:
type: string
description: Payment Gateway Return Code
example: "0"
pgreturndescription:
type: string
description: Payment Gateway Return Description
example: Transaction Successful
paymentdate:
type: string
description: Transaction Date
example: "2018-07-16 8:05 PM"
feetype:
type: string
description: Fee Type (Convenience / Surcharge / Service)
example: "Convenience"
feeamount:
type: integer
description: Fee Amount
example: 20
feevalue:
type: integer
description: >-
Fee Value – same as amount for convenience fee
and % for surcharge
example: 20
feeformat:
type: string
description: >-
Fee Format (Dollar/Percentage) – Dollar is
supported for convenience fee and % for
surcharge fee
example: "Dollar"
feestatus:
type: string
description: Fee Status (Y/N)
example: 'Y'
feeauthcode:
type: string
description: >-
Fee Authorization Code – same as
authorizationnumber for convenience fee and
surcharge fee
example: SDRDXX
feetransactionid:
type: string
description: >-
Fee Transaction ID – same as transactionid for
convenience fee and surcharge fee
example: "100214822343"
batchid:
type: string
description: Batch ID
example: 101
ordernumber:
type: string
description: Order number
example: "Ord001"
submittedby:
type: string
description: Transaction submitted by
example: "user"
paymentmethod:
type: object
properties:
type:
type: string
description: Type of payment method – Visa, Mastercard, etc.
example: "MC"
last4:
type: number
description: Last 4 digits of payment method
example: 5454
routingnumber:
type: string
description: Routing Number
example: null
tokenid:
type: string
description: Token ID
example: 1234567891
merchantid:
type: string
description: Merchant ID
example: "440121793761"
merchantname:
type: string
description: Merchant Name in SnapPay
example: "CardConnectMerchant"
paymentgateway:
type: string
description: Payment Gateway
example: "BluePay"
firstname:
type: string
description: First Name
example: "John"
lastname:
type: string
description: Last Name
example: Smith
expirationmonth:
type: string
description: Expiration Month
example: 12
expirationyear:
type: string
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
phonenumber:
type: string
description: Phone Number
example: null
email:
type: string
description: Email
example: john.smith@company.com
paymenttransactionrecon:
type: object
properties:
fundingmasterid:
type: string
description: Funding Master ID
example: 12345678
fundingid:
type: string
description: Funding ID
example: 456123788
fundingdate:
type: string
description: Funding Date
example: 08/20/2022
paymentdate:
type: string
description: Payment date
example: "12/16/2022 06:24:03 PM"
interoprequestnumber:
type: string
description: Interop request number
example: "f33b25ed-9cb6-eb11-a7ad-00155d546c89"
examples:
Transactions Using Dual MID:
summary: Transactions Using Dual MID
$ref: '#/components/examples/TransactionHistoryRespDualMID'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/TransactionHistory401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/FundingHistory:
get:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Funding History
summary: Funding History
description: >-
This API reports amounts that are funded in merchant bank account along
with payment transactions. Payment transactions include credit card
transactions. ACH transactions are considered funded if SnapPay does not
receive any reject for five business days. This API is supported for
CardConnect and CardX only.
operationId: retrieveFundingHistory
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
- {$ref: '#/components/parameters/StartDateParam'}
- {$ref: '#/components/parameters/EndDateParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: SnapPay Account ID
example: 1000000001
status:
type: string
description: Status Y/N
example: 'Y'
message:
type: string
description: Message
example: Deposit information attached.
transactionscount:
type: integer
description: Transaction Count
example: 53
merchantdata:
type: array
items:
type: object
properties:
merchantid:
type: string
description: Payment Gateway Merchant ID
example: 496695144562
feedepositlist:
type: array
items:
type: object
properties:
feedepositid:
type: string
description: Fee Deposit ID
example: "8455d504-2d1e-4d15-b8b4-35ada249a9b48"
feedepositdate:
type: string
description: Fee Deposit date
example: "3/2/2023 12:00:00 AM"
paymentgateway:
type: string
description: Payment Gateway
example: "CardX"
feedeposittotal:
type: number
description: Fee Deposit Detail
example: -58.3
depositsourceid:
type: string
description: Deposit Source ID
example: "16777189004821"
depositsource:
type: string
description: Deposit Source
example: "fiserv"
fundingmasterlist:
type: array
items:
type: object
properties:
fundingmasterid:
type: string
description: Funding Master ID
example: 213173470121646
fundingdate:
type: string
description: Funding Date
example: 08/1/2022 12:00:00 AM
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
fundings:
type: array
items:
type: object
properties:
fundingid:
type: string
description: Funding ID
example: 213173494121647
netsales:
type: string
description: Net Sales
example: 148
totalfunding:
type: integer
description: Total Funding
example: 102.77
fee:
type: integer
description: Fee
example: o
datechanged:
type: string
description: Date Changed
example: 07/31/2018
ddanumber:
type: string
description: DDA Number
example: 3300770540
thirdparty:
type: string
description: Third Party Charges
example: -39.2
dateadded:
type: string
description: Date Added
example: 07/31/2018
fundingmasterid:
type: string
description: Funding Master ID
example: 213173470121646
reversal:
type: string
description: Reversal
example: -6.03
interchangefee:
type: string
description: Interchange Fee
example: 0
adjustment:
type: string
description: Adjustment
example: 0
currency:
type: string
description: Currency Code
example: USD
servicecharge:
type: string
description: Service Charge
example: 0
otheradjustment:
type: string
description: Other Adjustment
example: 0
abanumber:
type: string
description: ABA Number
example: 121140399
paymentdata:
type: object
properties:
transactions:
type: array
items:
type: object
properties:
snappaytransactionid:
type: string
description: SnapPay Payment Transaction ID
example: 1141
transactionid:
type: string
description: Payment Gateway Transaction ID
example: 212884163608
fundingtxnid:
type: string
description: Funding Transaction ID
example: 213173470121646
currencycode:
type: string
description: Currency Code
example: USD
type:
type: string
description: Type of transactions - SALE
example: SALE
merchantid:
type: string
description: Merchant ID
example: 236695144562
merchantname:
type: string
description: Merchant name
example: "creditcardmerchant"
transactionamount:
type: integer
description: Transaction Amount
example: 1
fundedamount:
type: string
description: Funded Amount
example: 1
interchangeunitfee:
type: string
description: Interchange Unit Fee
example: 0
interchangepercentfee:
type: string
description: Interchange Percent Fee
example: 0
cardnumber:
type: string
description: Masked Credit Card Number
example: 54XXXXXXXXXX5454
cardtype:
type: string
description: Card Type – Credit / Debit
example: Credit
cardbrand:
type: string
description: Card Brand – VISA / MC / DISCOV
example: MC
fundingid:
type: string
description: Funding ID
example: 213173685121651
authorizationnumber:
type: string
description: Authorization Number
example: PPS010
transactiondate:
type: string
description: Transaction Date
example: 07/30/2022
feetype:
type: string
description: >-
Fee Type (Convenience / Surcharge /
Service)
example: null
feeamount:
type: integer
description: Fee Amount
example: 0
feevalue:
type: integer
description: >-
Fee Value – same as amount for
convenience fee and % for surcharge
example: 0
feeformat:
type: string
description: >-
Fee Format (Dollar/Percentage) – Dollar
is supported for convenience fee and %
for surcharge
example: null
feestatus:
type: string
description: Fee Transaction Status (Y/N)
example: null
feeauthcode:
type: string
description: >-
Fee Authorization Code – same as
authorizationnumber for convenience and
surcharge fee
example: null
feetransactionid:
type: string
description: >-
Fee Transaction ID – same as
transactionid for convenience and
surcharge fee
example: null
merchantfee:
type: number
description: Merchant Fee
example: 3.3
settledascardtype:
type: string
description: Settled with Card type
example: "debit"
paymentmethod:
type: object
properties:
type:
type: string
description: >-
Type of payment method – Visa,
Mastercard, etc.
example: MC
last4:
type: string
description: Last 4 digits of payment method
example: 5454
routingnumber:
type: string
description: Routing Number
example: null
tokenid:
type: string
description: Token ID
example: 9548009641895454
merchantid:
type: string
description: Merchant ID Name
example: MID1-USD
merchantname:
type: string
description: Mechant name
example: "creditcardmerchant"
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
firstname:
type: string
description: First Name
example: John
lastname:
type: string
description: Last Name
example: Smith
expirationmonth:
type: integer
description: Expiration Month
example: 12
expirationyear:
type: integer
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: 123 Main St
city:
type: string
description: City
example: Lombard
state:
type: string
description: State
example: IL
zip:
type: string
description: Zip/Postal Code
example: 60148
country:
type: string
description: Country
example: US
phonenumber:
type: string
description: Phone Number
example: null
email:
type: string
description: Email
example: john.smith@company.com
invoices:
type: object
properties:
invoicenumber:
type: string
description: Invoice number
example: 322839
invoicetype:
type: string
description: Invoice document type
example: RI
company:
type: string
description: Company code on invoice
example: 200
currency:
type: string
description: Currency code on invoice
example: USD
linenumber:
type: string
description: Invoice line number (Pay item)
example: 1
paidamount:
type: string
description: Invoice Paid Amount
example: -1
examples:
CardX:
summary: CardX
$ref: '#/components/examples/FundingHistoryRepsonseCardX'
CardConnect:
summary: CardConnect
$ref: '#/components/examples/FundingHistoryRepsonseCardConnect'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/FundingHistory401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/binapi/{MID}/{token}:
get:
tags:
- Pass through API
x-group-name: Pass through API
x-proxy-name: Bin Information
summary: Bin Information
description: >-
The bin API allows you to use a CardConnect CardSecure token to
determine what type of payment card is being used. The first six (6)
digits of a credit card are known as the Bank Identifier Number (BIN),
also known as an Issuer Identification Number (IIN). This API is
application only for CardConnect payment gateway.
operationId: binInformation
parameters:
- name: MID
in: path
description: MID
required: true
schema:
type: integer
example: 123456789
- name: token
in: path
description: Token
required: true
schema:
type: integer
example: 21341516224
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
country:
type: string
description: Issuer country of origin
example: USA
product:
type: string
description: >-
Card type, one of the following -A = Amex -D = Discover -M
= Mastercard -N = Non-co-branded debit card -V = Visa
example: D
bin:
type: integer
description: The bank identification number (BIN) of the card used
example: 601101
cardusestring:
type: string
description: >-
General usage type, one of the following -Credit Hybrid
(PIN and Signature) -PIN Only Debit with Electronic
Benefit Transfer -Debit Hybrid (PIN and Signature) -USA
Commercial Debit, Signature Only, No PIN Access -USA
Commercial Debit, PIN Capable -Non USA Consumer Debit, No
PIN Access -Non USA Commercial Debit, No PIN Access -Non
USA Consumer Debit, PIN Capable -Non USA Commercial Debit,
PIN Capable -PIN Only Debit without Electronic Benefit
Transfer -Private Label Credit (MasterCard) -Signature
only Debit, No PIN Access -True credit, No PIN/Signature
capability
example: True credit, No PIN/Signature capability
gsa:
type: string
description: True or False
example: false
corporate:
type: string
description: True or False
example: false
fsa:
type: string
description: True or False
example: false
subtype:
type: string
description: Detailed subtype of card, blank if not available.
example: Consumer Credit - Rewards
purchase:
type: string
description: True or False
example: false
prepaid:
type: string
description: True or False
example: false
binlo:
type: string
description: >-
The low end of the BIN range that includes the cardâ€™s
BIN value. Masked after the first six (6) digits.
example: 601100XXX
issuer:
type: string
description: Card issuing bank/institution
example: null
binhi:
type: string
description: >-
The high end of the BIN range that includes the cardâ€™s
BIN value. Masked after the first six (6) digits.
example: 601102XXX
'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/AccountUpdater/GetUpdater:
post:
tags:
- Card Account Updater
x-group-name: Card Account Updater
x-proxy-name: Get Updater
summary: Get Updater
description: >-
The GET request retrieves all available account changes that have
occurred within the 30 day period preceding the current date, or within
the previous number of days specified using the daysBack parameter.
operationId: getUpdater
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
- name: merchid
in: query
description: >-
The Merchant ID associated with the stored profiles or accounts. The
merchant account must be enrolled in the Card Account Updater
service.
required: true
schema:
type: integer
- name: daysBack
in: query
description: >-
The number of days prior to the current date, used to retrieve
updates reported within that period. Defaults to 30 if not provided.
required: false
schema:
type: integer
- name: page
in: query
description: >-
The number of the page being requested. Defaults to 1 if not
provided.
required: false
schema:
type: integer
- name: binInfo
in: query
description: >-
A true or false value where true returns the Bank Identification
Number (BIN) information when an update record for the account
includes a new card number. Defaults to false if not provided.
required: false
schema:
type: integer
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
pageNumber:
type: integer
description: The number of the current page of results
example: 1
perPageSize:
type: integer
description: The number of results per page
example: 2000
currentPageSize:
type: integer
description: The number of results contained in the current page
example: 2000
totalPages:
type: integer
description: The total number of pages
example: 1
totalUpdates:
type: integer
description: The total number of updates for the period
example: 3
updatesStartDate:
type: integer
description: The start date of the time period used to retrieve updates
example: 20210406
updatesEndDate:
type: integer
description: The current date
example: 20210506
updates:
type: array
items:
type: object
properties:
dateupdated:
type: string
description: >-
The date when the account was last updated, in
YYYYMMDD format
example: 20210415
newtoken:
type: string
description: >-
The new token, if the previous PAN was replaced with
a new PAN. Only returned when "status" is "UPDATE"
example: 9401881398913854
oldtoken:
type: string
description: >-
The existing token associated with the stored
profile or account
example: 9402175938272890
newexpiry:
type: string
description: >-
The updated expiration date for the card associated
with the account, in YYYYMMDD format
example: 20451228
status:
type: string
description: >-
The change in status since the last update. Status
can be one of the following values UPDATE - The
account details have been updated CLOSED - The
account has been closed EXPIRY - The account has a
new expiration date NOGOOD - The account has been
reported as invalid by the card brand
example: UPDATE
binInfo:
type: object
properties:
country:
type: string
description: Issuer country of origin
example: USA
product:
type: string
description: >-
Card type, one of the following -A = Amex -D =
Discover -M = Mastercard -N = Non-co-branded
debit card -V = Visa
example: D
bin:
type: integer
description: >-
The bank identification number (BIN) of the card
used
example: 601101
cardusestring:
type: string
description: >-
General usage type, one of the following -Credit
Hybrid (PIN and Signature) -PIN Only Debit with
Electronic Benefit Transfer -Debit Hybrid (PIN
and Signature) -USA Commercial Debit, Signature
Only, No PIN Access -USA Commercial Debit, PIN
Capable -Non USA Consumer Debit, No PIN Access
-Non USA Commercial Debit, No PIN Access -Non
USA Consumer Debit, PIN Capable -Non USA
Commercial Debit, PIN Capable -PIN Only Debit
without Electronic Benefit Transfer -Private
Label Credit (MasterCard) -Signature only Debit,
No PIN Access -True credit, No PIN/Signature
capability
example: True credit, No PIN/Signature capability
gsa:
type: string
description: True or False
example: false
corporate:
type: string
description: True or False
example: false
fsa:
type: string
description: True or False
example: false
subtype:
type: string
description: >-
Detailed subtype of card, blank if not
available.
example: Consumer Credit - Rewards
purchase:
type: string
description: True or False
example: false
prepaid:
type: string
description: True or False
example: false
binlo:
type: string
description: >-
The low end of the BIN range that includes the
cardâ€™s BIN value. Masked after the first six
(6) digits.
example: 601100XXX
issuer:
type: string
description: Card issuing bank/institution
example: null
binhi:
type: string
description: >-
The high end of the BIN range that includes the
cardâ€™s BIN value. Masked after the first six
(6) digits.
example: 601102XXX
'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/AccountUpdater/PutUpdater:
post:
tags:
- Card Account Updater
x-group-name: Card Account Updater
x-proxy-name: Put Updater
summary: Put Updater
description: >-
The PutUpdater request enrolls accounts in the Card Account Updater
service manually, by supplying tokens. These accounts are monitored for
changes in account status, expiry, or card number. Card Account Updater
relies on information provided by Visa, Mastercard, and Discover to
determine when a change has occurred, and stores the changes for
retrieval using the GET method.
operationId: putUpdater
requestBody:
content:
application/json:
schema:
type: object
properties:
merchid:
type: string
description: Merchant ID
example: 236695144562
accounts:
type: array
items:
type: object
properties:
account:
type: string
description: Credit Card Token
example: 9411673941601112
expiry:
type: string
description: Expiration Date (mmyy)
example: 0122
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
merchid:
type: string
description: Merchant ID
example: 236695144562
total:
type: integer
description: Total tokens received
example: 2
successes:
type: integer
description: Number of tokens enrolled successfully
example: 1
failures:
type: integer
description: Number of failures
example: 1
errors:
type: array
items:
type: object
properties:
field:
type: string
description: >-
The token that caused the error or the field name
that caused the error
example: 9434567891111112
message:
type: string
description: Error messages - invalid token, can not tokenize
example: invalid token
'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/AccountUpdater/DeleteUpdater:
post:
tags:
- Card Account Updater
x-group-name: Card Account Updater
x-proxy-name: Delete Updater
summary: DeleteUpdater
description: >-
The DELETE request unenrolls accounts that have been manually added
using the PUT method.
operationId: deleteUpdater
requestBody:
content:
application/json:
schema:
type: object
properties:
merchid:
type: string
description: Merchant ID
example: 236695144562
accounts:
type: array
description: List of Credit Card Tokens that need to be deleted
items:
type: string
example:
- '9417085548851112'
- '9550096877584444'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
merchid:
type: integer
description: Merchant ID
example: 496695144562
total:
type: integer
description: Total tokens received
example: 2
deleted:
type: integer
description: Number of tokens that were deleted successfully
example: 1
notdeleted:
type: array
items:
type: object
properties:
account:
type: string
description: The token that caused the error
example: 9550096877584444
message:
type: string
description: Error message
example: account/token does not exist in CAU database
'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/getpaymentmethods:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Payment Methods
summary: Get Payment Methods
description: Get Payment Methods for customer
operationId: getpaymentmethods
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
customerid:
type: string
description: Customer ID
example: 100
type:
type: string
description: Payment mode
example: CC
enrolledforautopay:
type: string
description: Flag for enrolled for autopay
example: 'Y'
isactive:
type: string
description: Flag for active status
example: 'Y'
pagenumber:
type: integer
description: Page Number
example: 1

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
message:
type: string
description: Message
example: Payment methods found.
status:
type: string
description: Status
example: 'Y'
pagenumber:
type: integer
description: Pagenumber
example: 1
perpagesize:
type: integer
description: Per page size
example: 500
currentpagesize:
type: integer
description: Current page size
example: 1
totalpages:
type: integer
description: Total pages
example: 1
totalpaymentmethods:
type: integer
description: Total payment methods
example: 1
paymentmethods:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 100
type:
type: string
description: Type
example: VISA
last4:
type: string
description: Last4
example: 1111
routingnumber:
type: integer
description: Rounting number
example: null
tokenid:
type: integer
description: Token ID
example: 9499375544005220
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
merchantid:
type: string
description: Merchant ID
example: 4152452145
mode:
type: string
description: Mode
example: CC
firstname:
type: string
description: First name
example: Firstname
lastname:
type: string
description: Last name
example: Lastname
expirationmonth:
type: string
description: Expiration month
example: 9
expirationyear:
type: string
description: Expiration year
example: 2029
addressline1:
type: string
description: Address Line1
example: 100 Ave
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
isactive:
type: string
description: Isactive flag
example: 'Y'
autopay:
type: array
items:
type: object
properties:
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
maxamount:
type: integer
description: Max amount
example: 300
examples:
Using Dual MID:
summary: Using Dual MID
$ref: '#/components/examples/GetPMswithDualMID'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetPaymentMethods401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/sendpaymentlink:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Send Payment Link
summary: Send Payment Link
description: Create link for payment
operationId: sendpaymentlink
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,currencycode,companycode,userid,transactiontype, mode, customerid, email]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
customerid:
type: string
description: Customer ID
example: 100
userid:
type: string
description: User ID
example: csruser
branchplant:
type: string
description: Branch plant
example: ''
transactiontype:
type: string
description: Transaction type
example: A
transactionamount:
type: integer
description: Transaction amount
example: 10
mode:
type: string
description: Mode
example: CC
orderid:
type: string
description: Order ID
example: Ord-001
ordertype:
type: string
description: Order type
example: SO
orderdate:
type: string
description: Order date
example: '2022-07-18'
requesteddate:
type: string
description: Requested date
example: '2022-07-18'
purchaseorder:
type: string
description: Purchase order
example: PO-220418-08
invoiceid:
type: string
description: Invoice ID
example: Inv-001
cvvrequired:
type: string
description: CVV required flag
example: 'Y'
sendemailreceipts:
type: string
description: Email receipts flag
example: 'Y'
enableprintreceipt:
type: string
description: Print receipt flag
example: 'Y'
saveatcustomer:
type: string
description: Save at customer level flag
example: 'Y'
language:
type: string
description: Language
example: en-US
email:
type: string
description: Email
example: first.last@company.com
redirecturl:
type: string
description: URL to navigate after payment
example: www.abc.com
openamount:
type: string
description: Open amount flag
example: "Y"
forceusertoenteraddress:
type: string
description: Address required flag
example: "Y"
userfields:
type: array
items:
type: object
properties:
udf0:
type: string
description: Custom 0
example: udf0
udf1:
type: string
description: Custom 1
example: udf1
udf2:
type: string
description: Custom 2
example: udf2
udf3:
type: string
description: Custom 3
example: udf3
udf4:
type: string
description: Custom 4
example: udf4
udf5:
type: string
description: Custom 5
example: udf5
udf6:
type: string
description: Custom 6
example: udf6
udf7:
type: string
description: Custom 7
example: udf7
udf8:
type: string
description: Custom 8
example: udf8
udf9:
type: string
description: Custom 9
example: udf9
customer:
type: object
properties:
customername:
type: string
description: Customer name to be displayed in email
example: "Firstname Lastname"
addressline1:
type: string
description: Address line 1
example: "100 Street"
city:
type: string
description: City
example: "Chicago"
state:
type: string
description: State code
example: "IL"
zipcode:
type: string
description: Zip code
example: "60603"
country:
type: string
description: Country
example: "US"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: 1000000001
requestid:
type: string
description: Request ID
example: ad084ce2-23bf-ec11-bad0-0022488db98a
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Email sent successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/SendPaymentLink401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/cancelemaillink:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Cancel email link
summary: Cancel email link
description: Cancel email link
operationId: cancelemaillink
requestBody:
content:
application/json:
schema:
type: object
required: [accountid, requestid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: string
description: Request ID
example: 073c8be3-b0db-e811-a954-000d3a92a01e
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Request expired.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/CancelEmailLink401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/snappayreporting:
post:
tags:
- Real Estate
x-group-name: Real Estate
x-proxy-name: SnapPay Reporting
summary: SnapPay Reporting
description: Reporting for real estate and non real estate customers.
operationId: snappayreporting
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,process,fromdate,todate]
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
process:
type: string
description: >-
Process name e.g. schedule, user, usercustomer,
userlease,salesreporting
example: schedule
fromdate:
type: string
description: Report from date
example: '2022-06-01'
todate:
type: string
description: Report to date
example: '2022-06-30'
examples:
Schedule:
summary: Schedule
$ref: '#/components/examples/SnapPayReportingScheduleRequest'
User:
summary: User
$ref: '#/components/examples/SnapPayReportingUserRequest'
User Customer:
summary: User Customer
$ref: '#/components/examples/SnapPayReportingUserCustomerRequest'
User Lease:
summary: User Lease
$ref: '#/components/examples/SnapPayReportingUserLeaseRequest'
Sales Reporting:
summary: Sales Reporting
$ref: '#/components/examples/SnapPayReportingSalesReportingRequest'
Autopay:
summary: Autopay
$ref: '#/components/examples/SnapPayReportingAutopayRequest'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
status:
type: string
description: Status
example: 'Y'
message:
type: string
description: Message
example: Data retrieved successfully.
scheduledata:
type: array
items:
type: object
properties:
scheduleid:
type: number
description: Schedule ID
example: 515
schedulename:
type: string
description: Schedule name
example: Schedule Test
source:
type: string
description: Source
example: I
frequency:
type: string
description: Frequency
example: F
startdate:
type: string
description: Schedule start date
example: 06/23/2022 07:00:00 PM
enddate:
type: string
description: Schedule end date
example: 08/23/2022 07:00:00 PM
amount:
type: integer
description: Schedueled Amount
example: 20
stopdate:
type: string
description: Schedule stop date
example: ''
reasoncode:
type: string
description: Reason code
example: null
leasenumber:
type: string
description: Lease number
example: 451412
businessunit:
type: string
description: Buinsess Unit
example: 15010
unit:
type: string
description: Unit
example: 102
leasedescription:
type: string
description: Lease description
example: Lease Description 451412 1.00
businessdescription:
type: string
description: Business unit description
example: The Maxwell
unitdescription:
type: string
description: Unit description
example: Silk n things of Naperville
glcode:
type: string
description: GLcode
example: MISC
paymentmethoddata:
type: object
properties:
paymentmethodid:
type: number
description: Payment Method ID
example: 12345
type:
type: string
description: Card Type
example: VISA
mode:
type: string
description: Mode
example: CC
last4:
type: string
description: Last4
example: 1111
routingnumber:
type: string
description: Routing number
example: null
maskedaccountnumber:
type: string
description: Masked account number
example: null
tokenid:
type: string
description: Token
example: 9455508369325165
merchantid:
type: string
description: Merchant name
example: CardConnect
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
firstname:
type: string
description: First name
example: first
lastname:
type: string
description: Last name
example: last
expirationmonth:
type: string
description: Expiration month
example: 6
expirationyear:
type: string
description: Expiration year
example: 2029
addressline1:
type: string
description: Address line1
example: 100 Ave
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60605
country:
type: string
description: Country
example: US
phonenumber:
type: string
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
invoicedata:
type: array
items:
type: object
properties:
invoicenumber:
type: string
description: Invoice number
example: 2022
customerid:
type: string
description: Customer ID
example: 100
invoicetype:
type: string
description: Invoice type
example: RI
companycode:
type: string
description: Company code
example: '00200'
linenumber:
type: integer
description: Invoice line number
amount:
type: integer
description: Amount
example: 10
currency:
type: string
description: Currency
example: USD
comments:
type: string
description: Comments
example: Test comments
examples:
Schedule:
summary: Schedule
$ref: '#/components/examples/SnapPayReportingScheduleResponse'
User:
summary: User
$ref: '#/components/examples/SnapPayReportingUserResponse'
User Customer:
summary: User Customer
$ref: '#/components/examples/SnapPayReportingUserCustomerResponse'
User Lease:
summary: User Lease
$ref: '#/components/examples/SnapPayReportingUserLeaseResponse'
Sales Reporting:
summary: Sales reporting
$ref: '#/components/examples/SnapPayReportingSalesReportingResponse'
Autopay:
summary: Autopay
$ref: '#/components/examples/SnapPayReportingAutopayResponse'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/SnapPayReporting401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/settlementstatus:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Settlement status
summary: Settlement status
description: Settlement status
operationId: settlementstatus
parameters:
- name: merchid
in: header
description: Merchant ID
required: true
schema:
type: string
example: 123456789
- name: batchid
in: header
description: batchid
required: true
schema:
type: number
example: 123
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
respproc:
type: string
description: Response code
example: RPCT
hostbatch:
type: string
description: Host Batch
example: 115
refundtotal:
type: integer
description: Refund Total
example: 600
batchid:
type: integer
description: Batch ID
example: 918
chargetotal:
type: integer
description: Charge Total
example: 1792.19
hoststat:
type: string
description: Host stat
example: GB
merchid:
type: string
description: Merchant ID
example: 123456789
txns:
type: array
items:
type: object
properties:
setlamount:
type: integer
description: Settle amount
example: 100
setlstat:
type: string
description: Settlement status
example: 'Y'
salesdoc:
type: string
description: Sales doc
example: ''
retref:
type: string
description: Return reference
example: 1587455632
'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetSSOToken:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get SSO Token
summary: Get SSO Token
description: Get Single signon token.
operationId: getssotoken
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,userid,userfirstname,userlastname, useremail, customerid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
userid:
type: string
description: User ID
example: ERPUser
language:
type: string
description: Language
example: "en-US"
redirecturl:
type: string
description: Redirect Url
example: "https://www.google.com/"
oauthtoken:
type: string
description: Auth token
example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkJFUElWSHlwcjVGNVZoWEcyX0xueEdUeHRiYyIsImtpZCI6IkJFUElWSHlwcjVGNVZoWEcyX0xueEdUeHRiYyJ9.eyJpc3MiOiJodHRwczovL2RhcGkyMy5jYmNvcnBvcmF0ZS5jb20vYXV0aCIsImF1ZCI6Imh0dHBzOi8vZGFwaTIzLmNiY29ycG9yYXRlLmNvbS9hdXRoL3Jlc291cmNlcyIsImV4cCI6MTY1MzkxNTUwMCwibmJmIjoxNjUzMzEwNzAwLCJjbGllbnRfaWQiOiJjYmNvcnAiLCJzY29wZSI6WyJvcGVuaWQiLCJwcm9maWxlIiwiYXBpIl0sInN1YiI6IjYxNzUwIiwiYXV0aF90aW1lIjoxNjUzMDkwMDU0LCJpZHAiOiJpZHNydiIsInJvbGUiOiJDdXN0b21lciIsIm5hbWUiOiJUcmFjaWUgQ2Fpcm5zIiwiZW1haWwiOiJzaXZhc2Fua2FyLmRlc3VAZmlzZXJ2LmNvbSIsImlkIjoidHJhY2FpMSIsImV4X2N1cyAgICAiOiIzMCIsIlNBUEFjY291bnRzIjoiMDAwMTAyNjA4NSIsImFtciI6WyJwYXNzd29yZCJdfQ.KS9QDsqMdMh_gpMqCYIWAeJ6e-mCRmshd6EGu-Z2TCeIn0U1hwsUZna5RBfbf_8BvmOAjLEois71O_lotoqaSzF7fgANiaRFqrGg2_CRr0Wn5Ydg6dFVW_JbuhocDxODPXmR7cSgkGdcAT1KwHOmm5Y3kR3siwiSbMgjZFwYBxSI4ZS4oCDfVbUNCHPKAcharQD3pymgve-MNpPQLeQluFko0aromRvM89DMojsMqUL00CZR3IgKdVyOsx7vgymUsT6gjGfmGaaFAf0lL6bAFTXE06SSRqIbxVPVOnQUuG6nlZlfMTYxgvgifkZzNlRio8emm_R6FwV8JxTuUIsPsw"
user:
properties:
userfirstname:
type: string
description: User first name
example: firstname
userlastname:
type: string
description: User last name
example: lastname
useremail:
type: string
description: User Email
example: first.last@company.com
phoneno:
type: integer
description: Phone number
example: ''
usergroup:
type: string
description: User group
example: ''
usertype:
type: string
description: User type
example: ''
isactive:
type: string
description: Active flag
example: "Y"
forcepasswordreset:
type: string
description: Force password reset
example: "N"
forcetermsandconditions:
type: string
description: Force terms and conditions
example: "N"
devicegroup:
type: string
description: Device group
example: ""
customer:
properties:
customerid:
type: string
description: Customer ID
example: 100
customername:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
defaultcurrencycode:
type: string
description: Default currency code
example: USD
defaultcompanycode:
type: string
description: Default company code
example: 200
vatregistrationnumber:
type: string
description: VAT registration number
example: ''
customertype:
type: string
description: Customer type. Possible values - X or S or C
example: "X"
associate:
type: string
description: Customer assocation flag
example: "Y"
associationtype:
type: string
description: Association type
example: "shipto"
isselected:
type: string
description: Selected flag
example: "N"
customers:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 100
customername:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
defaultcurrencycode:
type: string
description: Default currency code
example: USD
defaultcompanycode:
type: string
description: Default company code
example: 200
vatregistrationnumber:
type: string
description: VAT registration number
example: ''
customertype:
type: string
description: Customer type. Possible values - X or S or C
example: "X"
associate:
type: string
description: Customer assocation flag
example: "Y"
associationtype:
type: string
description: Association type
example: "shipto"
isselected:
type: string
description: Selected flag
example: "N"
supplier:
properties:
supplierid:
type: string
description: Supplier ID
example: 4343
suppliername:
type: string
description: Supplier name
example: suppname
displayname:
type: string
description: Display name
example: Supplier Name
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
defaultcurrencycode:
type: string
description: Default currency code
example: USD
vatregistrationnumber:
type: string
description: VAT registration number
example: ''
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
token:
type: string
description: Request ID that will be used signing in to SnapPay portal
example: 0b724a4f-5bbb-e811-b229-000c29cce4c0
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: e.g. Information stored successfully
example: Information stored successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetSSOToken401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/invoicedataupload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Invoice Data Upload
summary: Invoice Data Upload
description: To upload the Invoices for an account
operationId: invoiceDataUpload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
description: Account ID
type: number
example: 1000000001
email:
type: string
description: Email to send status of upload
example: fist.last@company.com
invoicedata:
type: array
items:
type: object
properties:
invoiceheader:
type: array
items:
type: object
required: [billingcustomerid,invoicenumber,invoicetype,companycode,currency,fiscalyear]
properties:
billingcustomerid:
type: integer
description: Sold to
example: 100
parentcustomerid:
type: string
description: Parent Customer ID
example: 100
shipto:
type: integer
description: Ship to
example: 100
invoicenumber:
type: string
description: Invoice Number
example: 10112
invoicetype:
type: integer
description: Invoice Type
example: RI
companycode:
type: string
description: Company Code
example: '00200'
currency:
type: integer
description: Currency
example: USD
fiscalyear:
type: string
description: Fiscal Year
example: 2022
branchplant:
type: integer
description: Branch Plant
example: A10
ordertype:
type: string
description: Order Type
example: SO
email:
type: integer
description: Email
example: first.last@company.com
comments:
type: string
description: Comments
example: test comments
suppliername:
type: integer
description: Supplier Name
example: CDI
allowpayment:
type: string
description: Allow payment flag
example: "S"
invoicedetail:
type: array
items:
type: object
required: [linenumber,grossamount,openamount, invoicedate, duedate]
properties:
linenumber:
type: integer
description: Invoice line number
example: 1
grossamount:
type: integer
description: Gross Amount
example: 250
openamount:
type: integer
description: Open Amount
example: 250
paidamount:
type: integer
description: Paid Amount
example: 0
taxableamount:
type: integer
description: Taxable Amount
example: 150
nontaxableamount:
type: integer
description: Non Taxable Amount
example: 50
taxamount:
type: integer
description: Tax Amount
example: 10
discountamount:
type: integer
description: Discount Amount
example: 250
discosuntamount2:
type: integer
description: Discount Amount2
example: 250
statementid:
type: string
description: Statement ID
example: 628
invoicepo:
type: string
description: Invoice PO
example: PO123
invoicedescription:
type: string
description: Invoice Description
example: Description
ordernumber:
type: string
description: Order Number
example: 1411153
duedate:
type: string
description: Invoice Due Date
example: '2022-06-30'
discountduedate:
type: string
description: Discount Due Date
example: '2018-06-30'
discountduedate2:
type: string
description: Discount Due Date2
example: '2022-06-30'
invoicedate:
type: string
description: Invoice Date
example: '2022-03-30'
statementdate:
type: string
description: Statment Date
example: '2022-03-30'
businessunit:
type: string
description: Business Unit
example: 5100
branch:
type: string
description: Branch
example: testbranch
referencedocnumber:
type: string
description: Reference document number
example: Doc001
comments:
type: string
description: Comments
example: testcomments
amount1:
type: string
description: Amount 1
example: "0"
amount2:
type: string
description: Amount 2
example: "0"
amount3:
type: string
description: Amount 3
example: "0"
amount4:
type: string
description: Amount 4
example: "0"
date1:
type: string
description: Date 1
example: "2024-01-01"
date2:
type: string
description: Date 2
example: "2024-01-01"
date3:
type: string
description: Date 3
example: "2024-01-01"
date4:
type: string
description: Date 4
example: "2024-01-01"
string1:
type: string
description: String 1
example: ""
string2:
type: string
description: String 2
example: ""
string3:
type: string
description: String 3
example: ""
string4:
type: string
description: String 4
example: ""
number1:
type: string
description: Number 1
example: "0"
number2:
type: string
description: Number 2
example: "0"
number3:
type: string
description: Number 3
example: "0"
number4:
type: string
description: Number 4
example: "0"
flag1:
type: boolean
description: Flag 1
example: false
flag2:
type: boolean
description: Flag 2
example: false
flag3:
type: boolean
description: Flag 3
example: false
flag4:
type: boolean
description: Flag 4
example: false
text1:
type: string
description: Text 1
example: ""
text2:
type: string
description: Text 2
example: ""
text3:
type: string
description: Text 3
example: ""
text4:
type: string
description: Text 4
example: ""
examples:
Multiple Invoice Records:
summary: Multiple Invoice Records
$ref: '#/components/examples/InvoiceDataUploadRequest'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: InvoiceDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/InvoiceDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/CustomerPaymentMethodUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Customer Payment Method Upload
summary: Customer Payment Method Upload
description: To upload the customer and payment method association
operationId: customerpaymentmethodUpload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,paymentgateway]
properties:
accountid:
description: Account ID
type: string
example: 1000000001
email:
type: string
description: Email to send status of upload
example: fist.last@company.com
paymentgateway:
type: string
description: Payment Gateway
example: CardConnect
customerdetail:
type: array
items:
type: object
required: [customerid]
properties:
customerid:
type: string
description: Customer ID
example: 100
paymentmethoddata:
type: array
items:
type: object
properties:
paymentmethod:
type: object
required: [tokenid,expirationmonth,expirationyear, merchantid,type,last4,addressline1,zip,firstname,lastname,city,state]
properties:
tokenid:
type: string
description: Token against card or account number
example: 2022150174527123
type:
type: string
description: Credit card or account type
example: VISA
last4:
type: string
description: Last 4 digit of number
example: 7123
maskedaccountnumber:
type: string
description: Masked account number
example: VISAXXXXXXXXX7123
routingnumber:
type: string
description: Routing Number
example: ''
expirationmonth:
type: string
description: Expiration Month
example: '05'
expirationyear:
type: string
description: Expiration Year
example: '2029'
merchantid:
type: string
description: Merchant ID
example: 496695144562
firstname:
type: string
description: First Name
example: John
lastname:
type: string
description: Last Name
example: Smith
addressline1:
type: string
description: Address Line1
example: 495 N Commons Dr
city:
type: string
description: City
example: Aurora
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60504
country:
type: string
description: Country
example: USA
phonenumber:
type: string
description: Phone number
example: "1524299870"
email:
type: string
description: Email address
example: "first.last@company.com"
enrollautopay:
type: string
description: Enrolled for autopay
example: 'Y'
maxamountperinvoice:
type: integer
description: Max amount per invoice
example: 1000
currencycode:
type: string
description: Currency code
example: USD
companycode:
type: string
description: Company code
example: '00200'
branchplant:
type: string
description: Branchplant
example: A10
ordertype:
type: string
description: Order Type
example: SO
associationtype:
type: string
description: Association type
example: shipto
isdefault:
type: string
description: Default
example: 'Y'
examples:
Multiple Records:
summary: Multiple Records
$ref: '#/components/examples/CustomerPMUploadMultipleRecords'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: integer
description: Request ID generated for
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: CustomerPaymentMethodUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/CustomerPaymentMethod401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/tenantsaleshistoryupload:
post:
tags:
- Real Estate
x-group-name: Real Estate
x-proxy-name: Tenant Sales History Upload
summary: Tenant sales history upload
description: Tenant sales data upload
operationId: tenantsaleshistoryupload
requestBody:
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
email:
type: string
description: Email
example: first.last@company.com
salesreportcustomerdata:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 100
salesreportleasedata:
type: array
items:
type: object
properties:
leasenumber:
type: string
description: Lease number
example: 289
salesreportbusinessunitdata:
type: array
items:
type: object
properties:
businessunit:
type: string
description: Business unit
example: M30
unitnumber:
type: string
description: Unit number
example: A10
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
productcode:
type: string
description: Product code
example: PDC
salesreporthistorydata:
type: array
items:
type: object
properties:
year:
type: integer
description: Year
example: 2022
salesamount01:
type: integer
description: Sales Amount 01
example: 2145.21
salesamount02:
type: integer
description: Sales Amount 02
example: 2145.21
salesamount03:
type: integer
description: Sales Amount 03
example: 2145.21
salesamount04:
type: integer
description: Sales Amount 04
example: 2145.21
salesamount05:
type: integer
description: Sales Amount 05
example: 2145.21
salesamount06:
type: integer
description: Sales Amount 06
example: 2145.21
salesamount07:
type: integer
description: Sales Amount 07
example: 2145.21
salesamount08:
type: integer
description: Sales Amount 08
example: 2145.21
salesamount09:
type: integer
description: Sales Amount 09
example: 2145.21
salesamount10:
type: integer
description: Sales Amount 10
example: 2145.21
salesamount11:
type: integer
description: Sales Amount 11
example: 2145.21
salesamount12:
type: integer
description: Sales Amount 12
example: 2145.21
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: integer
description: Request ID generated
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: TenantSalesReportUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/TenantSalesHistoryUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/CustomerDataUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Customer Data Upload
summary: Customer Data Upload
description: To upload the Customers for an account
operationId: customerdataupload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
email:
type: string
description: Email
example: first.last@company.com
customeraddress:
type: array
items:
type: object
required: [customerid,name,customertype,active,addressline1,country]
properties:
customerid:
type: string
description: Customer ID
example: 100
name:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
customertype:
type: string
description: Customer Type
example: C
active:
type: string
description: Active flag
example: Y
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zipcode:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phone:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
vatregistrationnumber:
type: string
description: VAT registration number
example: 123212
defaultcompanycode:
type: string
description: Default company code
example: 100
paymentmode:
type: string
description: Payment mode
example: CC,ACH
companylist:
type: array
items:
type: object
properties:
companycode:
type: string
description: Company code
example: 100
examples:
Multiple Customer Records:
summary: Multiple Customer Records
$ref: '#/components/examples/CustomerDataUploadRequest'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: CustomerDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/CustomerDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/InvoiceOrderDataUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Invoice Order Data Upload
summary: Invoice Order Data Upload
description: Invoice Order Data Upload
operationId: invoiceorderupload
requestBody:
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
apiname:
type: string
description: API Name
example: InvoiceData
email:
type: string
description: Email
example: first.last@company.com
invoicedata:
type: object
properties:
invoiceheader:
type: array
items:
type: object
required: [billingcustomerid,invoicenumber,invoicetype,companycode,fiscalyear,currency]
properties:
billingcustomerid:
type: string
description: Billing Customer ID
example: 100
parentcustomerid:
type: string
description: Parent Customer ID
example: 100
shipto:
type: string
description: Ship to
example: 100
invoicenumber:
type: string
description: Invoice number
example: Inv-12452
invoicetype:
type: string
description: Invoice type
example: RI
companycode:
type: string
description: Company code
example: '00200'
currency:
type: string
description: Currency
example: USD
fiscalyear:
type: string
description: Fiscal year
example: 2022
email:
type: string
description: Email
example: first.last@company.com
comments:
type: string
description: Comments
example: test comments
orderdetail:
type: array
items:
type: object
properties:
ordernumber:
type: string
description: Order number
example: Ord-001
ordertype:
type: string
description: Order type
example: SO
linenumber:
type: integer
description: Line number
example: 1
itemname:
type: string
description: Item name
example: Item1
itemdescription:
type: string
description: Item description
example: Item1 description
quantity:
type: integer
description: Quantity
example: 1
uom:
type: string
description: UOM
example: EA
unitprice:
type: integer
description: Unit price
example: 20
extendedprice:
type: integer
description: Extended price
example: 20
discountamount:
type: integer
description: Discount amount
example: 0
commoditycode:
type: string
description: Commodity code
example: 121
taxamount:
type: integer
description: Tax amount
example: 10
taxid:
type: string
description: Tax ID
example: IL
taxrate:
type: integer
description: Tax rate
example: 10
taxtype:
type: string
description: Tax type
example: ''
nationaltax:
type: string
description: national tax
example: ''
upc:
type: string
description: UPC
example: 1223
invoiceaddress:
type: array
items:
type: object
properties:
customerid:
type: string
description: Customer ID
example: 100
name:
type: string
description: Customer name
example: custname
displayname:
type: string
description: Display name
example: Cust Name
parentcustomerid:
type: string
description: Parent Customer ID
example: 100
billingorshipping:
type: string
description: Billing or shopping
example: B
customertype:
type: string
description: Customer type
example: ''
active:
type: string
description: Active flag
example: 'Y'
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zipcode:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phone:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
currency:
type: string
description: Currency
example: "USD"
vatregistrationnumber:
type: string
description: VAT registration number
example: ""
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: InvoiceOrderDetail
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/InvoiceOrderDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/SupplierDataUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Supplier Data Upload
summary: Supplier Data Upload
description: To upload the Suppliers for an account
operationId: SupplierDataUpload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
email:
type: string
description: Email
example: first.last@company.com
supplieraddress:
type: array
items:
type: object
required: [supplierid,name, suppliertype,active,addressline1,country,email,identificationtype,identificationdata,clientcompanyname]
properties:
supplierid:
type: string
description: Supplier ID
example: 100
name:
type: string
description: Supplier name
example: suppname
displayname:
type: string
description: Display name
example: Supp Name
parentsupplierid:
type: string
description: Parent supplier ID
example: ''
suppliertype:
type: string
description: Supplier type
example: S
active:
type: string
description: Active flag
example: 'Y'
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zipcode:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phone:
type: string
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
identificationtype:
type: string
description: >-
Allowed values are   "DATE_OF_BIRTH" Or "MEMBER_ID" OR "SPECIAL_CODE" used for payee creation in money network
example: ""
identificationdata:
type: string
description: Identification data
example: "12/12/1961"
companyname:
type: string
description: Company name
example: "Battery Builders"
clientcompanyname:
type: string
description: Client company name
example: "Fiserv"
internalmemo:
type: string
description: Internal Memo
example: ""
comments:
type: string
description: Comments
example: ""
reason:
type: string
description: Reason
example: ""
status:
type: string
description: Status
example: ""
examples:
Multiple Supplier Records:
summary: Multiple Supplier Records
$ref: '#/components/examples/SupplierDataUploadRequest'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: SupplierDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/SupplierDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/supplierinvoicedataupload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Supplier Invoice Data Upload
summary: Supplier Invoice Data Upload
description: To upload the Supplier invoices for an account
operationId: SupplierInvoiceDataUpload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
email:
type: string
description: Email
example: first.last@company.com
supplierinvoicedata:
type: object
properties:
supplierinvoiceheader:
type: array
items:
type: object
required: [supplierid,invoicenumber,invoicetype,companycode,currency]
properties:
supplierid:
type: string
description: Supplier ID
example: 4343
parentsupplierid:
type: string
description: Parent supplier ID
example: ''
businessunit:
type: string
description: Business Unit
example: 5100
invoicenumber:
type: string
description: Invoice number
example: 1245
invoicetype:
type: string
description: Invoice Type
example: RI
companycode:
type: string
description: Company code
example: '00200'
currency:
type: string
description: Currency
example: USD
fiscalyear:
type: string
description: Fiscal year
example: 2022
email:
type: string
description: Email
example: first.last@company.com
comments:
type: string
description: Comments
example: test comments
allowpayment:
type: string
description: Allow payment flag
example: 'Y'
supplierinvoicenumber:
type: string
description: Supplier invoice number
example: 12541
supplierinvoicedetail:
type: array
items:
type: object
properties:
linenumber:
type: integer
description: Line number
example: 1
grossamount:
type: integer
description: Gross amount
example: 200
openamount:
type: integer
description: Open amount
example: 200
discountamount:
type: integer
description: Discount amount
example: 0
discountamount2:
type: integer
description: Discount amount2
example: 0
taxableamount:
type: integer
description: Taxable amount
example: 200
nontaxableamount:
type: integer
description: Non taxable amount
example: ''
taxamount:
type: integer
description: Tax amount
example: 10
paidamount:
type: integer
description: Paid amount
example: 0
invoicepo:
type: string
description: Invoice PO
example: PO123
invoicedescription:
type: string
description: Invoice description
example: ''
duedate:
type: string
description: Due date
example: '2022-07-13'
discountduedate:
type: string
description: Discount Due date
example: '2022-07-13'
discountduedate2:
type: string
description: Discount Due date2
example: '2022-07-13'
invoicedate:
type: string
description: Invoice date
example: '2022-06-15'
branch:
type: string
description: Branch
example: ''
referencedocnumber:
type: string
description: Reference doc number
example: ''
comments:
type: string
description: Comments
example: test comments
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1011
apiname:
type: string
description: API name for which the request is generated
example: SupplierInvoiceDataUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Received Successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/SupplierInvoiceDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/SupplierPaymentMethodUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Supplier Payment Method Upload
summary: Supplier Payment Method Upload
description: To upload the Supplier and payment method association
operationId: supplierpaymentmethodUpload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,paymentgateway]
properties:
accountid:
description: Account ID
type: number
example: 1000000001
email:
type: string
description: Email to send status of upload
example: fist.last@company.com
paymentgateway:
type: string
description: Payment Gateway
example: BluePay
supplierdetail:
type: array
items:
type: object
properties:
supplierid:
type: string
description: Supplier ID
example: 100
paymentmethoddata:
type: array
items:
type: object
properties:
paymentmethod:
type: array
items:
type: object
required: [tokenid,type,merchantid]
properties:
tokenid:
type: string
description: Token against card or account number
example: 2022150174527123
type:
type: string
description: Credit card or account type
example: VISA
last4:
type: string
description: Last 4 digit of number
example: 6789
routingnumber:
type: string
description: Routing Number
example: '123456789'
expirationmonth:
type: string
description: Expiration Month
example: ''
expirationyear:
type: string
description: Expiration Year
example: ''
merchantid:
type: string
description: Merchant ID
example: 496695144562
firstname:
type: string
description: First Name
example: Firstname
lastname:
type: string
description: Last Name
example: Lastname
addressline1:
type: string
description: Address Line1
example: Street 100
city:
type: string
description: City
example: Aurora
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60504
country:
type: string
description: Country
example: USA
email:
type: string
description: Email
example: first.last@company.com
phonenumber:
type: string
description: Phone number
example: 123456789
enrollautopay:
type: string
description: Enrolled for autopay
example: 'Y'
maxamountperinvoice:
type: integer
description: Max amount per invoice
example: 1000
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example:  >-
1000000001
requestid:
type: integer
description: Request ID generated for
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: SupplierPaymentMethodUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Request received.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/SupplierPaymentMethodUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/documentupload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Document Upload
summary: Document Upload
description: To upload the Documents
operationId: documentupload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,documentid,documenttype,companycode,fiscalyear,documentname,invoiceorstatement]
properties:
accountid:
description: This field represents the unique identifier of the account
type: number
example: 1000000001
documentid:
description: This field contains the identifier of the document
type: string
example: ''
customerid:
description: This field stores the unique identifier of the customer
type: string
example: '4242'
documenttype:
description: This field specifies the type of the document
type: string
example: RI
companycode:
description: This field holds the code representing the company associated with the document
type: string
example: '00200'
documentname:
description: This field contains the name of the document
type: string
example: abc.pdf
invoiceorstatement:
description: This field indicates whether the document is an invoice or a statement, supported values are I & S respectively.
type: string
example: I
fiscalyear:
description: This field represents the fiscal year associated with the document
type: string
example: "2024"
size:
description: This field represents the size of the document in bytes
type: number
example: null
url:
description: This field contains the URL to access the document
type: string
example: ''
filename:
description: This field represents the filename of the document
type: string
example: ''
content:
description: Content
type: string
example: >-
JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFIvTGFuZyhlbi1VUykgL1N0cnVjdFRyZWVSb290IDE2IDAgUi9NYXJrSW5mbzw8L01hcmtlZCB0cnVlPj4+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PC9UeXBlL1BhZ2VzL0NvdW50IDEvS2lkc1sgNCAwIFJdID4
examples:
Document Upload for Statement:
summary: Document Upload for Statement
$ref: '#/components/examples/DocumentUploadForStatement'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example:  1000000001
requestid:
type: integer
description: Request ID generated for
example: 1012
apiname:
type: string
description: API name for which the request is generated
example: DocumentUpload
status:
type: string
description: Execution status
example: 'Y'
message:
type: string
description: Return message
example: Request received.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/DocumentUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetToken:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Token
summary: Get Token
description: Get token.
operationId: gettoken
requestBody:
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
companycode:
type: string
description: Company code
example: '00200'
currencycode:
type: string
description: Currency code
example: USD
customerid:
type: string
description: Customer ID
example: 100
supplierid:
type: string
description: Supplier ID
example: 4343
userid:
type: string
description: User ID
example: erpuser
transactiontype:
type: string
description: Transaction Type
example: A
language:
type: string
description: Language
example: en-US
savepaymentmethod:
type: string
description: Save payment method flag
example: 'Y'
saveatsupplier:
type: string
description: Save at supplier flag
example: 'Y'
displaypmsavedatsupplier:
type: string
description: Display payment method saved at supplier flag
example: 'Y'
saveatcustomer:
type: string
description: Save at customer flag
example: 'Y'
displaycardssavedatcustomer:
type: string
description: Display payment method saved at supplier flag
example: 'Y'
redirecturl:
type: string
description: Redirect URL
example: https://www.xyz.com
type:
type: string
description: Type
example: C
paymentmethod:
type: string
description: Payment method
example: CC
transactionamount:
type: integer
description: Transaction amount
example: 100
amount:
type: integer
description: Aamount
example: 150
cvvrequired:
type: string
description: CVV Required falg
example: 'Y'
invoiceid:
type: string
description: Invoice ID
example: 415512
orderid:
type: string
description: Order ID
example: 1232564
comments:
type: string
description: Comments
example: test comments
user:
properties:
userfirstname:
type: string
description: User first name
example: Firstname
userlastname:
type: string
description: User last name
example: Lastname
useremail:
type: string
description: User email
example: first.last@company.com
customer:
properties:
customername:
type: string
description: Customer name
example: custname
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
vatregistrationnumber:
type: string
description: VAT Registration number
example: ''
supplier:
properties:
name:
type: string
description: Supplier name
example: suppname
addressline1:
type: string
description: Address Line1
example: Street 100
addressline2:
type: string
description: Address Line2
example: ''
city:
type: string
description: City
example: Chicago
state:
type: string
description: State
example: IL
zip:
type: string
description: Zipcode
example: 60603
country:
type: string
description: Country
example: US
phonenumber:
type: integer
description: Phone number
example: null
email:
type: string
description: Email
example: first.last@company.com
vatregistrationnumber:
type: string
description: VAT Registration number
example: ''
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example:  1000000001
token:
type: string
description: Request ID that will be used to open SnapPay iFrame
example: 0b724a4f-5bbb-e811-b229-000c29cce4c0
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Information stored successfully
example: Information stored successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetToken401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/inquire/{MID}/{token}:
get:
tags:
- Pass through API
x-group-name: Pass through API
x-proxy-name: Inquire API
summary: Inquire API
description: >-
This API is only for CardConnect payment gateway.
operationId: inquireAPI
parameters:
- name: MID
in: path
description: MID
required: true
schema:
type: integer
example: 123456789
- name: token
in: path
description: Token
required: true
schema:
type: integer
example: 21341516224
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
amount:
type: number
description: Amount
example: 20.50
orderId:
type: string
description: Order ID
example: 'AB-11-9876'
resptext:
type: string
description: Response text
example: 'Approval'
setlstat:
type: string
description: Settlement status
example: 'Queued for Capture'
capturedate:
type: string
description: Capture date
example: '20170815142832'
acctid:
type: string
description: Account ID from CardConnect
example: '1'
respcode:
type: string
description: Response code
example: 00
batchid:
type: number
description: Batch ID
example: 1256
merchid:
type: string
description: Merchant ID
example: 9876545657
entrymode:
type: string
description: Entry mode
example: 'ECommerce'
token:
type: string
description: Token
example: 94214572152
respproc:
type: string
description: Response proc
example: 'PPS'
bintype:
type: string
description: Bin type
example: ''
profileid:
type: string
description: Profile ID
example: '1170018000746'
authdate:
type: string
description: Auth date
example: '20170815'
lastfour:
type: string
description: Last 4
example: '1111'
name:
type: string
description: Name
example: 'CC Test'
currency:
type: string
description: Currency
example: 'USD'
settledate:
type: string
description: Settlement date
example: '20180829193252'
retref:
type: string
description: Return reference
example: '227145252112'
respstat:
type: string
description: Response stat
example: 'A'
account:
type: string
description: Token
example: '9441149619831111'
expiry:
type: string
description: Expiry
example: '1222'
voidable:
type: string
description: Flag for void
example: 'Y'
refundable:
type: string
description: Flag for refund
example: 'N'
userfields:
type: object
properties:
udf0:
type: string
description: User field 0
example: 'value0'
udf1:
type: string
description: User field 1
example: 'value1'
udf2:
type: string
description: User field 2
example: 'value2'
custommerchant:
type: string
description: Custom merchant
example: 'ABC Company'
customphone:
type: string
description: Custom phone
example: '222-111-HELP'

'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/tenantsalesreportdownload:
post:
tags:
- Real Estate
x-group-name: Real Estate
x-proxy-name: Tenant Sales Report Download
summary: Tenant sales report download
description: Reporting for real estate customers.
operationId: tenantsalesreportdownload
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
- {$ref: '#/components/parameters/StartDateParam'}
- {$ref: '#/components/parameters/EndDateParam'}
responses:
'200':
description: Request successful.
content:
application/json:
examples:
ResponseExample:
summary: Schedule
$ref: '#/components/examples/TenantSalesReportingDownloadResponse'

'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/TenantSalesReportDownload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/UserDataUpload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: User Data Upload
summary: User Data Upload
description: Upload users to SnapPay
operationId: userdataupload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
users:
type: array
items:
required: [userid,firstname,lastname,email,usertypename,usergroupname]
properties:
userid:
type: string
description: User ID
example: "user01"
firstname:
type: string
description: First Name
example:  First
lastname:
type: string
description: Last name
example: Last
email:
type: string
description: Email ID
example: first.last@company.com
usertypename:
type: string
description: User type name
example: CSR
usergroupname:
type: string
description: User group name
example: CSR
isactive:
type: string
description: Active flag
example: "Y"
effectivefrom:
type: string
description: Effective from date
example: "2028-12-31"
effectivetodate:
type: string
description: Effectove to date
example: "2028-12-31"
phone:
type: string
description: Phone number
example: "123-456-7890"
forcepasswordreset:
type: string
description: Force password reset flag
example: "Y"
forcetermsandconditions:
type: string
description: Force terms and conditions flag
example: "N"
devicegroup:
type: string
description: Device group name
example: "Device group"
deleteuser:
type: string
description: Delete user flag
example: "N"
customers:
type: array
items:
required: [customerid,associationtype]
properties:
customerid:
type: string
description: CustomerID
example: "100"
associationtype:
type: string
description: Address type (shipto or soldto)
example: "Shipto"
isdefault:
type: string
description: Default flag for customer-user association
example: "Y"
companycurrency:
type: array
items:
type: object
properties:
company:
type: string
description: >-
Company code from the SnapPay portal or ERP system
example: "100"
currency:
type: string
description: >-
Currency code for the transaction.
example: "USD"
examples:
Multiple User Records:
summary: Multiple User Records
$ref: '#/components/examples/UserDataUploadRequest'
Using Company Currency:
summary: Using Company Currency
$ref: '#/components/examples/UserDataUploadUsingCompanyCurreny'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: string
description: Account ID
example: >-
1000000001
requestid:
type: integer
description: Request ID
example: 16290
apiname:
type: string
description: API Name
example: UserDataUpload
status:
type: string
description: API execution status
example: "Y"
message:
type: string
description: Message
example: "Request received."
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/UserDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/TransactionUpdate:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Transaction update
summary: Transaction update
description: To update the message for transaction
operationId: transactionupdate
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
message:
type: string
description: Message to update
example: "Transaction Successful–Payment modified in ERP"
paymentdata:
type: array
items:
required: [paymentheaderid,paymenttransactionid]
properties:
paymentheaderid:
type: number
description: Payment header ID
example: 47294
paymenttransactionid:
type: number
description: Payment transaction ID
example: 1540010178
examples:
With multiple payments:
summary: With multiple payments
$ref: '#/components/examples/TransactionUpdateRequest'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}

responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
message:
type: string
description: Return message
example: "Transaction updated successfully"
status:
type: string
description: Status
example: "Y"
requestid:
type: number
description: Request ID
example: 16156
apiname:
type: string
description: API name
example: "TransactionUpdate"
paymentdata:
type: array
items:
properties:
paymentheaderid:
type: number
description: Payment header ID
example: 47294
paymenttransactionid:
type: number
description: Payment transaction ID
example: 1540010178
status:
type: string
description: Status
example: "Y"
examples:
With multiple payments:
summary: With multiple payments
$ref: '#/components/examples/TransactionUpdateResponse'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/TransactionUpdate401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/authcard:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Auth Card
summary: Auth Card
description: To authorize a card
operationId: AuthCard
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
amount:
type: number
description: Amount
example: 100
includeSignature:
type: string
description: Include Signature flag
example: "false"
includeAmountDisplay:
type: string
description: Include amount display flag
example: "true"
beep:
type: string
description: Beep flag
example: "false"
aid:
type: string
description: AID
example: "credit"
includeAVS:
type: string
description: Include AVS flag
example: "true"
capture:
type: string
description: Capture flag
example: "true"
orderId:
type: string
description: Order ID
example: "06252019"
userFields:
type: array
items:
properties:
UDF1:
type: string
description: UDF1
example: "Jean-Luc Picard"
UDF2:
type: string
description: UDF2
example: "47AT"
clearDisplayDelay:
type: string
description: Clear display delay
example: "500"
examples:
PIN Debit:
summary: PIN Debit
$ref: '#/components/examples/AuthCardPINDebit'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
token:
type: string
description: Token
example: "9516927123456789"
expiry:
type: string
description: Expiry
example: "1225"
name:
type: string
description: Name
example: "GIFT/CARD"
batchid:
type: string
description: Batch ID
example: "349"
retref:
type: string
description: Return reference
example: "176574265188"
avsresp:
type: string
description: AVS response
example: "Z"
respproc:
type: string
description: Respproc
example: "RPCT"
amount:
type: string
description: Amount
example: "1.00"
resptext:
type: string
description: Response text
example: "Approval"
authcode:
type: string
description: Auth code
example: "PPS230"
respcode:
type: string
description: Response code
example: "000"
merchid:
type: string
description: Merchant ID
example: "123456789"
cvvresp:
type: string
description: CVV response
example: "P"
respstat:
type: string
description: Response stat
example: "A"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/AuthCard401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/authmanual:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Auth Card Manual
summary: Auth Card Manual
description: To authorize a card for manual entry
operationId: AuthCardManual
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
amount:
type: number
description: Amount
example: 100
includeSignature:
type: string
description: Include Signature flag
example: "false"
includeAmountDisplay:
type: string
description: Include amount display flag
example: "true"
beep:
type: string
description: Beep flag
example: "false"
includeAVS:
type: string
description: Include AVS flag
example: "true"
includeCVV:
type: string
description: Include CVV flag
example: "true"
capture:
type: string
description: Capture flag
example: "true"
gzipSignature:
type: string
description: gzipSignature flag
example: "false"
orderId:
type: string
description: Order ID
example: "06252019"
clearDisplayDelay:
type: string
description: Clear display delay
example: "500"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
token:
type: string
description: Token
example: "9516927123456789"
expiry:
type: string
description: Expiry
example: "1225"
batchid:
type: string
description: Batch ID
example: "349"
retref:
type: string
description: Return reference
example: "176574265188"
avsresp:
type: string
description: AVS response
example: "Z"
respproc:
type: string
description: Respproc
example: "RPCT"
amount:
type: string
description: Amount
example: "1.00"
resptext:
type: string
description: Response text
example: "Approval"
authcode:
type: string
description: Auth code
example: "PPS230"
respcode:
type: string
description: Response code
example: "000"
merchid:
type: string
description: Merchant ID
example: "123456789"
cvvresp:
type: string
description: CVV response
example: "P"
respstat:
type: string
description: Response stat
example: "A"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/AuthManual401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/connect:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Connect
summary: Connect
description: Connect to device
operationId: Connect
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
force:
type: string
description: Force
example: "true"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
X-CardConnect-SessionKey:
type: string
description: Card connect session key
example: "72eb45c4e6034aa1b5c5ba0532209a87;expires=2022-11-10T12:46:16.934323Z"

'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed

$ref: '#/components/examples/Connect401Response'
'403':
description: Forbidden.
content:
application/json:
schema:
type: object

'429': {$ref: '#/components/responses/TooManyRequest'}
'500':
description: 'Server Error'
content:
application/json:
schema:
type: object
properties:
errorMessage:
type: string
description: Error message
example: "Terminal request timed out"
errorCode:
type: string
description: Error code
example: "1"
/P2PE/disconnect:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Disconnect
summary: Disconnect
description: Disconnect session
operationId: disconnect
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object

'400':
description: Bad Request.
content:
application/json:
schema:
type: object
properties:
errorCode:
type: string
description: Error code
example: "1"
errorMessage:
type: string
description: Error message
example: "Session key for hsn 18100PP84012345 was not valid"
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Disconnect401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500':
description: 'Server Error'
content:
application/json:
schema:
type: object
properties:
errorMessage:
type: string
description: Error message
example: "Terminal request timed out"
errorCode:
type: string
description: Error code
example: "1"
/P2PE/getPanPadVersion:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Get Panpad version
summary: Get Panpad version
description: To authorize a card for manual entry
operationId: getPanPadVersion
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
version:
type: string
description: Error code
example: "01060040"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/listTerminals:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: List Terminals
summary: List Terminal
description: To get the list of configured HSN for cardconnect merchant
operationId: listterminal
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "12452589"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
terminals:
type: string
description: Terminals
example:
- "17217SC81316999"
- "18145PP21498843"
- "18238PP21557324"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ListTerminals401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/ping:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Ping
summary: Ping
description: Ping request
operationId: ping
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
connected:
type: string
description: Connection flag
example: "true"

'400': {$ref: '#/components/responses/InvalidRequest'}
'401': {$ref: '#/components/responses/Unauthorized'}
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/preconnect:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Preconnect
summary: Preconnect
description: Preconnect
operationId: preconnect
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
errorCode:
type: string
description: Error code
example: "3"
errorMessage:
type: string
description: Error message
example: "Merchant is not configured for two-factor authentication"

'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/PreConnect401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/readCard:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Read Card
summary: Read Card
description: To read a card
operationId: readcard
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
amount:
type: number
description: Amount
example: 100
includeSignature:
type: string
description: Include Signature flag
example: "false"
includeAmountDisplay:
type: string
description: Include amount display flag
example: "true"
beep:
type: string
description: Beep flag
example: "false"
aid:
type: string
description: AID
example: "credit"
gzipSignature:
type: string
description: gzipSignature flag
example: "false"
signatureFormat:
type: string
description: Signature format
example: "png"
signatureImageType:
type: string
description: Signature image type
example: "rgb"
signatureDimensions:
type: string
description: Signature dimensions
example: "320,450"
confirmAmount:
type: string
description: Confirm amount flag
example: "true"
examples:
PIN Debit:
summary: PIN Debit
$ref: '#/components/examples/ReadCardPINDebit'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
token:
type: string
description: Token
example: "9516927123456789"
expiry:
type: string
description: Expiry
example: "1225"
name:
type: string
description: Name
example: "GIFT/CARD"

'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ReadCard401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/readConfirmation:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Read confirmation
summary: Read confirmation
description: Read confirmation
operationId: readconfirmation
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
beep:
type: string
description: Beep flag
example: "false"
prompt:
type: string
description: Message to prompt
example: "Please confirm"

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
confirmed:
type: string
description: Confirmed flag
example: "true"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ReadConfirmation401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/readInput:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Read input
summary: Read input
description: Read input
operationId: readinput
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
beep:
type: string
description: Beep flag
example: "false"
prompt:
type: string
description: Message to prompt
example: "Enter amount"
format:
type: string
description: Format
example: "Amount"

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
input:
type: string
description: Confirmed flag
example: "6304299823"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ReadInput401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/readManual:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Read manual
summary: Read manual
description: Read manual
operationId: readmanual
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
beep:
type: string
description: Beep flag
example: "false"
includeSignature:
type: string
description: Include signature flag
example: "false"
includeExpirationDate:
type: string
description: Include expiration date
example: "true"

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
token:
type: string
description: Token
example: "9548540556123456"
expiry:
type: string
description: Card expiry date
example: "1225"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ReadManual401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/readSignature:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Read signature
summary: Read signature
description: Read signature
operationId: readsignature
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"

prompt:
type: string
description: Message to prompt
example: "Please confirm"

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
signature:
type: string
description: Signature
example: "H4sICAAAAAAC/1NJRy5CTVAA7JihTsRAFEXPpElrJru2glBLUFUowiZ4/qEoHKAIrqP4Ij6gn1KF3gRTsdmHgE3A3icqeMc2J9OZefPmtrd3j5cAcANcAHOCdyCRAOh/nv/GzAiCIAiCIAiCIAiCf0xjk+yOZrOopoWdLZpbFejE166/5yyNnAHY2VFw29NqCyvWn9ZMcAdHaXhcvaioiu52urs9ymqyvT7bRZ/thnXcdiW3l6wDAM/Sxh4BkrS7VQMwSg2yrgC0f5Y5FUDry20q8tltU2nmregyNZ9iR++Z6m5RC2rKG7kYh9w4XLXNedyWISfxyj5jyGJZsWHI6nXSTEOWG/N+qOVuc+1wtw63mnWXvcN9dbhPDvfB4d6/OfLNh8N9cWSjq5Xc85VcPWukspbrOL9yBu0d7q4k2e3MipquGM0OyPl3NE92dny7BkEQBEEQBEEQ/OFrAH0pxvFuKgAA"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ReadSignature401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/tip:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Tip
summary: Tip
description: Tip
operationId: tip
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
amount:
type: string
description: Amount
example: "1000"
prompt:
type: string
description: Message to prompt
example: "Would you like to leave a tip?"
tipPercentPresets:
type: number
description: Tip percent preset
example:
- 10
- 15
- 20

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
amount:
type: string
description: Amount
example: "1000"
tip:
type: string
description: Tip amount
example: "150"
total:
type: string
description: Total amount
example: "1150"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Tip401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/cancel:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Cancel
summary: Transaction update
description: Cancel
operationId: cancel
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Cancel401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/display:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Display
summary: Display
description: Display
operationId: display
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
text:
type: string
description: Text
example: "Display"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Display401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/clearDisplay:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Clear display
summary: Clear display
description: Clear display
operationId: clearDisplay
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/ClearDisplay401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/P2PE/dateTime:
post:
tags:
- Terminal Pass through API
x-group-name: Terminal Pass through API
x-proxy-name: Datetime
summary: Datetime
description: Datetime
operationId: datetime
requestBody:
content:
application/json:
schema:
type: object
properties:
merchantId:
type: string
description: Merchant ID
example: "1245258"
hsn:
type: string
description: Device ID
example: "18100PP84021655"
dateTime:
type: string
description: Datetime
example: "2019-06-25T21:41:45"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/SessionKeyParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/DateTime401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/v2/GetPricing:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Pricing
summary: Get Pricing
description: >-
GetPricing API is integrated to use pricing technology of gateway. It is used to get fee details (total surcharge amount, surcharge percentage etc.) from card, amount and mid.
Supported payment gateway is CardX.
operationId: getpricing
requestBody:
content:
application/json:
schema:
type: object
properties:
data:
type: object
properties:
type:
type: string
description: Type
example: "Pricing"
attributes:
type: object
properties:
cardNumber:
type: string
description: Credit Card number to price
example: "5401680000000003"
amount:
type: number
description: Amount due before fee
example: 500
merchantIdentifier:
type: string
description: >-
Assigned identifier for the merchant to implement the correct industry pricing program
example: "1D91B84E"
country:
type: string
description: Country
example: "USA"
state:
type: string
description: State
example: "IL"
postalcode:
type: string
description: Postal code
example: "60603"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/MerchantIDParam'}

responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
data:
type: object
properties:
type:
type: string
description: Type
example: "Pricing"
attributes:
type: object
properties:
surchargePercent:
type: number
description: >-
Percent surcharge actually applied. Do not display unless rounding to one or two decimal places (e.g., 3.5 or 3.99). This avoids confusion for the customer
example: 2.999977340004989
surchargeAmount:
type: number
description: >-
Actual amount of surcharge that should be applied. Do not calculate the surchargeAmount yourself using the surchargePercent provided. Different systems using different algorithms for rounding. Always accepting the provided surchargeAmount is necessary for penny-accurate reconciliation
example: 15
surchargeExempt:
type: boolean
description: Surcharge exemption flag
example: false
cardType:
type: string
description: Credit card type
example: "Credit"
brand:
type: string
description: Credit card brand
example: "Mastercard"
bin:
type: string
description: ""
example: "540168"
commercialIndicator:
type: string
description: Commercial Indicator
example: "consumer"
debitCategory:
type: string
description: Debit Category
example: ""
countryIssued:
type: string
description: Card issuing Country name
example: "United States of America"
uuid:
type: string
description: Payment gateway internal pricing indicator
example: "7d9bebd9-cf2b-4b52-80b3-bdfc7572582f"


'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetPaymentMethodsOnRequest:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Payment Methods On Request
summary: Get Payment Methods On Request
description: >-
The GetPaymentMethodsOnRequest API returns the results of the GetRequestID and SnapPay interaction to allow for further business processing like completing the order creation process and call SnapPay API for further processing.
operationId: getpaymentmethodsonrequest
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
type: number
description: Account ID
example: 1000000001
token:
type: string
description: Request ID
example: "a07ac61b-33b5-e811-896d-000c29cce4c0"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
token:
type: string
description: Request ID
example: "a07ac61b-33b5-e811-896d-000c29cce4c0"
message:
type: string
description: Return message
example: "Payment methods retrieved successfully."
emailtoken:
type: string
description: Email token
example: "N"
emailtokenid:
type: string
description: Email token id
example: ""
emailtokenreceived:
type: string
description: Email token received
example: "N"
paymentmethods:
type: array
items:
type: object
properties:
paymentmethodid:
type: number
description: SnapPay Payment Method ID for Credit Card or ACH
example: 12590
type:
type: string
description: Visa / MC / Discover / AMEX / Checking / Saving
example: "Checking"
last4:
type: string
description: Last 4 digits of credit card or bank account number
example: "6765"
routingnumber:
type: string
description: Bank Routing Number
example: "123123123"
tokenid:
type: string
description: Payment Gateway Token ID for Credit Card or ACH
example: "123414048967"
firstname:
type: string
description: First name
example: "firstname"
lastname:
type: string
description: Last name
example: "lastname"
expirationmonth:
type: number
description: Expiration Month
example: 12
expirationyear:
type: string
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: "495 N Commons Dr"
city:
type: string
description: City
example: "Aurora"
state:
type: string
description: State
example: "IL"
zip:
type: string
description: Zipcode
example: "60540"
country:
type: string
description: Country
example: "US"
phonenumber:
type: string
description: Phoneumber
example: "123456789"
email:
type: string
description: Email address
example: "first.last@company.com"

examples:
Using Dual MID:
summary: Using Dual MID
$ref: '#/components/examples/GetPMOnRequestDualMID'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetPMOnRequest401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/GetSavedPaymentMethods:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Saved Payment Methods
summary: Get Saved Payment Methods
description: >-
GetSavedPaymentMethods API
operationId: getsavedpaymentmethods
requestBody:
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
userid:
type: string
description: User ID
example: "user01"
company:
type: string
description: Company code
example: "100"
currency:
type: string
description: Currency code
example: "USD"
branchplant:
type: string
description: Branch plant
example: "M30"
ordertype:
type: string
description: Order type
example: "SO"
paymentmethod:
type: string
description: Payment method
example: "CC"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
message:
type: string
description: Return message
example: "Payment details retrieved successfully."
paymentmethods:
type: array
items:
type: object
properties:
paymentmethodid:
type: number
description: SnapPay Payment Method ID for Credit Card or ACH
example: 12590
type:
type: string
description: Visa / MC / Discover / AMEX / Checking / Saving
example: "Checking"
last4:
type: string
description: Last 4 digits of credit card or bank account number
example: "6765"

tokenid:
type: string
description: Payment Gateway Token ID for Credit Card or ACH
example: "123414048967"
firstname:
type: string
description: First name
example: "firstname"
lastname:
type: string
description: Last name
example: "lastname"
expirationmonth:
type: number
description: Expiration Month
example: 12
expirationyear:
type: string
description: Expiration Year
example: 2029
addressline1:
type: string
description: Address Line 1
example: "495 N Commons Dr"
city:
type: string
description: City
example: "Aurora"
state:
type: string
description: State
example: "IL"
zip:
type: string
description: Zipcode
example: "60540"
country:
type: string
description: Country
example: "US"
phonenumber:
type: string
description: Phoneumber
example: "123456789"
email:
type: string
description: Email address
example: "first.last@company.com"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/GetSavedPM401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/v1/ivr:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: IVR
summary: IVR
description: >-
IVR API
operationId: ivr
requestBody:
content:
application/json:
schema:
type: object
properties:
method:
type: string
description: Method
example: "charge"
transaction_id:
type: string
description: Transaction ID
example: "1234567"
cardnumber:
type: string
description: Card Number
example: "4024007176766268"
cvv:
type: string
description: CVV
example: "123"
expiry_month:
type: string
description: Expiration month
example: "12"
expiry_year:
type: string
description: Expiration year
example: "2028"
description:
type: string
description: Description
example: "test"
amount:
type: string
description: Amount
example: "25.52"
currency_code:
type: string
description: Currency code
example: "USD"
postal_code:
type: string
description: Postal code
example: "94111"
parameters:
type: object
properties:
snappay_action:
type: string
description: Transaction type
example: "authorize"
snappay_accountid:
type: number
description: Account ID
example: 1000000001
snappay_merchantid:
type: string
description: Merchant ID
example: "120991234"
snappay_userid:
type: string
description: User ID
example: "testuser"
snappay_card_type:
type: string
description: Card type
example: "VISA"
snappay_mode:
type: string
description: Payment Mode
example: "CC"
snappay_orderid:
type: string
description: Order ID
example: "ORD-112521-01"
snappay_invoiceid:
type: string
description: Invoice ID
example: "INV-112521-01"
snappay_purchaseorder:
type: string
description: Purchase Order
example: "PO-112521-01"
snappay_level3:
type: array
items:
type: object
properties:
linenumber:
type: string
description: Line number
example: "1.00"
productcode:
type: string
description: Product code
example: "ROS01"
taxrate:
type: string
description: Tax rate
example: "0.073"
quantity:
type: string
description: Quantity
example: "2"
itemdescriptor:
type: string
description: Item descriptor
example: "Mixed Bouquet"
unitcost:
type: string
description: Unit cost
example: "30.75"
lineitemtotal:
type: string
description: Line item total
example: "65.96"
taxamount:
type: string
description: Tax amount
example: "4.46"
commoditycode:
type: string
description: Commodity code
example: ""
unitofmeasure:
type: string
description: Unit of measurement
example: "EA"
examples:
Tokenize:
summary: Tokenize
$ref: '#/components/examples/IVRTokenizeRequest'
Authorize:
summary: Authorize
$ref: '#/components/examples/IVRAuthRequest'
Charge:
summary: Charge
$ref: '#/components/examples/IVRChargeRequest'
Authorize with Surcharge:
summary: Authorize with Surcharge
$ref: '#/components/examples/IVRAuthRequestWithSurcharge'
Charge with Surcharge:
summary: Charge with Surcharge
$ref: '#/components/examples/IVRChargeRequestWithSurcharge'

parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
charge_id:
type: string
description: Charge ID
example: "84588209024"
parameters:
type: object
properties:
snappay_action:
type: string
description: Transaction type
example: "Authorize"
snappay_accountid:
type: string
description: Account ID
example: "1000000001"
snappay_response.status:
type: string
description: Status
example: "Y"
snappay_response.message:
type: string
description: Message
example: "Transaction successful."
snappay_response.purchaseorder:
type: string
description: Purchase order number
example: "PO-AU-24"
snappay_response.cards.merchantid:
type: string
description: Merchant ID
example: "541617666247"
snappay_response.cards.tokenid:
type: string
description: Token ID
example: "1370111581973568"
snappay_response.cards.returncode:
type: string
description: Return code
example: "00"
snappay_response.cards.returndescription:
type: string
description: Return Description
example: "APPROVAL"
snappay_response.cards.pgtransactionid:
type: string
description: Payment gateway transaction ID
example: "12588201234"
snappay_response.cards.paymenttransactionid:
type: string
description: SnapPay Payment Transaction ID
example: "10000012345"
snappay_response.cards.authorizationcode:
type: string
description: Authorization code
example: "OK5288"
snappay_response.cards.status:
type: string
description: Card status
example: "Y"
snappay_response.cards.transactiondate:
type: string
description: Transaction date
example: "11/01/2022 07:13:47 AM"
snappay_response.cards.procrespcode:
type: string
description: Procrespcode
example: ""
snappay_response.cards.scverification:
type: string
description: SC Verification
example: "Y"
snappay_response.cards.addressverification:
type: string
description: Address verification
example: "Y"
snappay_response.cards.transactionamount:
type: string
description: Transaction amount
example: "25"
snappay_response.cards.currency:
type: string
description: Currency
example: "USD"
snappay_response.cards.totaltransactionamount:
type: string
description: Total transaction amount
example: "25"
snappay_response.cards.feeamount:
type: string
description: Fee amount
example: "0"
snappay_response.cards.feevalue:
type: string
description: Fee value
example: "0"
examples:
Authorize with Surcharge:
summary: Authorize with Surcharge
$ref: '#/components/examples/IVRAuthResponseWithSurcharge'
Charge with Surcharge:
summary: Charge with Surcharge
$ref: '#/components/examples/IVRChargeResponseWithSurcharge'
Failure Response:
summary: Failure Response
$ref: '#/components/examples/IVRFailedResponse'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/IVR401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/AddIVRPaymentMethodsOnRequest:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Add IVR Payment Methods
summary: Add IVR Payment Methods
description: >-
Add IVR Payment methods on request
operationId: addivrpaymentmethods
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,paymentmethodid]
properties:
accountid:
description: Account ID
type: number
example: 1000000001
token:
description: Request Token ID
type: string
example: 1870de80-072a-ed11-bd6e-0050f2c73a18
userid:
description: User ID
type: string
example: "user"
paymentmethodid:
description: Payment Method ID
type: string
example: 123
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
token:
description: Token ID
type: string
example: "1870de80-072a-ed11-bd6e-0050f2c73a18"
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Return message
example: Information stored successfully.
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/AddIVRPMRequest401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/UploadStatus:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Upload Status
summary: Upload Status
description: >-
To check the status of upload APIs
operationId: uploadstatus
requestBody:
content:
application/json:
schema:
type: object
required: [accountid]
properties:
accountid:
description: Account ID
type: number
example: 1000000001
requestid:
description: Request ID
type: string
example: 2088
apiname:
description: API Name
type: string
example: "CustomerDataUpload"
email:
description: Email address
type: string
example: "first.last@company.com"
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
description: Request ID
type: string
example: "1870de80-072a-ed11-bd6e-0050f2c73a18"
apiname:
description: API name to check its status
type: string
example: "CustomerDateUpload"
status:
type: string
description: Y or N
example: 'Y'
message:
type: string
description: Return message
example: "Customer Data Uploaded Succesfully."
datareceived:
type: string
description: Customer count received in request
example: "100"
datainserted:
type: string
description: Number of customer inserted.
example: "100"
dataupdated:
type: string
description: Updated customer count
example: "0"
datasent:
type: string
description: Data sent
example: "0"
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/UploadStatus401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/interop/getfee:
post:
tags:
- APIs without User Interaction
x-group-name: APIs without User Interaction
x-proxy-name: Get Fee
summary: Get Fee
description: >-
To return the fee details for the request MID and transaction amount.
operationId: getfee
requestBody:
content:
application/json:
schema:
type: object
required: [accountid,tokenid,zip,feetype]
properties:
accountid:
description: Account ID
type: number
example: 1000000001
merchantid:
description: Merchant ID
type: string
example: 123495144562
transactionamount:
description: Transaction amount
type: string
example: "100.00"
tokenid:
description: Token ID
type: string
example: "1234444926857116"
zip:
description: Zip code
type: string
example: "65214"
feetype:
description: Fee Type
type: string
example: "Surcharge"
examples:
Fee type Service:
summary: Fee type Service
$ref: '#/components/examples/GetFeeServiceTypeRequest'
Fee type Surcharge:
summary: Fee type Surcharge
$ref: '#/components/examples/GetFeeSurchargeTypeRequest'
parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
- {$ref: '#/components/parameters/HMACParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
feeamount:
description: Fee Amount
type: number
example: 3
message:
description: Return message
type: string
example: "Fee amount retrieved successfully."
status:
type: string
description: Y or N
example: 'Y'
feetype:
type: string
description: Fee type
example: "Surcharge"
feeformat:
type: string
description: Fee format
example: "Percentage"
feevalue:
type: string
description: Fee value.
example: "100"
cardtype:
type: string
description: Card type
example: "0"
surchargeapplicable:
type: string
description: Data sent
example: "0"
examples:
Fee type Service:
summary: Fee type Service
$ref: '#/components/examples/GetFeeServiceTypeResponse'
Fee type Surcharge:
summary: Fee type Surcharge
$ref: '#/components/examples/GetFeeSurchargeTypeResponse'
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/Common401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}
/api/paymentdataupload:
post:
tags:
- ERP Agents
x-group-name: ERP Agents
x-proxy-name: Payment Data Upload
summary: Payment Data Upload
description: >-
The PaymentDataUpload API can upload all payment transactions that have occurred outside the SnapPay portal. Depending on account configuration, this can include payments made through ERP systems like JDE, Oracle, SAP, and other portals, as well as through interoperability APIs. Payment information includes invoice details, providing a complete picture of the intended accounting for the payment.
operationId: paymentdataupload
requestBody:
content:
application/json:
schema:
type: object
required: [accountid, paymentheaderid]
properties:
accountid:
type: number
description: >-
This field represents the unique identifier of the account.
example: 1000000001
email:
type: string
description: >-
This field represents the email address associated with the account.
example: first.last@company.com
paymentdata:
type: object
properties:
paymentheader:
type: array
items:
type: object
properties:
paymentheaderid:
type: number
description: >-
The unique identifier for payment header.
example: 10001271
sourcetype:
type: string
description: >-
Specifies the source of payment transaction
example: "I"
customerid:
type: string
description: >-
Customer ID from the ERP system or eCommerce application.
example: "100"
supplierid:
type: string
description: >-
Supplier ID from the ERP system or eCommerce application.
example: "300"
companycode:
type: string
description: >-
SnapPay company code, sourced from the SnapPay portal or the ERP system.
example: "00200"
transactionamount:
type: number
description: >-
Amount for payment transaction
example: 100.1
comments:
type: string
description: >-
Additonal comments about payment.
example: ""
paymentdate:
type: string
description: >-
Payment transaction date.
example: "01/20/2025 10:19:37 AM"
paymentdetails:
type: array
items:
type: object
properties:
invoicenumber:
type: string
description: >-
The unique identifier for the invoice.
example: "13069"
invoicetype:
type: string
description: >-
Specifies the invoice type.
example: "RI"
linenumber:
type: string
description: >-
Represents the line number in invoice.
example: "2"
fiscalyear:
type: string
description: >-
Indicates the fiscal year for the invoice.
example: "2025"
paidamount:
type: number
description: >-
The amount paid for an invoice.
example: 25.00
paidtax:
type: number
description: >-
The amount paid for tax.
example: 0.5
discounttaken:
type: number
description: >-
The amount of discount that has been taken
example:  0
discountapplied:
type: number
description: >-
The applied discount amount for a particular payment or invoice.
example: 0
comments:
type: string
description: >-
It is used to provide any relevant information or instructions regarding the invoice.
example: ""
supplierinvoicenumber:
type: string
description: >-
The invoice number associated with the supplier for a payment transaction
example: ""
statementid:
type: string
description: >-
The unique identifier or reference number of the statement associated with the payment transaction.
example: 227
statementdate:
type: string
description: >-
The date of the statement associated with the payment transaction.
paymenttransaction:
type: object
properties:
transactionid:
type: string
description: >-
The unique identifier for the transaction returned by payment gateway.
example: "1002148"
currencycode:
type: string
description: >-
Currency code for the transaction.
example: "USD"
pgtransactiontype:
type: string
description: >-
The type of transaction conducted through the payment gateway.
example: "S"
merchantid:
type: string
description: >-
The unique identifier for the merchant.
example: "XXXXXXXXXXX"
transactionamount:
type: number
description: >-
The amount of payment transaction.
example: 120.1
authorizationnumber:
type: string
description: >-
the unique identifier or code assigned to an authorized payment transaction.
example: "SDRD"
feetype:
type: string
description:  >-
the type or category of fee charged for the transaction.
example: "Service"
feeamount:
type: number
description: >-
The amount of fee charged for the transaction.
example: 24
feevalue:
type: number
description: >-
The number used to calculate the fee amount based on fee format. format can be percentage or flat.
example: "20"
feeformat:
type: string
description: >-
The format of calculating the fee amount.
example: "Percentage"
userfields:
type: array
items:
type: object
properties:
custom0:
type: string
description: >-
Custom field 1
example: "UDF0"
custom1:
type: string
description: >-
Custom field 2
example: "UDF1"
custom2:
type: string
description: >-
Custom field 3
example: "UDF2"
custom3:
type: string
description: >-
Custom field 4
example: "UDF3"
custom4:
type: string
description: >-
Custom field 5
example: "UDF4"
custom5:
type: string
description: >-
Custom field 6
example: "UDF5"
custom6:
type: string
description: >-
Custom field 7
example: "UDF6"
custom7:
type: string
description: >-
Custom field 8
example: "UDF7"
custom8:
type: string
description: >-
Custom field 9
example: "UDF8"
custom9:
type: string
description: >-
Custom field 10
example: "UDF9"
paymentmethod:
type: object
properties:
mode:
type: string
description: >-
The specific mode of payment chosen for the transaction
example: "wire"
description:
type: string
description: >-
The description of payment.
type:
type: string
description: >-
Type of credit card or bank account
example: "MC"
last4:
type: string
description: >-
Last four digits of the credit card (for credit card payments) or bank account number (for ACH payments), populated upon successful completion.
example: "1111"
routingnumber:
type: string
description: >-
The routing number for account.
example: "123456789"
tokenid:
type: string
description: >-
The Payment Gateway Token ID used for the transaction.
example: "XXXXXXXXXXX"
paymentgateway:
type: string
description: >-
Payment gateway name.
example: "CardConnect"
firstname:
type: string
description: >-
The first name of the cardholder or account holder.
example: "first"
lastname:
type: string
description: >-
The last name of the cardholder or account holder.
example: "last"
expirationmonth:
type: number
description: >-
Expiration month for credit card transactions.
example: 08
expirationyear:
type: number
description: >-
Expiration year for credit card transactions.
example: 2029
addressline1:
type: string
description: >-
Billing Address Line 1 from the card/bank account holder.
example: ""
city:
type: string
description: >-
Billing city from the card/bank account holder.
example: "Chicago"
state:
type: string
description: >-
Billing state from the card/bank account holder.
example: "IL"
zip:
type: number
description: >-
Billing ZIP code from the card/bank account holder.
example: 60605
country:
type: string
description: >-
Billing country from the card/bank account holder.
example: "US"
phonenumber:
type: string
description: >-
Phone number of the card/bank account holder.
example: "123-456-6789"
email:
type: string
description: >-
Billing email address from the card/bank account holder.
example: "first.last@company.com"


parameters:
- {$ref: '#/components/parameters/AccountIDParam'}
responses:
'200':
description: Request successful.
content:
application/json:
schema:
type: object
properties:
accountid:
type: number
description: Account ID
example: 1000000001
requestid:
type: number
description: Request ID
example: 16290
apiname:
type: string
description: API Name
example: PaymentDataUpload
status:
type: string
description: API execution status
example: "Y"
message:
type: string
description: Message
example: "Request received."
'400': {$ref: '#/components/responses/InvalidRequest'}
'401':
description: Authentication Failed
content:
application/json:
examples:
Authentication Failed:
summary: Authentication Failed
$ref: '#/components/examples/PaymentDataUpload401Response'
'429': {$ref: '#/components/responses/TooManyRequest'}
'500': {$ref: '#/components/responses/ServerError'}

